package randoop.bin;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import java.time.LocalDate;

public class RegressionTest {
    @Test
    public void test1() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
    }
    @Test
    public void test3() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
    }
    @Test
    public void test5() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
    }
    @Test
    public void test6() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
    }
    @Test
    public void test7() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
    }
    @Test
    public void test8() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
    }
    @Test
    public void test9() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
    }
    @Test
    public void test10() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
    }
    @Test
    public void test11() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
    }
    @Test
    public void test12() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string446 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string446, "VALEU");
    }
    @Test
    public void test13() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
    }
    @Test
    public void test14() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
    }
    @Test
    public void test15() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
    }
    @Test
    public void test16() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
    }
    @Test
    public void test17() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
    }
    @Test
    public void test18() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean348 = calculadora353.menor(250, 0);
        Assertions.assertEquals(boolean348, false);
    }
    @Test
    public void test19() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        double double268 = calculadora353.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double268, 1.5786884422110552);
    }
    @Test
    public void test20() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean154 = calculadora353.menor(-250, 250);
        Assertions.assertEquals(boolean154, true);
    }
    @Test
    public void test21() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
    }
    @Test
    public void test23() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
    }
    @Test
    public void test26() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
    }
    @Test
    public void test27() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
    }
    @Test
    public void test28() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        double double62 = calculadora353.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double62, 108.64159);
    }
    @Test
    public void test29() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        double double62 = calculadora353.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double62, 108.64159);
        int int524 = calculadora353.mulInt(0, -1000);
        Assertions.assertEquals(int524, 0);
    }
    @Test
    public void test30() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string446 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string446, "VALEU");
        java.lang.String string991 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string991, "nice");
    }
    @Test
    public void test31() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
    }
    @Test
    public void test32() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
    }
    @Test
    public void test33() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
    }
    @Test
    public void test34() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
    }
    @Test
    public void test35() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
    }
    @Test
    public void test36() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
    }
    @Test
    public void test37() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        int int852 = calculadora353.divInt(1000, 250);
        Assertions.assertEquals(int852, 4);
    }
    @Test
    public void test38() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
    }
    @Test
    public void test39() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
    }
    @Test
    public void test40() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
    }
    @Test
    public void test41() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
    }
    @Test
    public void test42() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
    }
    @Test
    public void test43() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
    }
    @Test
    public void test44() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
    }
    @Test
    public void test45() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
    }
    @Test
    public void test46() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
    }
    @Test
    public void test47() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
    }
    @Test
    public void test48() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
    }
    @Test
    public void test49() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
    }
    @Test
    public void test50() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
    }
    @Test
    public void test51() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
    }
    @Test
    public void test52() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
    }
    @Test
    public void test53() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
    }
    @Test
    public void test54() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
    }
    @Test
    public void test55() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean827 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean827, false);
    }
    @Test
    public void test56() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
    }
    @Test
    public void test57() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
    }
    @Test
    public void test58() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
    }
    @Test
    public void test59() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
    }
    @Test
    public void test60() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int519 = calculadora353.divInt(250, 1000);
        Assertions.assertEquals(int519, 0);
    }
    @Test
    public void test62() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
    }
    @Test
    public void test64() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean862 = calculadora353.menor(-1000, 1000);
        Assertions.assertEquals(boolean862, true);
    }
    @Test
    public void test65() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
    }
    @Test
    public void test66() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
    }
    @Test
    public void test67() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
    }
    @Test
    public void test68() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double954 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double954, 6.28318);
    }
    @Test
    public void test69() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
    }
    @Test
    public void test70() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
    }
    @Test
    public void test71() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
    }
    @Test
    public void test72() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        boolean boolean945 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean945, false);
    }
    @Test
    public void test73() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        boolean boolean943 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean943, false);
    }
    @Test
    public void test74() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        double double341 = calculadora353.mulDouble(3.14159, 105.5);
        Assertions.assertEquals(double341, 331.437745);
    }
    @Test
    public void test75() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        double double462 = calculadora353.subDouble(3.14159, 105.5);
        Assertions.assertEquals(double462, -102.35841);
    }
    @Test
    public void test76() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
    }
    @Test
    public void test77() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string33 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string33, "NICE");
    }
    @Test
    public void test78() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
    }
    @Test
    public void test79() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
    }
    @Test
    public void test80() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double527 = calculadora353.somaDouble(105.5, 10.953);
        Assertions.assertEquals(double527, 116.453);
    }
    @Test
    public void test81() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double442 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double442, 6.024150000000001);
    }
    @Test
    public void test82() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
    }
    @Test
    public void test83() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
    }
    @Test
    public void test84() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
    }
    @Test
    public void test85() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        double double551 = calculadora353.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double551, 0.6334372085472643);
    }
    @Test
    public void test86() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
    }
    @Test
    public void test87() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
    }
    @Test
    public void test88() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
    }
    @Test
    public void test89() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
    }
    @Test
    public void test90() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
    }
    @Test
    public void test91() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
    }
    @Test
    public void test92() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
    }
    @Test
    public void test93() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean597 = calculadora353.maior(100, -100);
        Assertions.assertEquals(boolean597, true);
    }
    @Test
    public void test94() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int28 = calculadora353.mulInt(0, 1000);
        Assertions.assertEquals(int28, 0);
    }
    @Test
    public void test95() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
    }
    @Test
    public void test96() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
    }
    @Test
    public void test97() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
    }
    @Test
    public void test98() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
    }
    @Test
    public void test99() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
    }
    @Test
    public void test100() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
    }
    @Test
    public void test101() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
    }
    @Test
    public void test102() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
    }
    @Test
    public void test103() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
    }
    @Test
    public void test104() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
    }
    @Test
    public void test105() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
    }
    @Test
    public void test106() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        double double858 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double858, Infinity);
    }
    @Test
    public void test107() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
    }
    @Test
    public void test108() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        double double398 = calculadora353.subDouble(0.0, 0.55);
        Assertions.assertEquals(double398, -0.55);
    }
    @Test
    public void test109() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
    }
    @Test
    public void test110() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        int int374 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int374, -125000);
    }
    @Test
    public void test111() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
    }
    @Test
    public void test112() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
    }
    @Test
    public void test113() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        boolean boolean50 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean50, true);
    }
    @Test
    public void test114() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
    }
    @Test
    public void test117() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean12 = calculadora353.menor(250, -500);
        Assertions.assertEquals(boolean12, false);
    }
    @Test
    public void test118() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
    }
    @Test
    public void test119() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        double double525 = calculadora353.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double525, 0.0);
    }
    @Test
    public void test120() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
    }
    @Test
    public void test121() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
    }
    @Test
    public void test122() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        java.lang.String string60 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string60, "hi");
    }
    @Test
    public void test123() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        int int250 = calculadora353.mulInt(0, 1000);
        Assertions.assertEquals(int250, 0);
    }
    @Test
    public void test125() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
        java.lang.String string2 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string2, "hello");
    }
    @Test
    public void test126() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        java.lang.String string744 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string744, "HELLO");
    }
    @Test
    public void test127() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean843 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean843, false);
    }
    @Test
    public void test128() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        double double352 = calculadora353.somaDouble(1.99, 0.0);
        Assertions.assertEquals(double352, 1.99);
    }
    @Test
    public void test129() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean357 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean357, false);
    }
    @Test
    public void test130() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        double double163 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double163, -3.54);
    }
    @Test
    public void test131() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean528 = calculadora353.menor(0, -500);
        Assertions.assertEquals(boolean528, false);
    }
    @Test
    public void test132() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
    }
    @Test
    public void test133() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
    }
    @Test
    public void test135() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
    }
    @Test
    public void test136() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
    }
    @Test
    public void test137() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        int int555 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int555, -1250);
    }
    @Test
    public void test138() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        boolean boolean558 = calculadora353.maior(1000, 250);
        Assertions.assertEquals(boolean558, true);
    }
    @Test
    public void test139() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        java.lang.String string810 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string810, "LOREM");
    }
    @Test
    public void test140() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        double double477 = calculadora353.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double477, 1.0945);
    }
    @Test
    public void test141() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean827 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean827, false);
        boolean boolean522 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean522, false);
    }
    @Test
    public void test142() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        java.lang.String string954 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string954, "nice");
    }
    @Test
    public void test143() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        int int786 = calculadora353.divInt(-250, -100);
        Assertions.assertEquals(int786, 2);
    }
    @Test
    public void test144() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        boolean boolean305 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean305, true);
    }
    @Test
    public void test145() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
    }
    @Test
    public void test147() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean962 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean962, false);
    }
    @Test
    public void test148() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean452 = calculadora353.or(true, boolean597);
        Assertions.assertEquals(boolean452, true);
    }
    @Test
    public void test149() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
    }
    @Test
    public void test150() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
    }
    @Test
    public void test151() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        java.lang.String string582 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string582, "ipsum");
    }
    @Test
    public void test152() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
    }
    @Test
    public void test153() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
    }
    @Test
    public void test154() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
    }
    @Test
    public void test155() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
    }
    @Test
    public void test156() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
    }
    @Test
    public void test157() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
    }
    @Test
    public void test159() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double285 = calculadora353.divDouble(0.0, -10.953);
        Assertions.assertEquals(double285, -0.0);
    }
    @Test
    public void test160() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
    }
    @Test
    public void test161() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
    }
    @Test
    public void test162() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        java.lang.String string278 = calculadora353.toUpCase(string603);
        Assertions.assertEquals(string278, STRING603);
    }
    @Test
    public void test163() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
    }
    @Test
    public void test165() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
    }
    @Test
    public void test166() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        java.lang.String string310 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string310, "IPSUM");
    }
    @Test
    public void test167() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean617 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean617, false);
    }
    @Test
    public void test168() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
    }
    @Test
    public void test169() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
    }
    @Test
    public void test170() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        java.lang.String string707 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string707, "hi");
    }
    @Test
    public void test171() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
    }
    @Test
    public void test172() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
    }
    @Test
    public void test173() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
    }
    @Test
    public void test174() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int278 = calculadora353.subInt(500, 500);
        Assertions.assertEquals(int278, 0);
    }
    @Test
    public void test175() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        int int212 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int212, -100000);
    }
    @Test
    public void test176() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        int int730 = calculadora353.mulInt(1000, 250);
        Assertions.assertEquals(int730, 250000);
    }
    @Test
    public void test178() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
    }
    @Test
    public void test179() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        int int461 = calculadora353.mulInt(500, 1000);
        Assertions.assertEquals(int461, 500000);
    }
    @Test
    public void test181() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        boolean boolean939 = calculadora353.maior(0, -1000);
        Assertions.assertEquals(boolean939, true);
    }
    @Test
    public void test182() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        int int209 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int209, 25000);
    }
    @Test
    public void test183() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean222 = calculadora353.menor(-250, 0);
        Assertions.assertEquals(boolean222, true);
    }
    @Test
    public void test184() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double775 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double775, 6.28318);
    }
    @Test
    public void test185() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean839 = calculadora353.maior(100, 250);
        Assertions.assertEquals(boolean839, false);
    }
    @Test
    public void test186() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int86 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int86, -2);
    }
    @Test
    public void test187() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
    }
    @Test
    public void test189() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double819 = calculadora353.divDouble(0.55, 1.99);
        Assertions.assertEquals(double819, 0.2763819095477387);
    }
    @Test
    public void test190() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int336 = calculadora353.divInt(0, 250);
        Assertions.assertEquals(int336, 0);
    }
    @Test
    public void test191() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        java.lang.String string310 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string310, "IPSUM");
        double double899 = calculadora353.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double899, -105.5);
    }
    @Test
    public void test192() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double485 = calculadora353.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double485, -211.0);
    }
    @Test
    public void test193() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
    }
    @Test
    public void test194() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
    }
    @Test
    public void test195() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        boolean boolean237 = calculadora353.and(false, boolean815);
        Assertions.assertEquals(boolean237, false);
    }
    @Test
    public void test196() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean950 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean950, false);
    }
    @Test
    public void test198() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
    }
    @Test
    public void test199() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        boolean boolean24 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean24, true);
    }
    @Test
    public void test200() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        java.lang.String string701 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string701, "LOREM");
    }
    @Test
    public void test202() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        int int555 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int555, -1250);
        int int932 = calculadora353.divInt(500, -500);
        Assertions.assertEquals(int932, -1);
    }
    @Test
    public void test203() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean616 = calculadora353.maior(100, 0);
        Assertions.assertEquals(boolean616, true);
    }
    @Test
    public void test204() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double954 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double954, 6.28318);
        double double891 = calculadora353.divDouble(0.0, -105.5);
        Assertions.assertEquals(double891, -0.0);
    }
    @Test
    public void test205() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        int int805 = calculadora353.mulInt(100, 100);
        Assertions.assertEquals(int805, 10000);
    }
    @Test
    public void test206() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
    }
    @Test
    public void test208() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        int int678 = calculadora353.divInt(250, 500);
        Assertions.assertEquals(int678, 0);
    }
    @Test
    public void test209() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        java.lang.String string728 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string728, "HELLO");
    }
    @Test
    public void test210() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        double double651 = calculadora353.subDouble(-10.953, -105.5);
        Assertions.assertEquals(double651, 94.547);
    }
    @Test
    public void test211() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean962 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean962, false);
        double double916 = calculadora353.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double916, 119.96820899999999);
    }
    @Test
    public void test212() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double99 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double99, 0.029778104265402842);
    }
    @Test
    public void test214() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean572 = calculadora353.maior(250, 100);
        Assertions.assertEquals(boolean572, true);
    }
    @Test
    public void test216() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
    }
    @Test
    public void test217() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        double double923 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double923, -107.05);
    }
    @Test
    public void test218() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
        double double656 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double656, 0.0);
    }
    @Test
    public void test219() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        java.lang.String string728 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string728, "HELLO");
        boolean boolean853 = calculadora353.menor(0, 1000);
        Assertions.assertEquals(boolean853, true);
    }
    @Test
    public void test220() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        java.lang.String string728 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string728, "HELLO");
        boolean boolean665 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean665, true);
    }
    @Test
    public void test221() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean321 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean321, true);
    }
    @Test
    public void test222() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
    }
    @Test
    public void test223() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        int int926 = calculadora353.divInt(0, 1000);
        Assertions.assertEquals(int926, 0);
    }
    @Test
    public void test224() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
    }
    @Test
    public void test225() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean222 = calculadora353.menor(-250, 0);
        Assertions.assertEquals(boolean222, true);
        boolean boolean969 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean969, true);
    }
    @Test
    public void test226() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean45 = calculadora353.maior(-500, -250);
        Assertions.assertEquals(boolean45, false);
    }
    @Test
    public void test227() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        int int696 = calculadora353.divInt(-250, -1000);
        Assertions.assertEquals(int696, 0);
    }
    @Test
    public void test228() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        java.lang.String string449 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string449, "TOP");
    }
    @Test
    public void test229() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        int int837 = calculadora353.divInt(-1000, -500);
        Assertions.assertEquals(int837, 2);
    }
    @Test
    public void test230() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double268 = calculadora353.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double268, 5.13159);
    }
    @Test
    public void test231() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
    }
    @Test
    public void test232() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
        int int320 = calculadora353.subInt(100, 1000);
        Assertions.assertEquals(int320, -900);
    }
    @Test
    public void test233() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
    }
    @Test
    public void test234() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int412 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int412, 2000);
    }
    @Test
    public void test235() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
    }
    @Test
    public void test237() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        double double436 = calculadora353.somaDouble(105.5, 0.55);
        Assertions.assertEquals(double436, 106.05);
    }
    @Test
    public void test238() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        double double163 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double163, -3.54);
        java.lang.String string385 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string385, "valeu");
    }
    @Test
    public void test239() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean962 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean962, false);
        double double575 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double575, 331.437745);
    }
    @Test
    public void test240() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
        boolean boolean808 = calculadora353.menor(1000, 500);
        Assertions.assertEquals(boolean808, false);
    }
    @Test
    public void test241() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
        int int451 = calculadora353.subInt(-500, 0);
        Assertions.assertEquals(int451, -500);
    }
    @Test
    public void test242() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        double double298 = calculadora353.divDouble(-1.55, 3.14159);
        Assertions.assertEquals(double298, -0.4933807403257586);
    }
    @Test
    public void test243() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
    }
    @Test
    public void test244() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
    }
    @Test
    public void test245() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int425 = calculadora353.divInt(1000, 100);
        Assertions.assertEquals(int425, 10);
    }
    @Test
    public void test246() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
    }
    @Test
    public void test247() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        double double731 = calculadora353.divDouble(-1.55, 0.0);
        Assertions.assertEquals(double731, -Infinity);
    }
    @Test
    public void test248() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean950 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean950, false);
        java.lang.String string456 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string456, "hello");
    }
    @Test
    public void test249() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        double double651 = calculadora353.subDouble(-10.953, -105.5);
        Assertions.assertEquals(double651, 94.547);
        double double710 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double710, 1.0);
    }
    @Test
    public void test250() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double508 = calculadora353.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double508, -0.2868246142609331);
    }
    @Test
    public void test251() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string169 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string169, "HI");
    }
    @Test
    public void test252() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean708 = calculadora353.menor(1000, 250);
        Assertions.assertEquals(boolean708, false);
    }
    @Test
    public void test253() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
    }
    @Test
    public void test254() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
        boolean boolean259 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean259, true);
    }
    @Test
    public void test255() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        boolean boolean24 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean24, true);
        int int319 = calculadora353.somaInt(250, 250);
        Assertions.assertEquals(int319, 500);
    }
    @Test
    public void test256() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean765 = calculadora353.or(true, boolean312);
        Assertions.assertEquals(boolean765, true);
    }
    @Test
    public void test257() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        boolean boolean305 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean305, true);
        boolean boolean257 = calculadora353.or(true, boolean305);
        Assertions.assertEquals(boolean257, true);
    }
    @Test
    public void test258() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        java.lang.String string713 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string713, "hi");
    }
    @Test
    public void test259() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        boolean boolean620 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean620, false);
    }
    @Test
    public void test260() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        int int329 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int329, 0);
    }
    @Test
    public void test261() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        int int114 = calculadora353.divInt(-500, 1000);
        Assertions.assertEquals(int114, 0);
    }
    @Test
    public void test262() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        int int212 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int212, -100000);
        int int183 = calculadora353.subInt(1000, 1000);
        Assertions.assertEquals(int183, 0);
    }
    @Test
    public void test263() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string169 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string169, "HI");
        int int251 = calculadora353.divInt(500, -100);
        Assertions.assertEquals(int251, -5);
    }
    @Test
    public void test264() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        double double260 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double260, -0.18168538300009132);
    }
    @Test
    public void test265() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        java.lang.String string489 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string489, "LOREM");
    }
    @Test
    public void test266() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
        double double515 = calculadora353.divDouble(-105.5, -105.5);
        Assertions.assertEquals(double515, 1.0);
    }
    @Test
    public void test267() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        boolean boolean24 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean24, true);
        int int199 = calculadora353.subInt(500, 250);
        Assertions.assertEquals(int199, 250);
    }
    @Test
    public void test268() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int87 = calculadora353.mulInt(0, -250);
        Assertions.assertEquals(int87, 0);
    }
    @Test
    public void test269() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
    }
    @Test
    public void test270() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int296 = calculadora353.mulInt(0, 500);
        Assertions.assertEquals(int296, 0);
    }
    @Test
    public void test271() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        int int555 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int555, -1250);
        int int932 = calculadora353.divInt(500, -500);
        Assertions.assertEquals(int932, -1);
        boolean boolean496 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean496, false);
    }
    @Test
    public void test272() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double137 = calculadora353.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double137, 1.1);
    }
    @Test
    public void test273() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        boolean boolean574 = calculadora353.or(boolean319, false);
        Assertions.assertEquals(boolean574, false);
    }
    @Test
    public void test274() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string446 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string446, "VALEU");
        double double535 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double535, 58.025000000000006);
    }
    @Test
    public void test275() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
    }
    @Test
    public void test276() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        double double79 = calculadora353.mulDouble(-105.5, 3.14159);
        Assertions.assertEquals(double79, -331.437745);
    }
    @Test
    public void test277() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean779 = calculadora353.menor(-250, -1000);
        Assertions.assertEquals(boolean779, false);
    }
    @Test
    public void test278() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        boolean boolean777 = calculadora353.maior(-250, -250);
        Assertions.assertEquals(boolean777, false);
    }
    @Test
    public void test279() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean708 = calculadora353.menor(1000, 250);
        Assertions.assertEquals(boolean708, false);
        java.lang.String string61 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string61, "LOREM");
    }
    @Test
    public void test280() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        boolean boolean950 = calculadora353.and(boolean906, false);
        Assertions.assertEquals(boolean950, false);
    }
    @Test
    public void test281() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
        int int717 = calculadora353.divInt(500, 100);
        Assertions.assertEquals(int717, 5);
    }
    @Test
    public void test282() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        double double513 = calculadora353.subDouble(10.953, 10.953);
        Assertions.assertEquals(double513, 0.0);
    }
    @Test
    public void test284() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        java.lang.String string750 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string750, "lorem");
    }
    @Test
    public void test285() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        int int696 = calculadora353.divInt(-250, -1000);
        Assertions.assertEquals(int696, 0);
        double double181 = calculadora353.divDouble(-1.55, -10.953);
        Assertions.assertEquals(double181, 0.14151374052770932);
    }
    @Test
    public void test286() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        java.lang.String string738 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string738, "NICE");
    }
    @Test
    public void test287() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        int int977 = calculadora353.subInt(100, 500);
        Assertions.assertEquals(int977, -400);
    }
    @Test
    public void test288() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        int int768 = calculadora353.mulInt(0, -500);
        Assertions.assertEquals(int768, 0);
    }
    @Test
    public void test289() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        int int538 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int538, 600);
    }
    @Test
    public void test290() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        double double882 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double882, 3.54);
    }
    @Test
    public void test291() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
    }
    @Test
    public void test292() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        java.lang.String string278 = calculadora353.toUpCase(string603);
        Assertions.assertEquals(string278, STRING603);
        double double627 = calculadora353.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double627, -16.977149999999998);
    }
    @Test
    public void test293() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int725 = calculadora353.mulInt(-1000, -250);
        Assertions.assertEquals(int725, 250000);
    }
    @Test
    public void test294() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
    }
    @Test
    public void test295() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        int int538 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int538, 600);
        double double369 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double369, 58.025000000000006);
    }
    @Test
    public void test296() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean214 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean214, false);
    }
    @Test
    public void test297() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        java.lang.String string564 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string564, string466);
    }
    @Test
    public void test298() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
    }
    @Test
    public void test299() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        java.lang.String string906 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string906, "VALEU");
    }
    @Test
    public void test300() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
    }
    @Test
    public void test301() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        int int743 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int743, 1250);
    }
    @Test
    public void test302() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int795 = calculadora353.somaInt(-500, -1000);
        Assertions.assertEquals(int795, -1500);
    }
    @Test
    public void test303() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int514 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int514, 250000);
    }
    @Test
    public void test304() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double99 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double99, 0.029778104265402842);
        int int727 = calculadora353.somaInt(-250, 1000);
        Assertions.assertEquals(int727, 750);
    }
    @Test
    public void test305() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
    }
    @Test
    public void test307() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean254 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean254, false);
    }
    @Test
    public void test308() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean700 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean700, false);
    }
    @Test
    public void test310() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        boolean boolean380 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean380, false);
    }
    @Test
    public void test312() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        int int538 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int538, 600);
        java.lang.String string517 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string517, "NICE");
    }
    @Test
    public void test314() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        double double462 = calculadora353.subDouble(3.14159, 105.5);
        Assertions.assertEquals(double462, -102.35841);
        boolean boolean929 = calculadora353.menor(-1000, 1000);
        Assertions.assertEquals(boolean929, true);
    }
    @Test
    public void test315() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        java.lang.String string270 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string270, "hello");
    }
    @Test
    public void test317() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int86 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int86, -2);
        java.lang.String string626 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string626, "nice");
    }
    @Test
    public void test318() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean572 = calculadora353.maior(250, 100);
        Assertions.assertEquals(boolean572, true);
        java.lang.String string500 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string500, "lorem");
    }
    @Test
    public void test319() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        int int837 = calculadora353.divInt(-1000, -500);
        Assertions.assertEquals(int837, 2);
        double double838 = calculadora353.divDouble(3.14159, 10.953);
        Assertions.assertEquals(double838, 0.2868246142609331);
    }
    @Test
    public void test321() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        java.lang.String string707 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string707, "hi");
        double double425 = calculadora353.subDouble(-1.55, 10.953);
        Assertions.assertEquals(double425, -12.503);
    }
    @Test
    public void test322() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean726 = calculadora353.menor(-250, 500);
        Assertions.assertEquals(boolean726, true);
    }
    @Test
    public void test323() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        boolean boolean620 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean620, false);
        boolean boolean544 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean544, true);
    }
    @Test
    public void test324() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double442 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double442, 6.024150000000001);
        int int926 = calculadora353.somaInt(-100, -250);
        Assertions.assertEquals(int926, -350);
    }
    @Test
    public void test325() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int412 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int412, 2000);
        int int555 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int555, -2);
    }
    @Test
    public void test326() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
    }
    @Test
    public void test327() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        int int768 = calculadora353.mulInt(0, -500);
        Assertions.assertEquals(int768, 0);
        double double787 = calculadora353.subDouble(105.5, 105.5);
        Assertions.assertEquals(double787, 0.0);
    }
    @Test
    public void test328() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double934 = calculadora353.mulDouble(1.99, 105.5);
        Assertions.assertEquals(double934, 209.945);
    }
    @Test
    public void test329() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean616 = calculadora353.maior(100, 0);
        Assertions.assertEquals(boolean616, true);
        boolean boolean895 = calculadora353.maior(-250, -250);
        Assertions.assertEquals(boolean895, false);
    }
    @Test
    public void test330() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
    }
    @Test
    public void test331() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean214 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean214, false);
        boolean boolean418 = calculadora353.menor(0, 250);
        Assertions.assertEquals(boolean418, true);
    }
    @Test
    public void test332() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        java.lang.String string744 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string744, "HELLO");
        java.lang.String string213 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string213, "top");
    }
    @Test
    public void test333() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double673 = calculadora353.subDouble(-105.5, -10.953);
        Assertions.assertEquals(double673, -94.547);
    }
    @Test
    public void test334() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        java.lang.String string449 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string449, "TOP");
        java.lang.String string332 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string332, "HELLO");
    }
    @Test
    public void test335() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int86 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int86, -2);
        java.lang.String string102 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string102, "HI");
    }
    @Test
    public void test337() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
        boolean boolean911 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean911, false);
    }
    @Test
    public void test338() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean439 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean439, true);
    }
    @Test
    public void test340() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        java.lang.String string555 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string555, "TOP");
    }
    @Test
    public void test342() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean357 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean357, false);
        int int461 = calculadora353.mulInt(500, 250);
        Assertions.assertEquals(int461, 125000);
    }
    @Test
    public void test345() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
    }
    @Test
    public void test346() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        boolean boolean478 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean478, false);
    }
    @Test
    public void test347() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        java.lang.String string278 = calculadora353.toUpCase(string603);
        Assertions.assertEquals(string278, STRING603);
        double double241 = calculadora353.mulDouble(-105.5, 105.5);
        Assertions.assertEquals(double241, -11130.25);
    }
    @Test
    public void test348() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double361 = calculadora353.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double361, -102.35841);
    }
    @Test
    public void test349() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        boolean boolean391 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean391, false);
    }
    @Test
    public void test350() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        int int852 = calculadora353.divInt(1000, 250);
        Assertions.assertEquals(int852, 4);
        java.lang.String string792 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string792, "NICE");
    }
    @Test
    public void test351() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean708 = calculadora353.menor(1000, 250);
        Assertions.assertEquals(boolean708, false);
        java.lang.String string61 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string61, "LOREM");
        boolean boolean318 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean318, true);
    }
    @Test
    public void test352() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double351 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double351, Infinity);
    }
    @Test
    public void test353() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        double double78 = calculadora353.somaDouble(3.14159, 105.5);
        Assertions.assertEquals(double78, 108.64159);
    }
    @Test
    public void test354() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean242 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean242, true);
    }
    @Test
    public void test355() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double954 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double954, 6.28318);
        double double891 = calculadora353.divDouble(0.0, -105.5);
        Assertions.assertEquals(double891, -0.0);
        double double620 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double620, -10.953);
    }
    @Test
    public void test356() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        int int982 = calculadora353.somaInt(-100, 0);
        Assertions.assertEquals(int982, -100);
    }
    @Test
    public void test357() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        double double904 = calculadora353.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double904, 1155.5415);
    }
    @Test
    public void test358() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        java.lang.String string889 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string889, "VALEU");
    }
    @Test
    public void test359() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        java.lang.String string954 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string954, "nice");
        double double30 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double30, -1.44);
    }
    @Test
    public void test360() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        boolean boolean950 = calculadora353.and(boolean906, false);
        Assertions.assertEquals(boolean950, false);
        int int925 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int925, 100000);
    }
    @Test
    public void test361() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        double double858 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double858, Infinity);
        java.lang.String string53 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string53, "hello");
    }
    @Test
    public void test362() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        int int538 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int538, 600);
        double double369 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double369, 58.025000000000006);
        boolean boolean651 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean651, false);
    }
    @Test
    public void test364() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        boolean boolean470 = calculadora353.maior(-1000, -1000);
        Assertions.assertEquals(boolean470, false);
    }
    @Test
    public void test365() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int425 = calculadora353.divInt(1000, 100);
        Assertions.assertEquals(int425, 10);
        java.lang.String string583 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string583, "top");
    }
    @Test
    public void test366() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double527 = calculadora353.somaDouble(105.5, 10.953);
        Assertions.assertEquals(double527, 116.453);
        boolean boolean513 = calculadora353.maior(500, -1000);
        Assertions.assertEquals(boolean513, true);
    }
    @Test
    public void test367() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double447 = calculadora353.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double447, -0.8525000000000001);
    }
    @Test
    public void test368() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string446 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string446, "VALEU");
        java.lang.String string991 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string991, "nice");
        double double719 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double719, -0.005213270142180095);
    }
    @Test
    public void test370() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        java.lang.String string623 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string623, "VALEU");
    }
    @Test
    public void test371() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean528 = calculadora353.menor(0, -500);
        Assertions.assertEquals(boolean528, false);
        boolean boolean8 = calculadora353.or(false, boolean528);
        Assertions.assertEquals(boolean8, false);
    }
    @Test
    public void test372() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean726 = calculadora353.menor(-250, 500);
        Assertions.assertEquals(boolean726, true);
        double double857 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double857, 19.91454545454545);
    }
    @Test
    public void test374() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        java.lang.String string564 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string564, string466);
        int int659 = calculadora353.mulInt(100, -500);
        Assertions.assertEquals(int659, -50000);
    }
    @Test
    public void test375() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double906 = calculadora353.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double906, -107.05);
    }
    @Test
    public void test376() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        double double882 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double882, 3.54);
        int int678 = calculadora353.somaInt(0, -1000);
        Assertions.assertEquals(int678, -1000);
    }
    @Test
    public void test377() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        double double396 = calculadora353.somaDouble(-10.953, 0.55);
        Assertions.assertEquals(double396, -10.402999999999999);
    }
    @Test
    public void test378() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        double double64 = calculadora353.mulDouble(-1.55, 1.99);
        Assertions.assertEquals(double64, -3.0845000000000002);
    }
    @Test
    public void test379() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        java.lang.String string889 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string889, "VALEU");
        boolean boolean757 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean757, true);
    }
    @Test
    public void test380() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        boolean boolean470 = calculadora353.maior(-1000, -1000);
        Assertions.assertEquals(boolean470, false);
        boolean boolean345 = calculadora353.menor(-250, 500);
        Assertions.assertEquals(boolean345, true);
    }
    @Test
    public void test381() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        int int209 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int209, 25000);
        double double626 = calculadora353.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double626, -211.0);
    }
    @Test
    public void test382() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
        boolean boolean911 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean911, false);
        double double782 = calculadora353.subDouble(1.99, 1.99);
        Assertions.assertEquals(double782, 0.0);
    }
    @Test
    public void test383() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean516 = calculadora353.maior(-1000, -1000);
        Assertions.assertEquals(boolean516, false);
    }
    @Test
    public void test384() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
    }
    @Test
    public void test385() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string33 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string33, "NICE");
        boolean boolean150 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean150, true);
    }
    @Test
    public void test386() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        int int80 = calculadora353.somaInt(100, 100);
        Assertions.assertEquals(int80, 200);
    }
    @Test
    public void test387() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        boolean boolean664 = calculadora353.maior(0, 0);
        Assertions.assertEquals(boolean664, false);
    }
    @Test
    public void test388() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
        int int320 = calculadora353.subInt(100, 1000);
        Assertions.assertEquals(int320, -900);
        boolean boolean141 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean141, true);
    }
    @Test
    public void test389() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
        boolean boolean259 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean259, true);
        boolean boolean18 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean18, false);
    }
    @Test
    public void test391() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        int int45 = calculadora353.divInt(500, -1000);
        Assertions.assertEquals(int45, 0);
    }
    @Test
    public void test392() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        double double858 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double858, Infinity);
        java.lang.String string53 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string53, "hello");
        double double550 = calculadora353.mulDouble(105.5, 0.55);
        Assertions.assertEquals(double550, 58.025000000000006);
    }
    @Test
    public void test393() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        boolean boolean470 = calculadora353.maior(-1000, -1000);
        Assertions.assertEquals(boolean470, false);
        double double92 = calculadora353.subDouble(0.55, -105.5);
        Assertions.assertEquals(double92, 106.05);
    }
    @Test
    public void test395() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
        java.lang.String string512 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string512, "NICE");
    }
    @Test
    public void test396() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
    }
    @Test
    public void test397() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
    }
    @Test
    public void test398() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        int int212 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int212, -100000);
        java.lang.String string67 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string67, string466);
    }
    @Test
    public void test399() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        int int283 = calculadora353.mulInt(-250, 0);
        Assertions.assertEquals(int283, 0);
    }
    @Test
    public void test400() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        java.lang.String string695 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string695, "nice");
    }
    @Test
    public void test401() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
    }
    @Test
    public void test403() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        boolean boolean939 = calculadora353.maior(0, -1000);
        Assertions.assertEquals(boolean939, true);
        int int874 = calculadora353.somaInt(-500, 1000);
        Assertions.assertEquals(int874, 500);
    }
    @Test
    public void test404() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double673 = calculadora353.subDouble(-105.5, -10.953);
        Assertions.assertEquals(double673, -94.547);
        boolean boolean512 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean512, true);
    }
    @Test
    public void test405() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
    }
    @Test
    public void test406() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        int int45 = calculadora353.divInt(500, -1000);
        Assertions.assertEquals(int45, 0);
        int int550 = calculadora353.somaInt(0, 100);
        Assertions.assertEquals(int550, 100);
    }
    @Test
    public void test407() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        java.lang.String string310 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string310, "IPSUM");
        double double899 = calculadora353.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double899, -105.5);
        boolean boolean915 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean915, false);
    }
    @Test
    public void test408() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean830 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean830, true);
    }
    @Test
    public void test409() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
    }
    @Test
    public void test410() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        int int30 = calculadora353.somaInt(1000, -100);
        Assertions.assertEquals(int30, 900);
    }
    @Test
    public void test411() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        int int863 = calculadora353.somaInt(-250, -500);
        Assertions.assertEquals(int863, -750);
    }
    @Test
    public void test412() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean735 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean735, false);
    }
    @Test
    public void test413() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        boolean boolean478 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean478, false);
        double double49 = calculadora353.mulDouble(1.99, -1.55);
        Assertions.assertEquals(double49, -3.0845000000000002);
    }
    @Test
    public void test414() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        boolean boolean91 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean91, true);
    }
    @Test
    public void test415() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        java.lang.String string793 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string793, "TOP");
    }
    @Test
    public void test416() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        int int45 = calculadora353.divInt(500, -1000);
        Assertions.assertEquals(int45, 0);
        int int550 = calculadora353.somaInt(0, 100);
        Assertions.assertEquals(int550, 100);
        int int966 = calculadora353.somaInt(1000, -250);
        Assertions.assertEquals(int966, 750);
    }
    @Test
    public void test417() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double325 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double325, -3.54);
    }
    @Test
    public void test418() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean868 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean868, true);
    }
    @Test
    public void test419() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string169 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string169, "HI");
        int int251 = calculadora353.divInt(500, -100);
        Assertions.assertEquals(int251, -5);
        boolean boolean56 = calculadora353.or(false, boolean721);
        Assertions.assertEquals(boolean56, false);
    }
    @Test
    public void test420() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean414 = calculadora353.menor(500, 100);
        Assertions.assertEquals(boolean414, false);
    }
    @Test
    public void test421() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        java.lang.String string96 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string96, "HI");
    }
    @Test
    public void test422() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        java.lang.String string590 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string590, "LOREM");
    }
    @Test
    public void test423() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean250 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean250, true);
    }
    @Test
    public void test424() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        java.lang.String string135 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string135, "hi");
    }
    @Test
    public void test425() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double581 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double581, -21.906);
    }
    @Test
    public void test426() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        double double314 = calculadora353.somaDouble(-10.953, 105.5);
        Assertions.assertEquals(double314, 94.547);
    }
    @Test
    public void test427() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double137 = calculadora353.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double137, 1.1);
        boolean boolean585 = calculadora353.menor(500, 500);
        Assertions.assertEquals(boolean585, false);
    }
    @Test
    public void test428() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        int int555 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int555, -1250);
        int int932 = calculadora353.divInt(500, -500);
        Assertions.assertEquals(int932, -1);
        java.lang.String string743 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string743, "NICE");
    }
    @Test
    public void test429() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        double double462 = calculadora353.subDouble(3.14159, 105.5);
        Assertions.assertEquals(double462, -102.35841);
        int int469 = calculadora353.subInt(500, 250);
        Assertions.assertEquals(int469, 250);
    }
    @Test
    public void test430() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        double double288 = calculadora353.subDouble(105.5, 0.55);
        Assertions.assertEquals(double288, 104.95);
    }
    @Test
    public void test431() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        java.lang.String string228 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string228, "HELLO");
    }
    @Test
    public void test433() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double775 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double775, 6.28318);
        double double428 = calculadora353.mulDouble(-105.5, 3.14159);
        Assertions.assertEquals(double428, -331.437745);
    }
    @Test
    public void test434() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double268 = calculadora353.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double268, 5.13159);
        int int22 = calculadora353.somaInt(0, 250);
        Assertions.assertEquals(int22, 250);
    }
    @Test
    public void test435() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean900 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean900, false);
    }
    @Test
    public void test436() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean223 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean223, true);
    }
    @Test
    public void test437() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        int int145 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int145, 50000);
    }
    @Test
    public void test438() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        java.lang.String string701 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string701, "LOREM");
        boolean boolean808 = calculadora353.menor(1000, 0);
        Assertions.assertEquals(boolean808, false);
    }
    @Test
    public void test439() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        java.lang.String string769 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string769, "ipsum");
    }
    @Test
    public void test440() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean850 = calculadora353.maior(0, 1000);
        Assertions.assertEquals(boolean850, false);
    }
    @Test
    public void test441() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        java.lang.String string728 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string728, "HELLO");
        double double272 = calculadora353.somaDouble(-10.953, -10.953);
        Assertions.assertEquals(double272, -21.906);
    }
    @Test
    public void test442() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
    }
    @Test
    public void test443() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        boolean boolean939 = calculadora353.maior(0, -1000);
        Assertions.assertEquals(boolean939, true);
        int int874 = calculadora353.somaInt(-500, 1000);
        Assertions.assertEquals(int874, 500);
        boolean boolean56 = calculadora353.maior(500, 250);
        Assertions.assertEquals(boolean56, true);
    }
    @Test
    public void test444() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        double double652 = calculadora353.somaDouble(-10.953, 0.55);
        Assertions.assertEquals(double652, -10.402999999999999);
    }
    @Test
    public void test445() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean708 = calculadora353.menor(1000, 250);
        Assertions.assertEquals(boolean708, false);
        java.lang.String string61 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string61, "LOREM");
        boolean boolean318 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean318, true);
        int int141 = calculadora353.somaInt(-1000, 100);
        Assertions.assertEquals(int141, -900);
    }
    @Test
    public void test446() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        java.lang.String string136 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string136, "lorem");
    }
    @Test
    public void test448() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
    }
    @Test
    public void test449() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean452 = calculadora353.or(true, boolean597);
        Assertions.assertEquals(boolean452, true);
        double double15 = calculadora353.divDouble(1.99, -1.55);
        Assertions.assertEquals(double15, -1.2838709677419355);
    }
    @Test
    public void test450() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean214 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean214, false);
        int int206 = calculadora353.subInt(500, -250);
        Assertions.assertEquals(int206, 750);
    }
    @Test
    public void test451() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        java.lang.String string793 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string793, "TOP");
        int int212 = calculadora353.somaInt(0, -100);
        Assertions.assertEquals(int212, -100);
    }
    @Test
    public void test452() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        java.lang.String string489 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string489, "LOREM");
        int int703 = calculadora353.divInt(0, -1000);
        Assertions.assertEquals(int703, 0);
    }
    @Test
    public void test454() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean452 = calculadora353.or(true, boolean597);
        Assertions.assertEquals(boolean452, true);
        double double15 = calculadora353.divDouble(1.99, -1.55);
        Assertions.assertEquals(double15, -1.2838709677419355);
        int int431 = calculadora353.somaInt(0, 250);
        Assertions.assertEquals(int431, 250);
    }
    @Test
    public void test455() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        boolean boolean574 = calculadora353.or(boolean319, false);
        Assertions.assertEquals(boolean574, false);
        int int919 = calculadora353.somaInt(500, -250);
        Assertions.assertEquals(int919, 250);
    }
    @Test
    public void test458() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double363 = calculadora353.mulDouble(1.99, -10.953);
        Assertions.assertEquals(double363, -21.79647);
    }
    @Test
    public void test459() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean223 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean223, true);
        double double774 = calculadora353.subDouble(0.55, -105.5);
        Assertions.assertEquals(double774, 106.05);
    }
    @Test
    public void test461() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int684 = calculadora353.somaInt(-100, -500);
        Assertions.assertEquals(int684, -600);
    }
    @Test
    public void test462() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double788 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double788, 105.5);
    }
    @Test
    public void test463() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        double double436 = calculadora353.somaDouble(105.5, 0.55);
        Assertions.assertEquals(double436, 106.05);
        java.lang.String string369 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string369, "nice");
    }
    @Test
    public void test464() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        double double529 = calculadora353.divDouble(10.953, 0.0);
        Assertions.assertEquals(double529, Infinity);
    }
    @Test
    public void test465() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        int int30 = calculadora353.somaInt(1000, -100);
        Assertions.assertEquals(int30, 900);
        java.lang.String string596 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string596, "ipsum");
    }
    @Test
    public void test467() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        int int565 = calculadora353.somaInt(-250, -500);
        Assertions.assertEquals(int565, -750);
    }
    @Test
    public void test469() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        boolean boolean777 = calculadora353.maior(-250, -250);
        Assertions.assertEquals(boolean777, false);
        java.lang.String string99 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string99, "ipsum");
    }
    @Test
    public void test471() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int519 = calculadora353.divInt(250, 1000);
        Assertions.assertEquals(int519, 0);
        double double540 = calculadora353.divDouble(-1.55, 0.0);
        Assertions.assertEquals(double540, -Infinity);
    }
    @Test
    public void test472() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        boolean boolean359 = calculadora353.maior(-100, -500);
        Assertions.assertEquals(boolean359, true);
    }
    @Test
    public void test473() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean700 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean700, false);
        int int58 = calculadora353.divInt(0, 500);
        Assertions.assertEquals(int58, 0);
    }
    @Test
    public void test475() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        java.lang.String string707 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string707, "hi");
        double double425 = calculadora353.subDouble(-1.55, 10.953);
        Assertions.assertEquals(double425, -12.503);
        double double124 = calculadora353.subDouble(-105.5, 3.14159);
        Assertions.assertEquals(double124, -108.64159);
    }
    @Test
    public void test476() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        int int696 = calculadora353.divInt(-250, -1000);
        Assertions.assertEquals(int696, 0);
        double double430 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double430, -58.025000000000006);
    }
    @Test
    public void test477() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
    }
    @Test
    public void test478() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double673 = calculadora353.subDouble(-105.5, -10.953);
        Assertions.assertEquals(double673, -94.547);
        boolean boolean512 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean512, true);
        double double760 = calculadora353.subDouble(105.5, 105.5);
        Assertions.assertEquals(double760, 0.0);
    }
    @Test
    public void test479() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        int int953 = calculadora353.divInt(250, 100);
        Assertions.assertEquals(int953, 2);
    }
    @Test
    public void test480() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double961 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double961, -8.963);
    }
    @Test
    public void test481() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int336 = calculadora353.divInt(0, 250);
        Assertions.assertEquals(int336, 0);
        double double154 = calculadora353.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double154, -211.0);
    }
    @Test
    public void test482() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
        int int320 = calculadora353.subInt(100, 1000);
        Assertions.assertEquals(int320, -900);
        boolean boolean141 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean141, true);
        double double797 = calculadora353.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double797, 1155.5415);
    }
    @Test
    public void test483() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        boolean boolean136 = calculadora353.maior(-100, -500);
        Assertions.assertEquals(boolean136, true);
    }
    @Test
    public void test485() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
    }
    @Test
    public void test486() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        boolean boolean928 = calculadora353.maior(100, 250);
        Assertions.assertEquals(boolean928, false);
    }
    @Test
    public void test487() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
    }
    @Test
    public void test488() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean726 = calculadora353.menor(-250, 500);
        Assertions.assertEquals(boolean726, true);
        double double857 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double857, 19.91454545454545);
        java.lang.String string517 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string517, "go");
    }
    @Test
    public void test489() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double788 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double788, 105.5);
        double double785 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double785, 94.547);
    }
    @Test
    public void test491() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        double double69 = calculadora353.subDouble(0.0, 0.0);
        Assertions.assertEquals(double69, 0.0);
    }
    @Test
    public void test492() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        java.lang.String string954 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string954, "nice");
        double double30 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double30, -1.44);
        boolean boolean133 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean133, false);
    }
    @Test
    public void test493() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean726 = calculadora353.menor(-250, 500);
        Assertions.assertEquals(boolean726, true);
        double double535 = calculadora353.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double535, -105.5);
    }
    @Test
    public void test494() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean222 = calculadora353.menor(-250, 0);
        Assertions.assertEquals(boolean222, true);
        boolean boolean969 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean969, true);
        java.lang.String string285 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string285, "lorem");
    }
    @Test
    public void test495() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        double double436 = calculadora353.somaDouble(105.5, 0.55);
        Assertions.assertEquals(double436, 106.05);
        java.lang.String string369 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string369, "nice");
        int int266 = calculadora353.somaInt(-500, 500);
        Assertions.assertEquals(int266, 0);
    }
    @Test
    public void test496() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        double double673 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double673, -1155.5415);
    }
    @Test
    public void test497() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double325 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double325, -3.54);
        int int77 = calculadora353.divInt(-250, -500);
        Assertions.assertEquals(int77, 0);
    }
    @Test
    public void test498() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double673 = calculadora353.subDouble(-105.5, -10.953);
        Assertions.assertEquals(double673, -94.547);
        boolean boolean512 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean512, true);
        double double306 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double306, -58.025000000000006);
    }
    @Test
    public void test499() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
    }
    @Test
    public void test501() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        int int356 = calculadora353.divInt(0, -1000);
        Assertions.assertEquals(int356, 0);
    }
    @Test
    public void test502() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean765 = calculadora353.or(true, boolean312);
        Assertions.assertEquals(boolean765, true);
        double double716 = calculadora353.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double716, 0.0);
    }
    @Test
    public void test503() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        boolean boolean470 = calculadora353.maior(-1000, -1000);
        Assertions.assertEquals(boolean470, false);
        double double36 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double36, Infinity);
    }
    @Test
    public void test504() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        java.lang.String string466 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string466, "VALEU");
    }
    @Test
    public void test505() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean528 = calculadora353.menor(0, -500);
        Assertions.assertEquals(boolean528, false);
        boolean boolean8 = calculadora353.or(false, boolean528);
        Assertions.assertEquals(boolean8, false);
        int int186 = calculadora353.mulInt(0, -250);
        Assertions.assertEquals(int186, 0);
    }
    @Test
    public void test506() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        boolean boolean391 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean391, false);
        double double870 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double870, 0.0);
    }
    @Test
    public void test507() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean288 = calculadora353.maior(500, -1000);
        Assertions.assertEquals(boolean288, true);
    }
    @Test
    public void test508() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double673 = calculadora353.subDouble(-105.5, -10.953);
        Assertions.assertEquals(double673, -94.547);
        boolean boolean512 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean512, true);
        double double306 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double306, -58.025000000000006);
        java.lang.String string40 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string40, "NICE");
    }
    @Test
    public void test509() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        boolean boolean950 = calculadora353.and(boolean906, false);
        Assertions.assertEquals(boolean950, false);
        int int925 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int925, 100000);
        int int732 = calculadora353.divInt(250, -1000);
        Assertions.assertEquals(int732, 0);
    }
    @Test
    public void test510() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        boolean boolean478 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean478, false);
        boolean boolean284 = calculadora353.menor(500, -500);
        Assertions.assertEquals(boolean284, false);
    }
    @Test
    public void test511() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        double double398 = calculadora353.subDouble(0.0, 0.55);
        Assertions.assertEquals(double398, -0.55);
        boolean boolean221 = calculadora353.maior(250, 100);
        Assertions.assertEquals(boolean221, true);
    }
    @Test
    public void test513() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        int int74 = calculadora353.somaInt(-1000, 250);
        Assertions.assertEquals(int74, -750);
    }
    @Test
    public void test514() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean911 = calculadora353.maior(1000, -500);
        Assertions.assertEquals(boolean911, true);
    }
    @Test
    public void test515() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        int int953 = calculadora353.divInt(250, 100);
        Assertions.assertEquals(int953, 2);
        int int122 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int122, -250);
    }
    @Test
    public void test517() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        double double798 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double798, 94.547);
    }
    @Test
    public void test518() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        int int990 = calculadora353.subInt(100, -500);
        Assertions.assertEquals(int990, 600);
    }
    @Test
    public void test519() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean582 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean582, true);
    }
    @Test
    public void test520() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean597 = calculadora353.maior(100, -100);
        Assertions.assertEquals(boolean597, true);
        double double491 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double491, -209.945);
    }
    @Test
    public void test522() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int104 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int104, -125000);
    }
    @Test
    public void test527() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        int int786 = calculadora353.divInt(-250, -100);
        Assertions.assertEquals(int786, 2);
        double double989 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double989, 0.029778104265402842);
    }
    @Test
    public void test528() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double673 = calculadora353.subDouble(-105.5, -10.953);
        Assertions.assertEquals(double673, -94.547);
        boolean boolean512 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean512, true);
        double double306 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double306, -58.025000000000006);
        java.lang.String string40 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string40, "NICE");
        boolean boolean990 = calculadora353.or(true, boolean888);
        Assertions.assertEquals(boolean990, true);
    }
    @Test
    public void test529() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        int int567 = calculadora353.mulInt(100, 100);
        Assertions.assertEquals(int567, 10000);
    }
    @Test
    public void test530() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        java.lang.String string807 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string807, "LOREM");
    }
    @Test
    public void test531() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean854 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean854, false);
    }
    @Test
    public void test532() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double903 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double903, -10.953);
    }
    @Test
    public void test533() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double361 = calculadora353.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double361, -102.35841);
        int int561 = calculadora353.mulInt(100, 0);
        Assertions.assertEquals(int561, 0);
    }
    @Test
    public void test534() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int460 = calculadora353.mulInt(-100, -250);
        Assertions.assertEquals(int460, 25000);
    }
    @Test
    public void test535() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        double double69 = calculadora353.subDouble(0.0, 0.0);
        Assertions.assertEquals(double69, 0.0);
        double double242 = calculadora353.divDouble(0.0, 0.55);
        Assertions.assertEquals(double242, 0.0);
    }
    @Test
    public void test536() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
        java.lang.String string948 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string948, "GO");
    }
    @Test
    public void test537() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        boolean boolean237 = calculadora353.and(false, boolean815);
        Assertions.assertEquals(boolean237, false);
        boolean boolean955 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean955, false);
    }
    @Test
    public void test539() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        int int139 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int139, 50000);
    }
    @Test
    public void test540() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double638 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double638, -1.44);
    }
    @Test
    public void test541() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        double double375 = calculadora353.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double375, 0.0);
    }
    @Test
    public void test542() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        double double403 = calculadora353.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double403, 0.43999999999999995);
    }
    @Test
    public void test544() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int278 = calculadora353.subInt(500, 500);
        Assertions.assertEquals(int278, 0);
        int int711 = calculadora353.mulInt(-500, -250);
        Assertions.assertEquals(int711, 125000);
    }
    @Test
    public void test545() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        int int30 = calculadora353.somaInt(1000, -100);
        Assertions.assertEquals(int30, 900);
        java.lang.String string596 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string596, "ipsum");
        boolean boolean108 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean108, false);
    }
    @Test
    public void test546() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        double double551 = calculadora353.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double551, 0.6334372085472643);
        int int871 = calculadora353.subInt(100, 250);
        Assertions.assertEquals(int871, -150);
    }
    @Test
    public void test547() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean727 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean727, true);
    }
    @Test
    public void test548() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        boolean boolean275 = calculadora353.maior(1000, 250);
        Assertions.assertEquals(boolean275, true);
    }
    @Test
    public void test549() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int831 = calculadora353.somaInt(0, -500);
        Assertions.assertEquals(int831, -500);
    }
    @Test
    public void test550() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean726 = calculadora353.menor(-250, 500);
        Assertions.assertEquals(boolean726, true);
        boolean boolean944 = calculadora353.maior(-250, 500);
        Assertions.assertEquals(boolean944, false);
    }
    @Test
    public void test551() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean950 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean950, false);
        java.lang.String string456 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string456, "hello");
        boolean boolean989 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean989, false);
    }
    @Test
    public void test553() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string169 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string169, "HI");
        int int251 = calculadora353.divInt(500, -100);
        Assertions.assertEquals(int251, -5);
        java.lang.String string10 = calculadora353.toLowCase(string169);
        Assertions.assertEquals(string10, string169);
    }
    @Test
    public void test554() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
        int int451 = calculadora353.subInt(-500, 0);
        Assertions.assertEquals(int451, -500);
        double double528 = calculadora353.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double528, -0.0);
    }
    @Test
    public void test555() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        boolean boolean380 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean380, false);
        boolean boolean135 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean135, false);
    }
    @Test
    public void test556() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        int int468 = calculadora353.somaInt(-100, 250);
        Assertions.assertEquals(int468, 150);
    }
    @Test
    public void test557() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        int int354 = calculadora353.divInt(-100, 1000);
        Assertions.assertEquals(int354, 0);
    }
    @Test
    public void test559() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        int int231 = calculadora353.subInt(250, -500);
        Assertions.assertEquals(int231, 750);
    }
    @Test
    public void test561() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int514 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int514, 250000);
        double double701 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double701, -104.95);
    }
    @Test
    public void test562() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        int int696 = calculadora353.divInt(-250, -1000);
        Assertions.assertEquals(int696, 0);
        double double430 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double430, -58.025000000000006);
        boolean boolean321 = calculadora353.maior(-100, 500);
        Assertions.assertEquals(boolean321, false);
    }
    @Test
    public void test563() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        boolean boolean789 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean789, true);
    }
    @Test
    public void test564() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        boolean boolean440 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean440, true);
    }
    @Test
    public void test565() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double307 = calculadora353.subDouble(0.0, 0.55);
        Assertions.assertEquals(double307, -0.55);
    }
    @Test
    public void test566() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        java.lang.String string449 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string449, "TOP");
        java.lang.String string332 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string332, "HELLO");
        int int626 = calculadora353.mulInt(250, -500);
        Assertions.assertEquals(int626, -125000);
    }
    @Test
    public void test567() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
        int int320 = calculadora353.subInt(100, 1000);
        Assertions.assertEquals(int320, -900);
        boolean boolean422 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean422, false);
    }
    @Test
    public void test568() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean653 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean653, false);
    }
    @Test
    public void test569() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        boolean boolean251 = calculadora353.menor(-100, 100);
        Assertions.assertEquals(boolean251, true);
    }
    @Test
    public void test570() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int278 = calculadora353.subInt(500, 500);
        Assertions.assertEquals(int278, 0);
        boolean boolean839 = calculadora353.menor(500, 100);
        Assertions.assertEquals(boolean839, false);
    }
    @Test
    public void test571() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
    }
    @Test
    public void test572() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        java.lang.String string582 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string582, "ipsum");
        boolean boolean325 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean325, false);
    }
    @Test
    public void test573() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        java.lang.String string135 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string135, "hi");
        java.lang.String string853 = calculadora353.toUpCase(string135);
        Assertions.assertEquals(string853, STRING135);
    }
    @Test
    public void test574() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int296 = calculadora353.mulInt(0, 500);
        Assertions.assertEquals(int296, 0);
        int int803 = calculadora353.mulInt(-1000, -1000);
        Assertions.assertEquals(int803, 1000000);
    }
    @Test
    public void test575() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int87 = calculadora353.mulInt(0, -250);
        Assertions.assertEquals(int87, 0);
        double double436 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double436, 0.0);
    }
    @Test
    public void test576() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean970 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean970, true);
    }
    @Test
    public void test577() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        int int114 = calculadora353.divInt(-500, 1000);
        Assertions.assertEquals(int114, 0);
        boolean boolean827 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean827, false);
    }
    @Test
    public void test578() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int432 = calculadora353.subInt(-100, 100);
        Assertions.assertEquals(int432, -200);
    }
    @Test
    public void test579() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        boolean boolean256 = calculadora353.or(boolean691, true);
        Assertions.assertEquals(boolean256, true);
    }
    @Test
    public void test580() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double961 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double961, -8.963);
        int int997 = calculadora353.mulInt(-500, 0);
        Assertions.assertEquals(int997, 0);
    }
    @Test
    public void test581() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean970 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean970, true);
        boolean boolean731 = calculadora353.maior(1000, 1000);
        Assertions.assertEquals(boolean731, false);
    }
    @Test
    public void test582() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        java.lang.String string64 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string64, "VALEU");
    }
    @Test
    public void test583() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        int int852 = calculadora353.divInt(1000, 250);
        Assertions.assertEquals(int852, 4);
        java.lang.String string792 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string792, "NICE");
        int int735 = calculadora353.mulInt(-100, -250);
        Assertions.assertEquals(int735, 25000);
    }
    @Test
    public void test584() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int789 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int789, 0);
    }
    @Test
    public void test585() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        java.lang.String string644 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string644, "VALEU");
    }
    @Test
    public void test586() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        java.lang.String string728 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string728, "HELLO");
        int int987 = calculadora353.somaInt(500, -250);
        Assertions.assertEquals(int987, 250);
    }
    @Test
    public void test588() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        boolean boolean499 = calculadora353.menor(250, 500);
        Assertions.assertEquals(boolean499, true);
    }
    @Test
    public void test589() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean700 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean700, false);
        int int58 = calculadora353.divInt(0, 500);
        Assertions.assertEquals(int58, 0);
        boolean boolean695 = calculadora353.menor(100, -1000);
        Assertions.assertEquals(boolean695, false);
    }
    @Test
    public void test590() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        int int743 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int743, 1250);
        int int311 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int311, -25000);
    }
    @Test
    public void test591() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double966 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double966, 0.0);
    }
    @Test
    public void test592() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        int int374 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int374, -125000);
        double double475 = calculadora353.divDouble(1.99, 105.5);
        Assertions.assertEquals(double475, 0.01886255924170616);
    }
    @Test
    public void test594() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        double double603 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double603, -0.18168538300009132);
    }
    @Test
    public void test595() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean827 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean827, false);
        boolean boolean522 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean522, false);
        java.lang.String string834 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string834, "top");
    }
    @Test
    public void test596() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        double double436 = calculadora353.somaDouble(105.5, 0.55);
        Assertions.assertEquals(double436, 106.05);
        int int469 = calculadora353.somaInt(1000, 500);
        Assertions.assertEquals(int469, 1500);
    }
    @Test
    public void test597() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean494 = calculadora353.menor(250, -100);
        Assertions.assertEquals(boolean494, false);
    }
    @Test
    public void test598() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        int int115 = calculadora353.mulInt(250, -1000);
        Assertions.assertEquals(int115, -250000);
    }
    @Test
    public void test599() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        boolean boolean620 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean620, false);
        java.lang.String string517 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string517, "top");
    }
    @Test
    public void test600() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double877 = calculadora353.divDouble(0.0, 0.0);
        Assertions.assertEquals(double877, NaN);
    }
    @Test
    public void test601() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        boolean boolean305 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean305, true);
        int int515 = calculadora353.somaInt(-1000, 250);
        Assertions.assertEquals(int515, -750);
    }
    @Test
    public void test602() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        java.lang.String string906 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string906, "VALEU");
        double double94 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double94, -0.18168538300009132);
    }
    @Test
    public void test603() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        java.lang.String string634 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string634, "valeu");
    }
    @Test
    public void test604() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        double double436 = calculadora353.somaDouble(105.5, 0.55);
        Assertions.assertEquals(double436, 106.05);
        int int469 = calculadora353.somaInt(1000, 500);
        Assertions.assertEquals(int469, 1500);
        int int31 = calculadora353.subInt(-1000, 100);
        Assertions.assertEquals(int31, -1100);
    }
    @Test
    public void test605() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        boolean boolean713 = calculadora353.menor(100, 100);
        Assertions.assertEquals(boolean713, false);
    }
    @Test
    public void test606() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
        int int202 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int202, 250);
    }
    @Test
    public void test607() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        double double858 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double858, Infinity);
        java.lang.String string53 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string53, "hello");
        double double882 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double882, -1.0);
    }
    @Test
    public void test608() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean765 = calculadora353.or(true, boolean312);
        Assertions.assertEquals(boolean765, true);
        boolean boolean943 = calculadora353.maior(-500, -100);
        Assertions.assertEquals(boolean943, false);
    }
    @Test
    public void test609() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        double double110 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double110, 0.0);
    }
    @Test
    public void test610() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        int int768 = calculadora353.mulInt(0, -500);
        Assertions.assertEquals(int768, 0);
        double double161 = calculadora353.mulDouble(3.14159, 1.99);
        Assertions.assertEquals(double161, 6.2517641);
    }
    @Test
    public void test611() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double527 = calculadora353.somaDouble(105.5, 10.953);
        Assertions.assertEquals(double527, 116.453);
        boolean boolean513 = calculadora353.maior(500, -1000);
        Assertions.assertEquals(boolean513, true);
        double double339 = calculadora353.mulDouble(-105.5, -105.5);
        Assertions.assertEquals(double339, 11130.25);
    }
    @Test
    public void test614() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        double double110 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double110, 0.0);
    }
    @Test
    public void test615() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
        boolean boolean776 = calculadora353.menor(-250, -100);
        Assertions.assertEquals(boolean776, true);
    }
    @Test
    public void test616() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
        java.lang.String string512 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string512, "NICE");
        double double638 = calculadora353.divDouble(10.953, 1.99);
        Assertions.assertEquals(double638, 5.504020100502513);
    }
    @Test
    public void test617() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        boolean boolean702 = calculadora353.maior(-250, -1000);
        Assertions.assertEquals(boolean702, true);
    }
    @Test
    public void test619() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        boolean boolean90 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean90, true);
    }
    @Test
    public void test620() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        boolean boolean146 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean146, false);
    }
    @Test
    public void test621() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
    }
    @Test
    public void test622() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        int int31 = calculadora353.subInt(-1000, 0);
        Assertions.assertEquals(int31, -1000);
    }
    @Test
    public void test623() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        java.lang.String string707 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string707, "hi");
        double double425 = calculadora353.subDouble(-1.55, 10.953);
        Assertions.assertEquals(double425, -12.503);
        double double124 = calculadora353.subDouble(-105.5, 3.14159);
        Assertions.assertEquals(double124, -108.64159);
        double double941 = calculadora353.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double941, 119.96820899999999);
    }
    @Test
    public void test624() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double673 = calculadora353.subDouble(-105.5, -10.953);
        Assertions.assertEquals(double673, -94.547);
        boolean boolean512 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean512, true);
        double double760 = calculadora353.subDouble(105.5, 105.5);
        Assertions.assertEquals(double760, 0.0);
        boolean boolean977 = calculadora353.or(false, boolean888);
        Assertions.assertEquals(boolean977, false);
    }
    @Test
    public void test625() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string33 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string33, "NICE");
        java.lang.String string458 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string458, "GO");
    }
    @Test
    public void test628() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        boolean boolean251 = calculadora353.menor(-100, 100);
        Assertions.assertEquals(boolean251, true);
        int int531 = calculadora353.mulInt(1000, 1000);
        Assertions.assertEquals(int531, 1000000);
    }
    @Test
    public void test629() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        int int538 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int538, 600);
        double double483 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double483, -1.0);
    }
    @Test
    public void test630() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        boolean boolean950 = calculadora353.and(boolean906, false);
        Assertions.assertEquals(boolean950, false);
        int int925 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int925, 100000);
        double double967 = calculadora353.subDouble(0.0, -1.55);
        Assertions.assertEquals(double967, 1.55);
    }
    @Test
    public void test631() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        java.lang.String string738 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string738, "NICE");
        boolean boolean915 = calculadora353.menor(-1000, -100);
        Assertions.assertEquals(boolean915, true);
    }
    @Test
    public void test632() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int104 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int104, -125000);
        int int150 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int150, -25000);
    }
    @Test
    public void test634() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        double double858 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double858, Infinity);
        java.lang.String string53 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string53, "hello");
        double double882 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double882, -1.0);
        int int461 = calculadora353.subInt(500, -250);
        Assertions.assertEquals(int461, 750);
    }
    @Test
    public void test635() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        double double551 = calculadora353.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double551, 0.6334372085472643);
        boolean boolean522 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean522, false);
    }
    @Test
    public void test636() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double447 = calculadora353.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double447, -0.8525000000000001);
        double double496 = calculadora353.subDouble(105.5, -105.5);
        Assertions.assertEquals(double496, 211.0);
    }
    @Test
    public void test637() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        double double551 = calculadora353.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double551, 0.6334372085472643);
        java.lang.String string507 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string507, "nice");
    }
    @Test
    public void test638() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        boolean boolean950 = calculadora353.and(boolean906, false);
        Assertions.assertEquals(boolean950, false);
        int int925 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int925, 100000);
        java.lang.String string675 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string675, "TOP");
    }
    @Test
    public void test639() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        java.lang.String string728 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string728, "HELLO");
        boolean boolean853 = calculadora353.menor(0, 1000);
        Assertions.assertEquals(boolean853, true);
        boolean boolean636 = calculadora353.maior(500, 500);
        Assertions.assertEquals(boolean636, false);
    }
    @Test
    public void test640() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        double double62 = calculadora353.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double62, 108.64159);
        int int524 = calculadora353.mulInt(0, -1000);
        Assertions.assertEquals(int524, 0);
        boolean boolean29 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean29, false);
    }
    @Test
    public void test642() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean154 = calculadora353.menor(-250, 250);
        Assertions.assertEquals(boolean154, true);
        int int450 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int450, 50000);
    }
    @Test
    public void test643() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        double double651 = calculadora353.subDouble(-10.953, -105.5);
        Assertions.assertEquals(double651, 94.547);
        double double710 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double710, 1.0);
        java.lang.String string744 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string744, "LOREM");
    }
    @Test
    public void test645() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        double double110 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double110, 0.0);
        boolean boolean784 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean784, false);
    }
    @Test
    public void test646() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
    }
    @Test
    public void test647() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
        boolean boolean277 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean277, false);
    }
    @Test
    public void test648() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double131 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double131, 0.0);
    }
    @Test
    public void test649() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        double double388 = calculadora353.mulDouble(0.0, 0.55);
        Assertions.assertEquals(double388, 0.0);
    }
    @Test
    public void test651() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        java.lang.String string555 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string555, "TOP");
        double double571 = calculadora353.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double571, 5.13159);
    }
    @Test
    public void test652() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        int int772 = calculadora353.divInt(100, -250);
        Assertions.assertEquals(int772, 0);
    }
    @Test
    public void test654() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int519 = calculadora353.divInt(250, 1000);
        Assertions.assertEquals(int519, 0);
        java.lang.String string391 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string391, "lorem");
    }
    @Test
    public void test655() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        boolean boolean290 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean290, true);
    }
    @Test
    public void test656() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double442 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double442, 6.024150000000001);
        int int926 = calculadora353.somaInt(-100, -250);
        Assertions.assertEquals(int926, -350);
        double double649 = calculadora353.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double649, 1155.5415);
    }
    @Test
    public void test658() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        boolean boolean244 = calculadora353.and(true, boolean721);
        Assertions.assertEquals(boolean244, false);
    }
    @Test
    public void test659() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        double double904 = calculadora353.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double904, 1155.5415);
        int int468 = calculadora353.somaInt(-1000, 250);
        Assertions.assertEquals(int468, -750);
    }
    @Test
    public void test660() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean737 = calculadora353.and(true, boolean567);
        Assertions.assertEquals(boolean737, false);
    }
    @Test
    public void test661() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        int int786 = calculadora353.divInt(-250, -100);
        Assertions.assertEquals(int786, 2);
        int int828 = calculadora353.mulInt(0, 250);
        Assertions.assertEquals(int828, 0);
    }
    @Test
    public void test662() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double106 = calculadora353.subDouble(0.55, -1.55);
        Assertions.assertEquals(double106, 2.1);
    }
    @Test
    public void test663() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        double double603 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double603, -0.18168538300009132);
        int int697 = calculadora353.mulInt(-100, 250);
        Assertions.assertEquals(int697, -25000);
    }
    @Test
    public void test664() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        int int37 = calculadora353.somaInt(250, 100);
        Assertions.assertEquals(int37, 350);
    }
    @Test
    public void test665() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        int int567 = calculadora353.mulInt(100, 100);
        Assertions.assertEquals(int567, 10000);
        double double650 = calculadora353.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double650, -104.95);
    }
    @Test
    public void test666() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        double double643 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double643, -0.18168538300009132);
    }
    @Test
    public void test668() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double788 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double788, 105.5);
        double double785 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double785, 94.547);
        java.lang.String string541 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string541, "TOP");
    }
    @Test
    public void test669() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        java.lang.String string278 = calculadora353.toUpCase(string603);
        Assertions.assertEquals(string278, STRING603);
        java.lang.String string360 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string360, "hi");
    }
    @Test
    public void test670() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        boolean boolean483 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean483, true);
    }
    @Test
    public void test671() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double99 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double99, 0.029778104265402842);
        java.lang.String string377 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string377, "hello");
    }
    @Test
    public void test672() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean617 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean617, false);
        double double621 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double621, -8.963);
    }
    @Test
    public void test673() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int432 = calculadora353.subInt(-100, 100);
        Assertions.assertEquals(int432, -200);
        int int905 = calculadora353.divInt(-1000, 250);
        Assertions.assertEquals(int905, -4);
    }
    @Test
    public void test674() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        boolean boolean359 = calculadora353.maior(-100, -500);
        Assertions.assertEquals(boolean359, true);
        boolean boolean198 = calculadora353.maior(0, 0);
        Assertions.assertEquals(boolean198, false);
    }
    @Test
    public void test675() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string446 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string446, "VALEU");
        java.lang.String string991 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string991, "nice");
        double double719 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double719, -0.005213270142180095);
        int int450 = calculadora353.divInt(100, -100);
        Assertions.assertEquals(int450, -1);
    }
    @Test
    public void test676() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        int int212 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int212, -100000);
        java.lang.String string67 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string67, string466);
        int int593 = calculadora353.somaInt(250, 100);
        Assertions.assertEquals(int593, 350);
    }
    @Test
    public void test677() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        int int212 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int212, -100000);
        java.lang.String string67 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string67, string466);
        int int593 = calculadora353.somaInt(250, 100);
        Assertions.assertEquals(int593, 350);
        boolean boolean906 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean906, false);
    }
    @Test
    public void test678() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string341 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string341, "ipsum");
    }
    @Test
    public void test679() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        int int45 = calculadora353.divInt(500, -1000);
        Assertions.assertEquals(int45, 0);
        int int550 = calculadora353.somaInt(0, 100);
        Assertions.assertEquals(int550, 100);
        double double565 = calculadora353.subDouble(-1.55, -105.5);
        Assertions.assertEquals(double565, 103.95);
    }
    @Test
    public void test680() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean439 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean439, true);
        boolean boolean704 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean704, false);
    }
    @Test
    public void test681() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        boolean boolean237 = calculadora353.and(false, boolean815);
        Assertions.assertEquals(boolean237, false);
        boolean boolean955 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean955, false);
        boolean boolean369 = calculadora353.maior(1000, -100);
        Assertions.assertEquals(boolean369, true);
    }
    @Test
    public void test682() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        int int161 = calculadora353.mulInt(-250, 500);
        Assertions.assertEquals(int161, -125000);
    }
    @Test
    public void test683() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean242 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean242, true);
        int int984 = calculadora353.somaInt(1000, 1000);
        Assertions.assertEquals(int984, 2000);
    }
    @Test
    public void test684() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double961 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double961, -8.963);
        boolean boolean552 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean552, true);
    }
    @Test
    public void test685() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        int int48 = calculadora353.somaInt(-100, 100);
        Assertions.assertEquals(int48, 0);
    }
    @Test
    public void test686() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int519 = calculadora353.divInt(250, 1000);
        Assertions.assertEquals(int519, 0);
        double double540 = calculadora353.divDouble(-1.55, 0.0);
        Assertions.assertEquals(double540, -Infinity);
        int int239 = calculadora353.subInt(250, 100);
        Assertions.assertEquals(int239, 150);
    }
    @Test
    public void test687() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        boolean boolean950 = calculadora353.and(boolean906, false);
        Assertions.assertEquals(boolean950, false);
        int int925 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int925, 100000);
        java.lang.String string675 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string675, "TOP");
        double double526 = calculadora353.subDouble(-10.953, 0.55);
        Assertions.assertEquals(double526, -11.503);
    }
    @Test
    public void test688() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean439 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean439, true);
        boolean boolean704 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean704, false);
        java.lang.String string123 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string123, "GO");
    }
    @Test
    public void test689() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        int int73 = calculadora353.divInt(100, 100);
        Assertions.assertEquals(int73, 1);
    }
    @Test
    public void test691() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        java.lang.String string561 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string561, "top");
    }
    @Test
    public void test692() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean735 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean735, false);
        java.lang.String string844 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string844, "hi");
    }
    @Test
    public void test693() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        double double38 = calculadora353.mulDouble(-105.5, 105.5);
        Assertions.assertEquals(double38, -11130.25);
    }
    @Test
    public void test694() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
        java.lang.String string939 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string939, "nice");
    }
    @Test
    public void test695() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        int int881 = calculadora353.mulInt(100, 250);
        Assertions.assertEquals(int881, 25000);
    }
    @Test
    public void test696() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean254 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean254, false);
        boolean boolean263 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean263, true);
    }
    @Test
    public void test697() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean828 = calculadora353.menor(250, 100);
        Assertions.assertEquals(boolean828, false);
    }
    @Test
    public void test698() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
        int int320 = calculadora353.subInt(100, 1000);
        Assertions.assertEquals(int320, -900);
        boolean boolean141 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean141, true);
        double double797 = calculadora353.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double797, 1155.5415);
        boolean boolean516 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean516, true);
    }
    @Test
    public void test700() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int885 = calculadora353.mulInt(-500, -100);
        Assertions.assertEquals(int885, 50000);
    }
    @Test
    public void test701() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean999 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean999, true);
    }
    @Test
    public void test704() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean552 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean552, false);
    }
    @Test
    public void test705() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        double double551 = calculadora353.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double551, 0.6334372085472643);
        boolean boolean522 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean522, false);
        double double542 = calculadora353.mulDouble(10.953, -1.55);
        Assertions.assertEquals(double542, -16.977149999999998);
    }
    @Test
    public void test706() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        boolean boolean483 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean483, true);
        double double186 = calculadora353.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double186, 9.402999999999999);
    }
    @Test
    public void test707() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
    }
    @Test
    public void test708() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        double double937 = calculadora353.somaDouble(-1.55, -1.55);
        Assertions.assertEquals(double937, -3.1);
    }
    @Test
    public void test709() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean850 = calculadora353.maior(0, 1000);
        Assertions.assertEquals(boolean850, false);
        double double234 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double234, 1.0);
    }
    @Test
    public void test710() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string169 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string169, "HI");
        boolean boolean976 = calculadora353.menor(250, 0);
        Assertions.assertEquals(boolean976, false);
    }
    @Test
    public void test711() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
        boolean boolean259 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean259, true);
        boolean boolean18 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean18, false);
        double double18 = calculadora353.subDouble(105.5, -1.55);
        Assertions.assertEquals(double18, 107.05);
    }
    @Test
    public void test712() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        boolean boolean380 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean380, false);
        boolean boolean135 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean135, false);
        boolean boolean962 = calculadora353.menor(0, 1000);
        Assertions.assertEquals(boolean962, true);
    }
    @Test
    public void test714() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        boolean boolean97 = calculadora353.menor(250, -100);
        Assertions.assertEquals(boolean97, false);
    }
    @Test
    public void test715() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean214 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean214, false);
        boolean boolean418 = calculadora353.menor(0, 250);
        Assertions.assertEquals(boolean418, true);
        double double145 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double145, 103.51);
    }
    @Test
    public void test716() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        int int853 = calculadora353.somaInt(500, 250);
        Assertions.assertEquals(int853, 750);
    }
    @Test
    public void test717() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        java.lang.String string707 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string707, "hi");
        double double425 = calculadora353.subDouble(-1.55, 10.953);
        Assertions.assertEquals(double425, -12.503);
        double double124 = calculadora353.subDouble(-105.5, 3.14159);
        Assertions.assertEquals(double124, -108.64159);
        double double941 = calculadora353.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double941, 119.96820899999999);
        int int260 = calculadora353.divInt(500, -500);
        Assertions.assertEquals(int260, -1);
    }
    @Test
    public void test719() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int87 = calculadora353.mulInt(0, -250);
        Assertions.assertEquals(int87, 0);
        double double436 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double436, 0.0);
        boolean boolean582 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean582, false);
    }
    @Test
    public void test720() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        boolean boolean295 = calculadora353.maior(-500, -250);
        Assertions.assertEquals(boolean295, false);
    }
    @Test
    public void test721() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean616 = calculadora353.maior(100, 0);
        Assertions.assertEquals(boolean616, true);
        boolean boolean378 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean378, true);
    }
    @Test
    public void test722() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        boolean boolean719 = calculadora353.menor(250, 500);
        Assertions.assertEquals(boolean719, true);
    }
    @Test
    public void test724() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int412 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int412, 2000);
        int int41 = calculadora353.somaInt(250, 0);
        Assertions.assertEquals(int41, 250);
    }
    @Test
    public void test725() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        double double471 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double471, 19.91454545454545);
    }
    @Test
    public void test726() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
    }
    @Test
    public void test727() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean439 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean439, true);
        boolean boolean704 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean704, false);
        double double609 = calculadora353.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double609, 5.13159);
    }
    @Test
    public void test730() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean597 = calculadora353.maior(100, -100);
        Assertions.assertEquals(boolean597, true);
        java.lang.String string274 = calculadora353.toUpCase(string796);
        Assertions.assertEquals(string274, STRING796);
    }
    @Test
    public void test731() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        boolean boolean251 = calculadora353.menor(-100, 100);
        Assertions.assertEquals(boolean251, true);
        int int531 = calculadora353.mulInt(1000, 1000);
        Assertions.assertEquals(int531, 1000000);
        boolean boolean696 = calculadora353.menor(-500, 500);
        Assertions.assertEquals(boolean696, true);
    }
    @Test
    public void test732() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        boolean boolean470 = calculadora353.maior(-1000, -1000);
        Assertions.assertEquals(boolean470, false);
        double double797 = calculadora353.divDouble(0.0, 1.99);
        Assertions.assertEquals(double797, 0.0);
    }
    @Test
    public void test734() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double351 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double351, Infinity);
        java.lang.String string770 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string770, "lorem");
    }
    @Test
    public void test736() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        int int743 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int743, 1250);
        int int311 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int311, -25000);
        java.lang.String string224 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string224, "top");
    }
    @Test
    public void test737() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean949 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean949, true);
    }
    @Test
    public void test738() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        double double110 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double110, 0.0);
        boolean boolean784 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean784, false);
        double double875 = calculadora353.somaDouble(105.5, 10.953);
        Assertions.assertEquals(double875, 116.453);
    }
    @Test
    public void test739() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        double double260 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double260, -0.18168538300009132);
        int int947 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int947, 750);
    }
    @Test
    public void test740() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        double double110 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double110, 0.0);
        boolean boolean784 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean784, false);
        java.lang.String string114 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string114, "top");
    }
    @Test
    public void test742() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        boolean boolean694 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean694, false);
    }
    @Test
    public void test743() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean528 = calculadora353.menor(0, -500);
        Assertions.assertEquals(boolean528, false);
        boolean boolean8 = calculadora353.or(false, boolean528);
        Assertions.assertEquals(boolean8, false);
        int int186 = calculadora353.mulInt(0, -250);
        Assertions.assertEquals(int186, 0);
        boolean boolean937 = calculadora353.maior(0, 250);
        Assertions.assertEquals(boolean937, false);
    }
    @Test
    public void test744() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int104 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int104, -125000);
        int int150 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int150, -25000);
        java.lang.String string426 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string426, "valeu");
    }
    @Test
    public void test745() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean830 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean830, true);
        boolean boolean775 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean775, true);
    }
    @Test
    public void test748() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        double double110 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double110, 0.0);
        boolean boolean82 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean82, false);
    }
    @Test
    public void test749() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
    }
    @Test
    public void test751() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        int int115 = calculadora353.mulInt(250, -1000);
        Assertions.assertEquals(int115, -250000);
        double double915 = calculadora353.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double915, -104.95);
    }
    @Test
    public void test752() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        int int953 = calculadora353.divInt(250, 100);
        Assertions.assertEquals(int953, 2);
        int int122 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int122, -250);
        double double66 = calculadora353.divDouble(3.14159, 3.14159);
        Assertions.assertEquals(double66, 1.0);
    }
    @Test
    public void test753() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double890 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double890, 103.95);
    }
    @Test
    public void test754() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        double double882 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double882, 3.54);
        java.lang.String string283 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string283, "HELLO");
    }
    @Test
    public void test755() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        double double396 = calculadora353.somaDouble(-10.953, 0.55);
        Assertions.assertEquals(double396, -10.402999999999999);
        boolean boolean536 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean536, true);
    }
    @Test
    public void test756() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double361 = calculadora353.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double361, -102.35841);
        int int561 = calculadora353.mulInt(100, 0);
        Assertions.assertEquals(int561, 0);
        boolean boolean120 = calculadora353.or(false, boolean811);
        Assertions.assertEquals(boolean120, false);
    }
    @Test
    public void test757() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean12 = calculadora353.menor(250, -500);
        Assertions.assertEquals(boolean12, false);
        double double684 = calculadora353.subDouble(10.953, 10.953);
        Assertions.assertEquals(double684, 0.0);
    }
    @Test
    public void test759() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean242 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean242, true);
        double double266 = calculadora353.divDouble(10.953, 3.14159);
        Assertions.assertEquals(double266, 3.4864511282503443);
    }
    @Test
    public void test760() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int425 = calculadora353.divInt(1000, 100);
        Assertions.assertEquals(int425, 10);
        java.lang.String string583 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string583, "top");
        int int245 = calculadora353.divInt(-100, 100);
        Assertions.assertEquals(int245, -1);
    }
    @Test
    public void test761() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
        double double686 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double686, -104.95);
    }
    @Test
    public void test762() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        double double298 = calculadora353.divDouble(-1.55, 3.14159);
        Assertions.assertEquals(double298, -0.4933807403257586);
        double double732 = calculadora353.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double732, -0.0);
    }
    @Test
    public void test764() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        int int852 = calculadora353.divInt(1000, 250);
        Assertions.assertEquals(int852, 4);
        int int958 = calculadora353.mulInt(-100, 0);
        Assertions.assertEquals(int958, 0);
    }
    @Test
    public void test765() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        java.lang.String string560 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string560, "TOP");
    }
    @Test
    public void test767() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int412 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int412, 2000);
        int int555 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int555, -2);
        double double510 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double510, -3.54);
    }
    @Test
    public void test768() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean242 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean242, true);
        int int984 = calculadora353.somaInt(1000, 1000);
        Assertions.assertEquals(int984, 2000);
        double double549 = calculadora353.divDouble(10.953, -10.953);
        Assertions.assertEquals(double549, -1.0);
    }
    @Test
    public void test769() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        java.lang.String string564 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string564, string466);
        java.lang.String string236 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string236, "top");
    }
    @Test
    public void test770() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean795 = calculadora353.or(false, boolean721);
        Assertions.assertEquals(boolean795, false);
    }
    @Test
    public void test771() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        boolean boolean678 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean678, true);
    }
    @Test
    public void test772() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        int int953 = calculadora353.divInt(250, 100);
        Assertions.assertEquals(int953, 2);
        java.lang.String string906 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string906, "HELLO");
    }
    @Test
    public void test773() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        int int161 = calculadora353.mulInt(-250, 500);
        Assertions.assertEquals(int161, -125000);
        boolean boolean69 = calculadora353.or(boolean848, false);
        Assertions.assertEquals(boolean69, false);
    }
    @Test
    public void test775() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        int int28 = calculadora353.subInt(-250, 0);
        Assertions.assertEquals(int28, -250);
    }
    @Test
    public void test776() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        java.lang.String string590 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string590, "LOREM");
        java.lang.String string127 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string127, "ipsum");
    }
    @Test
    public void test777() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
        double double635 = calculadora353.divDouble(105.5, 3.14159);
        Assertions.assertEquals(double635, 33.58172135765648);
    }
    @Test
    public void test779() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
    }
    @Test
    public void test780() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
        double double635 = calculadora353.divDouble(105.5, 3.14159);
        Assertions.assertEquals(double635, 33.58172135765648);
        double double244 = calculadora353.divDouble(1.99, 1.99);
        Assertions.assertEquals(double244, 1.0);
    }
    @Test
    public void test781() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean357 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean357, false);
        int int461 = calculadora353.mulInt(500, 250);
        Assertions.assertEquals(int461, 125000);
        boolean boolean565 = calculadora353.menor(-100, -1000);
        Assertions.assertEquals(boolean565, false);
    }
    @Test
    public void test782() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int519 = calculadora353.divInt(250, 1000);
        Assertions.assertEquals(int519, 0);
        java.lang.String string44 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string44, "HELLO");
    }
    @Test
    public void test783() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        double double123 = calculadora353.subDouble(1.99, 0.0);
        Assertions.assertEquals(double123, 1.99);
    }
    @Test
    public void test784() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean816 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean816, false);
    }
    @Test
    public void test785() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double961 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double961, -8.963);
        java.lang.String string355 = calculadora353.toUpCase(string604);
        Assertions.assertEquals(string355, STRING604);
    }
    @Test
    public void test786() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        int int711 = calculadora353.divInt(500, 1000);
        Assertions.assertEquals(int711, 0);
    }
    @Test
    public void test787() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean254 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean254, false);
        int int928 = calculadora353.subInt(-500, -100);
        Assertions.assertEquals(int928, -400);
    }
    @Test
    public void test788() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        double double923 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double923, -107.05);
        double double828 = calculadora353.somaDouble(3.14159, 105.5);
        Assertions.assertEquals(double828, 108.64159);
    }
    @Test
    public void test789() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        int int711 = calculadora353.divInt(500, 1000);
        Assertions.assertEquals(int711, 0);
        int int397 = calculadora353.somaInt(250, -1000);
        Assertions.assertEquals(int397, -750);
    }
    @Test
    public void test790() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        double double201 = calculadora353.somaDouble(1.99, 3.14159);
        Assertions.assertEquals(double201, 5.13159);
    }
    @Test
    public void test791() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        int int65 = calculadora353.somaInt(100, 500);
        Assertions.assertEquals(int65, 600);
    }
    @Test
    public void test793() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        java.lang.String string354 = calculadora353.toUpCase(string944);
        Assertions.assertEquals(string354, STRING944);
    }
    @Test
    public void test794() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string169 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string169, "HI");
        int int251 = calculadora353.divInt(500, -100);
        Assertions.assertEquals(int251, -5);
        java.lang.String string10 = calculadora353.toLowCase(string169);
        Assertions.assertEquals(string10, string169);
        boolean boolean394 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean394, false);
    }
    @Test
    public void test795() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        boolean boolean380 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean380, false);
        boolean boolean919 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean919, true);
    }
    @Test
    public void test796() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        java.lang.String string43 = calculadora353.toLowCase(string603);
        Assertions.assertEquals(string43, string603);
    }
    @Test
    public void test797() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        double double38 = calculadora353.mulDouble(-105.5, 105.5);
        Assertions.assertEquals(double38, -11130.25);
        int int740 = calculadora353.divInt(-250, -250);
        Assertions.assertEquals(int740, 1);
    }
    @Test
    public void test798() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double788 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double788, 105.5);
        double double785 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double785, 94.547);
        int int191 = calculadora353.somaInt(250, 250);
        Assertions.assertEquals(int191, 500);
    }
    @Test
    public void test799() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        double double462 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double462, -1155.5415);
    }
    @Test
    public void test800() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        int int990 = calculadora353.subInt(100, -500);
        Assertions.assertEquals(int990, 600);
        java.lang.String string11 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string11, "HELLO");
    }
    @Test
    public void test801() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean137 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean137, false);
    }
    @Test
    public void test802() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean962 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean962, false);
        boolean boolean319 = calculadora353.menor(250, -1000);
        Assertions.assertEquals(boolean319, false);
    }
    @Test
    public void test803() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        java.lang.String string954 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string954, "nice");
        boolean boolean243 = calculadora353.menor(1000, -250);
        Assertions.assertEquals(boolean243, false);
    }
    @Test
    public void test804() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        double double260 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double260, -0.18168538300009132);
        int int947 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int947, 750);
        boolean boolean877 = calculadora353.menor(250, -1000);
        Assertions.assertEquals(boolean877, false);
    }
    @Test
    public void test805() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        java.lang.String string564 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string564, string466);
        int int136 = calculadora353.subInt(-500, 250);
        Assertions.assertEquals(int136, -750);
    }
    @Test
    public void test806() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double890 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double890, 103.95);
        double double947 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double947, 0.0);
    }
    @Test
    public void test807() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        boolean boolean499 = calculadora353.menor(250, 500);
        Assertions.assertEquals(boolean499, true);
        int int504 = calculadora353.somaInt(-500, 500);
        Assertions.assertEquals(int504, 0);
    }
    @Test
    public void test809() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        double double314 = calculadora353.somaDouble(-10.953, 105.5);
        Assertions.assertEquals(double314, 94.547);
        double double201 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double201, 6.024150000000001);
    }
    @Test
    public void test810() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        java.lang.String string634 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string634, "valeu");
        int int169 = calculadora353.mulInt(-250, 1000);
        Assertions.assertEquals(int169, -250000);
    }
    @Test
    public void test811() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double115 = calculadora353.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double115, 163.525);
    }
    @Test
    public void test812() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        java.lang.String string634 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string634, "valeu");
        int int169 = calculadora353.mulInt(-250, 1000);
        Assertions.assertEquals(int169, -250000);
        boolean boolean754 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean754, false);
    }
    @Test
    public void test813() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        int int354 = calculadora353.divInt(-100, 1000);
        Assertions.assertEquals(int354, 0);
        double double41 = calculadora353.mulDouble(10.953, 1.99);
        Assertions.assertEquals(double41, 21.79647);
    }
    @Test
    public void test817() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        double double441 = calculadora353.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double441, -107.05);
    }
    @Test
    public void test818() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        int int491 = calculadora353.mulInt(1000, -500);
        Assertions.assertEquals(int491, -500000);
    }
    @Test
    public void test819() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean357 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean357, false);
        int int461 = calculadora353.mulInt(500, 250);
        Assertions.assertEquals(int461, 125000);
        java.lang.String string253 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string253, "hello");
    }
    @Test
    public void test820() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        int int238 = calculadora353.subInt(-1000, 100);
        Assertions.assertEquals(int238, -1100);
    }
    @Test
    public void test821() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        double double341 = calculadora353.mulDouble(3.14159, 105.5);
        Assertions.assertEquals(double341, 331.437745);
        java.lang.String string55 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string55, "ipsum");
    }
    @Test
    public void test823() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        int int730 = calculadora353.mulInt(1000, 250);
        Assertions.assertEquals(int730, 250000);
        int int981 = calculadora353.subInt(0, 500);
        Assertions.assertEquals(int981, -500);
    }
    @Test
    public void test824() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double966 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double966, 0.0);
        int int724 = calculadora353.subInt(-1000, -250);
        Assertions.assertEquals(int724, -750);
    }
    @Test
    public void test825() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        java.lang.String string489 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string489, "LOREM");
        int int703 = calculadora353.divInt(0, -1000);
        Assertions.assertEquals(int703, 0);
        boolean boolean853 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean853, true);
    }
    @Test
    public void test826() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        int int555 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int555, -1250);
        int int932 = calculadora353.divInt(500, -500);
        Assertions.assertEquals(int932, -1);
        java.lang.String string743 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string743, "NICE");
        java.lang.String string508 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string508, "valeu");
    }
    @Test
    public void test828() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        java.lang.String string635 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string635, "TOP");
    }
    @Test
    public void test829() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean410 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean410, true);
    }
    @Test
    public void test830() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        int int354 = calculadora353.divInt(-100, 1000);
        Assertions.assertEquals(int354, 0);
        java.lang.String string507 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string507, "valeu");
    }
    @Test
    public void test831() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        boolean boolean290 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean290, true);
        int int214 = calculadora353.divInt(0, -250);
        Assertions.assertEquals(int214, 0);
    }
    @Test
    public void test833() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double115 = calculadora353.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double115, 163.525);
        boolean boolean75 = calculadora353.menor(500, 0);
        Assertions.assertEquals(boolean75, false);
    }
    @Test
    public void test834() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double903 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double903, -10.953);
        boolean boolean785 = calculadora353.menor(-250, -1000);
        Assertions.assertEquals(boolean785, false);
    }
    @Test
    public void test836() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int412 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int412, 2000);
        int int41 = calculadora353.somaInt(250, 0);
        Assertions.assertEquals(int41, 250);
        double double503 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double503, 0.0);
    }
    @Test
    public void test837() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean970 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean970, true);
        boolean boolean731 = calculadora353.maior(1000, 1000);
        Assertions.assertEquals(boolean731, false);
        boolean boolean922 = calculadora353.menor(500, 0);
        Assertions.assertEquals(boolean922, false);
    }
    @Test
    public void test838() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        boolean boolean380 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean380, false);
        boolean boolean919 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean919, true);
        boolean boolean968 = calculadora353.menor(0, 100);
        Assertions.assertEquals(boolean968, true);
    }
    @Test
    public void test839() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        int int881 = calculadora353.mulInt(100, 250);
        Assertions.assertEquals(int881, 25000);
        boolean boolean686 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean686, false);
    }
    @Test
    public void test840() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        boolean boolean146 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean146, false);
        java.lang.String string882 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string882, "GO");
    }
    @Test
    public void test841() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        java.lang.String string560 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string560, "TOP");
        int int570 = calculadora353.subInt(0, -100);
        Assertions.assertEquals(int570, 100);
    }
    @Test
    public void test844() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        int int666 = calculadora353.mulInt(-100, -500);
        Assertions.assertEquals(int666, 50000);
    }
    @Test
    public void test847() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int789 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int789, 0);
        boolean boolean753 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean753, false);
    }
    @Test
    public void test848() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean900 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean900, false);
        java.lang.String string965 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string965, "valeu");
    }
    @Test
    public void test849() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
        int int717 = calculadora353.divInt(500, 100);
        Assertions.assertEquals(int717, 5);
        int int6 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int6, 0);
    }
    @Test
    public void test850() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        double double110 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double110, 0.0);
        java.lang.String string572 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string572, "hello");
    }
    @Test
    public void test851() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        int int977 = calculadora353.subInt(100, 500);
        Assertions.assertEquals(int977, -400);
        double double423 = calculadora353.somaDouble(105.5, 0.0);
        Assertions.assertEquals(double423, 105.5);
    }
    @Test
    public void test853() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean616 = calculadora353.maior(100, 0);
        Assertions.assertEquals(boolean616, true);
        int int140 = calculadora353.subInt(-1000, -1000);
        Assertions.assertEquals(int140, 0);
    }
    @Test
    public void test854() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        boolean boolean499 = calculadora353.menor(250, 500);
        Assertions.assertEquals(boolean499, true);
        int int504 = calculadora353.somaInt(-500, 500);
        Assertions.assertEquals(int504, 0);
        boolean boolean508 = calculadora353.maior(100, 1000);
        Assertions.assertEquals(boolean508, false);
    }
    @Test
    public void test855() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int856 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int856, -2);
    }
    @Test
    public void test856() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int438 = calculadora353.somaInt(-100, -500);
        Assertions.assertEquals(int438, -600);
    }
    @Test
    public void test857() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int336 = calculadora353.divInt(0, 250);
        Assertions.assertEquals(int336, 0);
        int int511 = calculadora353.divInt(-100, -500);
        Assertions.assertEquals(int511, 0);
    }
    @Test
    public void test858() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        java.lang.String string769 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string769, "ipsum");
        boolean boolean211 = calculadora353.maior(-1000, -500);
        Assertions.assertEquals(boolean211, false);
    }
    @Test
    public void test859() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean137 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean137, false);
        boolean boolean146 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean146, true);
    }
    @Test
    public void test861() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        int int894 = calculadora353.subInt(-1000, 100);
        Assertions.assertEquals(int894, -1100);
    }
    @Test
    public void test862() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean653 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean653, false);
        boolean boolean187 = calculadora353.and(boolean653, boolean653);
        Assertions.assertEquals(boolean187, false);
    }
    @Test
    public void test863() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        double double256 = calculadora353.somaDouble(10.953, 3.14159);
        Assertions.assertEquals(double256, 14.09459);
    }
    @Test
    public void test865() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        double double436 = calculadora353.somaDouble(105.5, 0.55);
        Assertions.assertEquals(double436, 106.05);
        int int469 = calculadora353.somaInt(1000, 500);
        Assertions.assertEquals(int469, 1500);
        double double101 = calculadora353.mulDouble(3.14159, 3.14159);
        Assertions.assertEquals(double101, 9.869587728099999);
    }
    @Test
    public void test866() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int856 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int856, -2);
        boolean boolean688 = calculadora353.maior(-100, 500);
        Assertions.assertEquals(boolean688, false);
    }
    @Test
    public void test867() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        int int837 = calculadora353.divInt(-1000, -500);
        Assertions.assertEquals(int837, 2);
        double double838 = calculadora353.divDouble(3.14159, 10.953);
        Assertions.assertEquals(double838, 0.2868246142609331);
        java.lang.String string319 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string319, "valeu");
    }
    @Test
    public void test868() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        int int648 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int648, -1250);
    }
    @Test
    public void test870() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        boolean boolean305 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean305, true);
        int int515 = calculadora353.somaInt(-1000, 250);
        Assertions.assertEquals(int515, -750);
        boolean boolean184 = calculadora353.and(boolean305, true);
        Assertions.assertEquals(boolean184, false);
    }
    @Test
    public void test871() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        int int329 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int329, 0);
        boolean boolean461 = calculadora353.maior(100, -1000);
        Assertions.assertEquals(boolean461, true);
    }
    @Test
    public void test873() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        boolean boolean499 = calculadora353.menor(250, 500);
        Assertions.assertEquals(boolean499, true);
        int int504 = calculadora353.somaInt(-500, 500);
        Assertions.assertEquals(int504, 0);
        boolean boolean508 = calculadora353.maior(100, 1000);
        Assertions.assertEquals(boolean508, false);
        int int663 = calculadora353.divInt(500, 250);
        Assertions.assertEquals(int663, 2);
    }
    @Test
    public void test874() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        double double603 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double603, -0.18168538300009132);
        boolean boolean894 = calculadora353.and(boolean560, true);
        Assertions.assertEquals(boolean894, false);
    }
    @Test
    public void test875() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        java.lang.String string631 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string631, "top");
    }
    @Test
    public void test876() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        int int666 = calculadora353.mulInt(-100, -500);
        Assertions.assertEquals(int666, 50000);
        boolean boolean285 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean285, true);
    }
    @Test
    public void test877() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double548 = calculadora353.mulDouble(105.5, 105.5);
        Assertions.assertEquals(double548, 11130.25);
    }
    @Test
    public void test878() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        java.lang.String string728 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string728, "HELLO");
        boolean boolean853 = calculadora353.menor(0, 1000);
        Assertions.assertEquals(boolean853, true);
        boolean boolean636 = calculadora353.maior(500, 500);
        Assertions.assertEquals(boolean636, false);
        int int43 = calculadora353.somaInt(-100, -500);
        Assertions.assertEquals(int43, -600);
    }
    @Test
    public void test879() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean970 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean970, true);
        boolean boolean731 = calculadora353.maior(1000, 1000);
        Assertions.assertEquals(boolean731, false);
        int int245 = calculadora353.divInt(250, -1000);
        Assertions.assertEquals(int245, 0);
    }
    @Test
    public void test880() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean854 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean854, false);
        boolean boolean528 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean528, true);
    }
    @Test
    public void test881() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        boolean boolean950 = calculadora353.and(boolean906, false);
        Assertions.assertEquals(boolean950, false);
        int int925 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int925, 100000);
        boolean boolean48 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean48, false);
    }
    @Test
    public void test882() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string169 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string169, "HI");
        boolean boolean762 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean762, false);
    }
    @Test
    public void test883() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean523 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean523, false);
    }
    @Test
    public void test885() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        java.lang.String string635 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string635, "TOP");
        java.lang.String string713 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string713, "TOP");
    }
    @Test
    public void test886() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        boolean boolean245 = calculadora353.menor(100, 100);
        Assertions.assertEquals(boolean245, false);
    }
    @Test
    public void test887() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        int int940 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int940, 50000);
    }
    @Test
    public void test888() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        boolean boolean232 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean232, false);
    }
    @Test
    public void test891() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        int int555 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int555, -1250);
        int int932 = calculadora353.divInt(500, -500);
        Assertions.assertEquals(int932, -1);
        java.lang.String string743 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string743, "NICE");
        java.lang.String string203 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string203, "valeu");
    }
    @Test
    public void test892() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        int int30 = calculadora353.somaInt(1000, -100);
        Assertions.assertEquals(int30, 900);
        java.lang.String string596 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string596, "ipsum");
        boolean boolean300 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean300, false);
    }
    @Test
    public void test893() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        boolean boolean440 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean440, true);
        double double653 = calculadora353.mulDouble(-1.55, -10.953);
        Assertions.assertEquals(double653, 16.977149999999998);
    }
    @Test
    public void test894() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        boolean boolean359 = calculadora353.maior(-100, -500);
        Assertions.assertEquals(boolean359, true);
        double double280 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double280, -0.005213270142180095);
    }
    @Test
    public void test895() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int725 = calculadora353.mulInt(-1000, -250);
        Assertions.assertEquals(int725, 250000);
        double double174 = calculadora353.somaDouble(10.953, 10.953);
        Assertions.assertEquals(double174, 21.906);
    }
    @Test
    public void test897() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int425 = calculadora353.divInt(1000, 100);
        Assertions.assertEquals(int425, 10);
        java.lang.String string583 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string583, "top");
        int int245 = calculadora353.divInt(-100, 100);
        Assertions.assertEquals(int245, -1);
        boolean boolean365 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean365, true);
    }
    @Test
    public void test898() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        int int881 = calculadora353.mulInt(100, 250);
        Assertions.assertEquals(int881, 25000);
        boolean boolean686 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean686, false);
        boolean boolean174 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean174, false);
    }
    @Test
    public void test899() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        java.lang.String string449 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string449, "TOP");
        double double492 = calculadora353.subDouble(3.14159, 10.953);
        Assertions.assertEquals(double492, -7.8114099999999995);
    }
    @Test
    public void test900() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double638 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double638, -1.44);
        boolean boolean582 = calculadora353.maior(-250, -100);
        Assertions.assertEquals(boolean582, false);
    }
    @Test
    public void test901() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        java.lang.String string807 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string807, "LOREM");
        int int992 = calculadora353.subInt(-250, 1000);
        Assertions.assertEquals(int992, -1250);
    }
    @Test
    public void test902() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
        int int451 = calculadora353.subInt(-500, 0);
        Assertions.assertEquals(int451, -500);
        double double528 = calculadora353.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double528, -0.0);
        boolean boolean630 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean630, false);
    }
    @Test
    public void test903() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        double double551 = calculadora353.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double551, 0.6334372085472643);
        double double176 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double176, 5.711981818181817);
    }
    @Test
    public void test904() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        int int940 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int940, 50000);
        double double652 = calculadora353.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double652, 0.0);
    }
    @Test
    public void test905() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
    }
    @Test
    public void test906() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        int int61 = calculadora353.subInt(0, -100);
        Assertions.assertEquals(int61, 100);
    }
    @Test
    public void test907() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
    }
    @Test
    public void test908() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int104 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int104, -125000);
        int int150 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int150, -25000);
        java.lang.String string923 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string923, "lorem");
    }
    @Test
    public void test909() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        boolean boolean146 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean146, false);
        java.lang.String string882 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string882, "GO");
        double double9 = calculadora353.subDouble(-1.55, 10.953);
        Assertions.assertEquals(double9, -12.503);
    }
    @Test
    public void test910() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        int int206 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int206, 100000);
    }
    @Test
    public void test911() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean452 = calculadora353.or(true, boolean597);
        Assertions.assertEquals(boolean452, true);
        double double15 = calculadora353.divDouble(1.99, -1.55);
        Assertions.assertEquals(double15, -1.2838709677419355);
        java.lang.String string682 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string682, "TOP");
    }
    @Test
    public void test913() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double99 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double99, 0.029778104265402842);
        int int359 = calculadora353.divInt(-1000, 100);
        Assertions.assertEquals(int359, -10);
    }
    @Test
    public void test914() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        java.lang.String string466 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string466, "VALEU");
        boolean boolean700 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean700, false);
    }
    @Test
    public void test915() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int795 = calculadora353.somaInt(-500, -1000);
        Assertions.assertEquals(int795, -1500);
        boolean boolean900 = calculadora353.maior(1000, -500);
        Assertions.assertEquals(boolean900, true);
    }
    @Test
    public void test917() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean214 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean214, false);
        boolean boolean418 = calculadora353.menor(0, 250);
        Assertions.assertEquals(boolean418, true);
        double double145 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double145, 103.51);
        int int601 = calculadora353.subInt(500, 1000);
        Assertions.assertEquals(int601, -500);
    }
    @Test
    public void test918() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        boolean boolean256 = calculadora353.or(boolean691, true);
        Assertions.assertEquals(boolean256, true);
        double double776 = calculadora353.subDouble(-10.953, 105.5);
        Assertions.assertEquals(double776, -116.453);
    }
    @Test
    public void test920() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        double double603 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double603, -0.18168538300009132);
        boolean boolean894 = calculadora353.and(boolean560, true);
        Assertions.assertEquals(boolean894, false);
        boolean boolean356 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean356, false);
    }
    @Test
    public void test921() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double115 = calculadora353.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double115, 163.525);
        boolean boolean75 = calculadora353.menor(500, 0);
        Assertions.assertEquals(boolean75, false);
        java.lang.String string360 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string360, "ipsum");
    }
    @Test
    public void test922() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        boolean boolean808 = calculadora353.menor(100, 1000);
        Assertions.assertEquals(boolean808, true);
    }
    @Test
    public void test923() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        int int863 = calculadora353.somaInt(-250, -500);
        Assertions.assertEquals(int863, -750);
        double double50 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double50, 103.51);
    }
    @Test
    public void test924() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int870 = calculadora353.mulInt(250, 1000);
        Assertions.assertEquals(int870, 250000);
    }
    @Test
    public void test926() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean254 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean254, false);
        int int928 = calculadora353.subInt(-500, -100);
        Assertions.assertEquals(int928, -400);
        int int857 = calculadora353.divInt(-100, -500);
        Assertions.assertEquals(int857, 0);
    }
    @Test
    public void test927() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        boolean boolean305 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean305, true);
        int int515 = calculadora353.somaInt(-1000, 250);
        Assertions.assertEquals(int515, -750);
        int int222 = calculadora353.subInt(-100, -250);
        Assertions.assertEquals(int222, 150);
    }
    @Test
    public void test929() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double890 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double890, 103.95);
        boolean boolean132 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean132, false);
    }
    @Test
    public void test930() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean854 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean854, false);
        boolean boolean528 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean528, true);
        double double214 = calculadora353.subDouble(105.5, 3.14159);
        Assertions.assertEquals(double214, 102.35841);
    }
    @Test
    public void test932() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
        java.lang.String string30 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string30, "go");
    }
    @Test
    public void test933() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        int int711 = calculadora353.divInt(500, 1000);
        Assertions.assertEquals(int711, 0);
        int int690 = calculadora353.mulInt(1000, 250);
        Assertions.assertEquals(int690, 250000);
    }
    @Test
    public void test934() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        int int115 = calculadora353.mulInt(250, -1000);
        Assertions.assertEquals(int115, -250000);
        double double373 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double373, -104.95);
    }
    @Test
    public void test935() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        java.lang.String string769 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string769, "ipsum");
        int int914 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int914, 0);
    }
    @Test
    public void test936() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        java.lang.String string889 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string889, "VALEU");
        boolean boolean757 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean757, true);
        boolean boolean702 = calculadora353.maior(100, 100);
        Assertions.assertEquals(boolean702, false);
    }
    @Test
    public void test938() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        int int31 = calculadora353.subInt(-1000, 0);
        Assertions.assertEquals(int31, -1000);
        double double782 = calculadora353.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double782, -102.35841);
    }
    @Test
    public void test939() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        double double403 = calculadora353.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double403, 0.43999999999999995);
        double double851 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double851, 105.5);
    }
    @Test
    public void test940() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        java.lang.String string451 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string451, "NICE");
    }
    @Test
    public void test941() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        double double221 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double221, 0.0);
    }
    @Test
    public void test943() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        java.lang.String string135 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string135, "hi");
        boolean boolean319 = calculadora353.and(false, boolean815);
        Assertions.assertEquals(boolean319, false);
    }
    @Test
    public void test944() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean357 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean357, false);
        int int461 = calculadora353.mulInt(500, 250);
        Assertions.assertEquals(int461, 125000);
        boolean boolean565 = calculadora353.menor(-100, -1000);
        Assertions.assertEquals(boolean565, false);
        boolean boolean561 = calculadora353.menor(1000, 0);
        Assertions.assertEquals(boolean561, false);
    }
    @Test
    public void test945() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        boolean boolean391 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean391, false);
        int int599 = calculadora353.mulInt(-1000, 0);
        Assertions.assertEquals(int599, 0);
    }
    @Test
    public void test946() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        boolean boolean251 = calculadora353.menor(-100, 100);
        Assertions.assertEquals(boolean251, true);
        double double449 = calculadora353.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double449, -104.95);
    }
    @Test
    public void test947() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        double double163 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double163, -3.54);
        java.lang.String string385 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string385, "valeu");
        int int199 = calculadora353.divInt(1000, 250);
        Assertions.assertEquals(int199, 4);
    }
    @Test
    public void test949() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        int int860 = calculadora353.subInt(-500, -100);
        Assertions.assertEquals(int860, -400);
    }
    @Test
    public void test950() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        int int267 = calculadora353.somaInt(500, 0);
        Assertions.assertEquals(int267, 500);
    }
    @Test
    public void test951() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        int int984 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int984, -750);
    }
    @Test
    public void test952() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double447 = calculadora353.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double447, -0.8525000000000001);
        int int939 = calculadora353.mulInt(0, -1000);
        Assertions.assertEquals(int939, 0);
    }
    @Test
    public void test953() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        double double69 = calculadora353.subDouble(0.0, 0.0);
        Assertions.assertEquals(double69, 0.0);
        int int155 = calculadora353.subInt(-500, 250);
        Assertions.assertEquals(int155, -750);
    }
    @Test
    public void test955() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        int int555 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int555, -1250);
        int int932 = calculadora353.divInt(500, -500);
        Assertions.assertEquals(int932, -1);
        java.lang.String string743 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string743, "NICE");
        boolean boolean837 = calculadora353.maior(500, 100);
        Assertions.assertEquals(boolean837, true);
    }
    @Test
    public void test956() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        java.lang.String string631 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string631, "top");
        double double901 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double901, Infinity);
    }
    @Test
    public void test957() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        double double923 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double923, -107.05);
        boolean boolean549 = calculadora353.maior(1000, 1000);
        Assertions.assertEquals(boolean549, false);
    }
    @Test
    public void test958() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        int int977 = calculadora353.subInt(100, 500);
        Assertions.assertEquals(int977, -400);
        double double423 = calculadora353.somaDouble(105.5, 0.0);
        Assertions.assertEquals(double423, 105.5);
        java.lang.String string472 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string472, "lorem");
    }
    @Test
    public void test959() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean735 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean735, false);
        java.lang.String string844 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string844, "hi");
        boolean boolean583 = calculadora353.menor(500, 100);
        Assertions.assertEquals(boolean583, false);
    }
    @Test
    public void test960() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean617 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean617, false);
        double double621 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double621, -8.963);
        int int990 = calculadora353.subInt(-100, -250);
        Assertions.assertEquals(int990, 150);
    }
    @Test
    public void test962() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double638 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double638, -1.44);
        boolean boolean582 = calculadora353.maior(-250, -100);
        Assertions.assertEquals(boolean582, false);
        int int813 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int813, -2);
    }
    @Test
    public void test963() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        java.lang.String string310 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string310, "IPSUM");
        double double480 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double480, -0.0502145530904775);
    }
    @Test
    public void test964() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        java.lang.String string135 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string135, "hi");
        boolean boolean319 = calculadora353.and(false, boolean815);
        Assertions.assertEquals(boolean319, false);
        java.lang.String string187 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string187, "go");
    }
    @Test
    public void test967() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double548 = calculadora353.mulDouble(105.5, 105.5);
        Assertions.assertEquals(double548, 11130.25);
        double double218 = calculadora353.subDouble(-105.5, 0.55);
        Assertions.assertEquals(double218, -106.05);
    }
    @Test
    public void test968() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double775 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double775, 6.28318);
        boolean boolean832 = calculadora353.menor(-250, 100);
        Assertions.assertEquals(boolean832, true);
    }
    @Test
    public void test969() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean827 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean827, false);
        boolean boolean522 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean522, false);
        int int108 = calculadora353.subInt(-100, 250);
        Assertions.assertEquals(int108, -350);
    }
    @Test
    public void test970() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean516 = calculadora353.maior(-1000, -1000);
        Assertions.assertEquals(boolean516, false);
        int int396 = calculadora353.subInt(-1000, 500);
        Assertions.assertEquals(int396, -1500);
    }
    @Test
    public void test971() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        int int354 = calculadora353.divInt(-100, 1000);
        Assertions.assertEquals(int354, 0);
        double double442 = calculadora353.mulDouble(-1.55, -105.5);
        Assertions.assertEquals(double442, 163.525);
    }
    @Test
    public void test973() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean700 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean700, false);
        int int58 = calculadora353.divInt(0, 500);
        Assertions.assertEquals(int58, 0);
        boolean boolean695 = calculadora353.menor(100, -1000);
        Assertions.assertEquals(boolean695, false);
        int int503 = calculadora353.somaInt(500, 500);
        Assertions.assertEquals(int503, 1000);
    }
    @Test
    public void test974() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean828 = calculadora353.menor(250, 100);
        Assertions.assertEquals(boolean828, false);
        boolean boolean279 = calculadora353.and(boolean593, boolean593);
        Assertions.assertEquals(boolean279, false);
    }
    @Test
    public void test975() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        int int329 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int329, 0);
        int int739 = calculadora353.subInt(-1000, 500);
        Assertions.assertEquals(int739, -1500);
    }
    @Test
    public void test976() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean887 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean887, false);
    }
    @Test
    public void test977() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double361 = calculadora353.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double361, -102.35841);
        int int32 = calculadora353.somaInt(-500, -1000);
        Assertions.assertEquals(int32, -1500);
    }
    @Test
    public void test978() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean950 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean950, false);
        java.lang.String string456 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string456, "hello");
        boolean boolean392 = calculadora353.maior(-100, -100);
        Assertions.assertEquals(boolean392, false);
    }
    @Test
    public void test979() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        boolean boolean371 = calculadora353.or(true, boolean718);
        Assertions.assertEquals(boolean371, true);
    }
    @Test
    public void test982() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
        double double515 = calculadora353.divDouble(-105.5, -105.5);
        Assertions.assertEquals(double515, 1.0);
        double double930 = calculadora353.mulDouble(105.5, 1.99);
        Assertions.assertEquals(double930, 209.945);
    }
    @Test
    public void test983() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        int int786 = calculadora353.divInt(-250, -100);
        Assertions.assertEquals(int786, 2);
        double double989 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double989, 0.029778104265402842);
        double double493 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double493, -1155.5415);
    }
    @Test
    public void test984() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        int int37 = calculadora353.somaInt(250, 100);
        Assertions.assertEquals(int37, 350);
        int int660 = calculadora353.somaInt(-500, 0);
        Assertions.assertEquals(int660, -500);
    }
    @Test
    public void test985() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        boolean boolean251 = calculadora353.menor(-100, 100);
        Assertions.assertEquals(boolean251, true);
        double double449 = calculadora353.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double449, -104.95);
        boolean boolean199 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean199, true);
    }
    @Test
    public void test986() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        boolean boolean24 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean24, true);
        int int199 = calculadora353.subInt(500, 250);
        Assertions.assertEquals(int199, 250);
        int int795 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int795, 1500);
    }
    @Test
    public void test987() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int885 = calculadora353.mulInt(-500, -100);
        Assertions.assertEquals(int885, 50000);
        java.lang.String string289 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string289, "HELLO");
    }
    @Test
    public void test988() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int296 = calculadora353.mulInt(0, 500);
        Assertions.assertEquals(int296, 0);
        int int803 = calculadora353.mulInt(-1000, -1000);
        Assertions.assertEquals(int803, 1000000);
        double double965 = calculadora353.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double965, 0.0);
    }
    @Test
    public void test989() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double137 = calculadora353.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double137, 1.1);
        boolean boolean286 = calculadora353.maior(0, -100);
        Assertions.assertEquals(boolean286, true);
    }
    @Test
    public void test991() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        boolean boolean50 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean50, true);
        double double566 = calculadora353.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double566, 0.0);
    }
    @Test
    public void test992() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        double double462 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double462, -1155.5415);
        boolean boolean164 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean164, true);
    }
    @Test
    public void test993() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        int int538 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int538, 600);
        double double483 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double483, -1.0);
        double double359 = calculadora353.somaDouble(-10.953, 1.99);
        Assertions.assertEquals(double359, -8.963);
    }
    @Test
    public void test994() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        double double866 = calculadora353.subDouble(3.14159, 105.5);
        Assertions.assertEquals(double866, -102.35841);
    }
    @Test
    public void test995() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        double double121 = calculadora353.mulDouble(3.14159, 105.5);
        Assertions.assertEquals(double121, 331.437745);
    }
    @Test
    public void test997() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        boolean boolean351 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean351, false);
    }
    @Test
    public void test998() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        java.lang.String string270 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string270, "hello");
        int int33 = calculadora353.mulInt(-100, 250);
        Assertions.assertEquals(int33, -25000);
    }
    @Test
    public void test999() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean288 = calculadora353.maior(500, -1000);
        Assertions.assertEquals(boolean288, true);
        boolean boolean891 = calculadora353.menor(100, -1000);
        Assertions.assertEquals(boolean891, false);
    }
    @Test
    public void test1000() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        java.lang.String string43 = calculadora353.toLowCase(string603);
        Assertions.assertEquals(string43, string603);
        double double7 = calculadora353.divDouble(10.953, -10.953);
        Assertions.assertEquals(double7, -1.0);
    }
    @Test
    public void test1005() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        boolean boolean574 = calculadora353.or(boolean319, false);
        Assertions.assertEquals(boolean574, false);
        int int919 = calculadora353.somaInt(500, -250);
        Assertions.assertEquals(int919, 250);
        int int188 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int188, -100000);
    }
    @Test
    public void test1006() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int432 = calculadora353.subInt(-100, 100);
        Assertions.assertEquals(int432, -200);
        int int189 = calculadora353.subInt(-100, -250);
        Assertions.assertEquals(int189, 150);
    }
    @Test
    public void test1007() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        java.lang.String string449 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string449, "TOP");
        java.lang.String string332 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string332, "HELLO");
        java.lang.String string631 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string631, "HI");
    }
    @Test
    public void test1008() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        java.lang.String string561 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string561, "top");
        boolean boolean993 = calculadora353.maior(0, 500);
        Assertions.assertEquals(boolean993, false);
    }
    @Test
    public void test1009() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
        double double245 = calculadora353.mulDouble(105.5, -1.55);
        Assertions.assertEquals(double245, -163.525);
    }
    @Test
    public void test1010() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        double double47 = calculadora353.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double47, -0.2868246142609331);
    }
    @Test
    public void test1011() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double115 = calculadora353.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double115, 163.525);
        boolean boolean75 = calculadora353.menor(500, 0);
        Assertions.assertEquals(boolean75, false);
        double double555 = calculadora353.mulDouble(105.5, -105.5);
        Assertions.assertEquals(double555, -11130.25);
    }
    @Test
    public void test1012() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        java.lang.String string278 = calculadora353.toUpCase(string603);
        Assertions.assertEquals(string278, STRING603);
        java.lang.String string360 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string360, "hi");
        double double333 = calculadora353.mulDouble(10.953, -1.55);
        Assertions.assertEquals(double333, -16.977149999999998);
    }
    @Test
    public void test1013() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int789 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int789, 0);
        boolean boolean753 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean753, false);
        int int608 = calculadora353.divInt(1000, 500);
        Assertions.assertEquals(int608, 2);
    }
    @Test
    public void test1014() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        double double64 = calculadora353.mulDouble(-1.55, 1.99);
        Assertions.assertEquals(double64, -3.0845000000000002);
        int int519 = calculadora353.divInt(500, 100);
        Assertions.assertEquals(int519, 5);
    }
    @Test
    public void test1015() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int425 = calculadora353.divInt(1000, 100);
        Assertions.assertEquals(int425, 10);
        java.lang.String string583 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string583, "top");
        int int245 = calculadora353.divInt(-100, 100);
        Assertions.assertEquals(int245, -1);
        int int951 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int951, 1);
    }
    @Test
    public void test1016() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        int int852 = calculadora353.divInt(1000, 250);
        Assertions.assertEquals(int852, 4);
        int int958 = calculadora353.mulInt(-100, 0);
        Assertions.assertEquals(int958, 0);
        double double784 = calculadora353.divDouble(0.55, -1.55);
        Assertions.assertEquals(double784, -0.3548387096774194);
    }
    @Test
    public void test1018() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
        boolean boolean187 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean187, false);
    }
    @Test
    public void test1019() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double954 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double954, 6.28318);
        double double891 = calculadora353.divDouble(0.0, -105.5);
        Assertions.assertEquals(double891, -0.0);
        double double620 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double620, -10.953);
        boolean boolean233 = calculadora353.maior(-500, -100);
        Assertions.assertEquals(boolean233, false);
    }
    @Test
    public void test1020() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        java.lang.String string43 = calculadora353.toLowCase(string603);
        Assertions.assertEquals(string43, string603);
        int int306 = calculadora353.somaInt(1000, 500);
        Assertions.assertEquals(int306, 1500);
    }
    @Test
    public void test1021() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean357 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean357, false);
        int int651 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int651, 150);
    }
    @Test
    public void test1022() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        java.lang.String string631 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string631, "top");
        boolean boolean140 = calculadora353.menor(-500, -250);
        Assertions.assertEquals(boolean140, true);
    }
    @Test
    public void test1023() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        double double221 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double221, 0.0);
        double double938 = calculadora353.divDouble(-105.5, -105.5);
        Assertions.assertEquals(double938, 1.0);
    }
    @Test
    public void test1024() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        java.lang.String string310 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string310, "IPSUM");
        double double480 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double480, -0.0502145530904775);
        boolean boolean953 = calculadora353.menor(0, 250);
        Assertions.assertEquals(boolean953, true);
    }
    @Test
    public void test1026() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
        java.lang.String string149 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string149, "go");
    }
    @Test
    public void test1027() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double658 = calculadora353.divDouble(105.5, 0.55);
        Assertions.assertEquals(double658, 191.8181818181818);
    }
    @Test
    public void test1029() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double890 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double890, 103.95);
        double double947 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double947, 0.0);
        double double991 = calculadora353.divDouble(0.0, 0.55);
        Assertions.assertEquals(double991, 0.0);
    }
    @Test
    public void test1030() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int514 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int514, 250000);
        double double701 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double701, -104.95);
        double double649 = calculadora353.divDouble(1.99, 105.5);
        Assertions.assertEquals(double649, 0.01886255924170616);
    }
    @Test
    public void test1032() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean410 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean410, true);
        double double839 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double839, 103.95);
    }
    @Test
    public void test1033() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
        boolean boolean259 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean259, true);
        boolean boolean18 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean18, false);
        double double18 = calculadora353.subDouble(105.5, -1.55);
        Assertions.assertEquals(double18, 107.05);
        java.lang.String string767 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string767, "NICE");
    }
    @Test
    public void test1034() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        int int354 = calculadora353.divInt(-100, 1000);
        Assertions.assertEquals(int354, 0);
        java.lang.String string507 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string507, "valeu");
        double double752 = calculadora353.mulDouble(105.5, 1.99);
        Assertions.assertEquals(double752, 209.945);
    }
    @Test
    public void test1036() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean842 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean842, false);
    }
    @Test
    public void test1037() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int278 = calculadora353.subInt(500, 500);
        Assertions.assertEquals(int278, 0);
        boolean boolean86 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean86, false);
    }
    @Test
    public void test1038() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string69 = calculadora353.toUpCase(string603);
        Assertions.assertEquals(string69, STRING603);
    }
    @Test
    public void test1039() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        int int329 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int329, 0);
        double double111 = calculadora353.somaDouble(-10.953, 1.99);
        Assertions.assertEquals(double111, -8.963);
    }
    @Test
    public void test1040() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
        boolean boolean911 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean911, false);
        double double782 = calculadora353.subDouble(1.99, 1.99);
        Assertions.assertEquals(double782, 0.0);
        boolean boolean530 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean530, false);
    }
    @Test
    public void test1041() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        int int956 = calculadora353.divInt(-500, -250);
        Assertions.assertEquals(int956, 2);
    }
    @Test
    public void test1042() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double548 = calculadora353.mulDouble(105.5, 105.5);
        Assertions.assertEquals(double548, 11130.25);
        boolean boolean142 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean142, true);
    }
    @Test
    public void test1044() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        int int250 = calculadora353.mulInt(0, 1000);
        Assertions.assertEquals(int250, 0);
        double double190 = calculadora353.somaDouble(1.99, 10.953);
        Assertions.assertEquals(double190, 12.943);
    }
    @Test
    public void test1045() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        double double161 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double161, 0.0);
    }
    @Test
    public void test1046() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean214 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean214, false);
        boolean boolean418 = calculadora353.menor(0, 250);
        Assertions.assertEquals(boolean418, true);
        double double145 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double145, 103.51);
        java.lang.String string417 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string417, "top");
    }
    @Test
    public void test1047() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        boolean boolean995 = calculadora353.menor(0, 250);
        Assertions.assertEquals(boolean995, true);
    }
    @Test
    public void test1048() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        int int730 = calculadora353.mulInt(1000, 250);
        Assertions.assertEquals(int730, 250000);
        boolean boolean533 = calculadora353.menor(-250, 500);
        Assertions.assertEquals(boolean533, true);
    }
    @Test
    public void test1051() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        int int711 = calculadora353.divInt(500, 1000);
        Assertions.assertEquals(int711, 0);
        boolean boolean39 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean39, true);
    }
    @Test
    public void test1052() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        boolean boolean297 = calculadora353.maior(-100, 250);
        Assertions.assertEquals(boolean297, false);
    }
    @Test
    public void test1053() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        double double583 = calculadora353.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double583, 0.6334372085472643);
    }
    @Test
    public void test1054() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        int int490 = calculadora353.mulInt(-1000, 500);
        Assertions.assertEquals(int490, -500000);
    }
    @Test
    public void test1055() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean727 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean727, true);
        int int608 = calculadora353.subInt(-250, -100);
        Assertions.assertEquals(int608, -150);
    }
    @Test
    public void test1056() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean357 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean357, false);
        int int461 = calculadora353.mulInt(500, 250);
        Assertions.assertEquals(int461, 125000);
        java.lang.String string253 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string253, "hello");
        java.lang.String string741 = calculadora353.toUpCase(string916);
        Assertions.assertEquals(string741, STRING916);
    }
    @Test
    public void test1057() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int28 = calculadora353.mulInt(0, 1000);
        Assertions.assertEquals(int28, 0);
        int int650 = calculadora353.somaInt(500, -250);
        Assertions.assertEquals(int650, 250);
    }
    @Test
    public void test1058() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double351 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double351, Infinity);
        java.lang.String string770 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string770, "lorem");
        double double150 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double150, -0.0);
    }
    @Test
    public void test1059() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        java.lang.String string695 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string695, "nice");
        int int593 = calculadora353.somaInt(500, -100);
        Assertions.assertEquals(int593, 400);
    }
    @Test
    public void test1060() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean528 = calculadora353.menor(0, -500);
        Assertions.assertEquals(boolean528, false);
        boolean boolean8 = calculadora353.or(false, boolean528);
        Assertions.assertEquals(boolean8, false);
        boolean boolean919 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean919, false);
    }
    @Test
    public void test1061() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
        double double331 = calculadora353.mulDouble(0.0, 3.14159);
        Assertions.assertEquals(double331, 0.0);
    }
    @Test
    public void test1062() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        int int44 = calculadora353.subInt(0, 0);
        Assertions.assertEquals(int44, 0);
    }
    @Test
    public void test1063() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double115 = calculadora353.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double115, 163.525);
        boolean boolean75 = calculadora353.menor(500, 0);
        Assertions.assertEquals(boolean75, false);
        double double531 = calculadora353.somaDouble(-10.953, 3.14159);
        Assertions.assertEquals(double531, -7.8114099999999995);
    }
    @Test
    public void test1064() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        java.lang.String string561 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string561, "top");
        boolean boolean993 = calculadora353.maior(0, 500);
        Assertions.assertEquals(boolean993, false);
        int int152 = calculadora353.subInt(-100, 100);
        Assertions.assertEquals(int152, -200);
    }
    @Test
    public void test1067() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        double double211 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double211, -34.409835269999995);
    }
    @Test
    public void test1069() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        int int45 = calculadora353.divInt(500, -1000);
        Assertions.assertEquals(int45, 0);
        int int550 = calculadora353.somaInt(0, 100);
        Assertions.assertEquals(int550, 100);
        boolean boolean936 = calculadora353.maior(100, -1000);
        Assertions.assertEquals(boolean936, true);
    }
    @Test
    public void test1070() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        double double471 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double471, 19.91454545454545);
        double double290 = calculadora353.subDouble(1.99, 0.55);
        Assertions.assertEquals(double290, 1.44);
    }
    @Test
    public void test1071() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string599 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string599, "LOREM");
    }
    @Test
    public void test1072() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        boolean boolean50 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean50, true);
        boolean boolean283 = calculadora353.maior(-100, -100);
        Assertions.assertEquals(boolean283, false);
    }
    @Test
    public void test1073() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double325 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double325, -3.54);
        int int281 = calculadora353.divInt(-100, -100);
        Assertions.assertEquals(int281, 1);
    }
    @Test
    public void test1074() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        boolean boolean574 = calculadora353.or(boolean319, false);
        Assertions.assertEquals(boolean574, false);
        int int919 = calculadora353.somaInt(500, -250);
        Assertions.assertEquals(int919, 250);
        int int188 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int188, -100000);
        int int770 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int770, 250);
    }
    @Test
    public void test1076() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        int int772 = calculadora353.divInt(100, -250);
        Assertions.assertEquals(int772, 0);
        boolean boolean157 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean157, false);
    }
    @Test
    public void test1078() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        int int696 = calculadora353.divInt(-250, -1000);
        Assertions.assertEquals(int696, 0);
        java.lang.String string550 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string550, "VALEU");
    }
    @Test
    public void test1079() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean708 = calculadora353.menor(1000, 250);
        Assertions.assertEquals(boolean708, false);
        boolean boolean415 = calculadora353.and(boolean708, true);
        Assertions.assertEquals(boolean415, false);
    }
    @Test
    public void test1081() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int325 = calculadora353.mulInt(-500, 0);
        Assertions.assertEquals(int325, 0);
    }
    @Test
    public void test1082() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        double double882 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double882, 3.54);
        int int678 = calculadora353.somaInt(0, -1000);
        Assertions.assertEquals(int678, -1000);
        boolean boolean256 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean256, true);
    }
    @Test
    public void test1083() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        int int730 = calculadora353.mulInt(1000, 250);
        Assertions.assertEquals(int730, 250000);
        boolean boolean40 = calculadora353.menor(250, -1000);
        Assertions.assertEquals(boolean40, false);
    }
    @Test
    public void test1084() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double442 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double442, 6.024150000000001);
        int int926 = calculadora353.somaInt(-100, -250);
        Assertions.assertEquals(int926, -350);
        double double623 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double623, 58.025000000000006);
    }
    @Test
    public void test1085() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        int int311 = calculadora353.somaInt(500, 0);
        Assertions.assertEquals(int311, 500);
    }
    @Test
    public void test1086() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double363 = calculadora353.mulDouble(1.99, -10.953);
        Assertions.assertEquals(double363, -21.79647);
        java.lang.String string214 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string214, "ipsum");
    }
    @Test
    public void test1087() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        java.lang.String string354 = calculadora353.toUpCase(string944);
        Assertions.assertEquals(string354, STRING944);
        boolean boolean74 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean74, false);
    }
    @Test
    public void test1089() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double527 = calculadora353.somaDouble(105.5, 10.953);
        Assertions.assertEquals(double527, 116.453);
        double double418 = calculadora353.subDouble(105.5, 0.55);
        Assertions.assertEquals(double418, 104.95);
    }
    @Test
    public void test1090() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean843 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean843, false);
        java.lang.String string577 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string577, "hi");
    }
    @Test
    public void test1092() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        java.lang.String string43 = calculadora353.toLowCase(string603);
        Assertions.assertEquals(string43, string603);
        boolean boolean448 = calculadora353.menor(250, -250);
        Assertions.assertEquals(boolean448, false);
    }
    @Test
    public void test1093() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        boolean boolean625 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean625, false);
    }
    @Test
    public void test1095() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        java.lang.String string644 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string644, "VALEU");
        java.lang.String string283 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string283, "top");
    }
    @Test
    public void test1096() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        double double341 = calculadora353.mulDouble(3.14159, 105.5);
        Assertions.assertEquals(double341, 331.437745);
        java.lang.String string55 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string55, "ipsum");
        double double926 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double926, 0.0);
    }
    @Test
    public void test1097() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        java.lang.String string631 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string631, "top");
        boolean boolean140 = calculadora353.menor(-500, -250);
        Assertions.assertEquals(boolean140, true);
        double double337 = calculadora353.subDouble(10.953, 0.55);
        Assertions.assertEquals(double337, 10.402999999999999);
    }
    @Test
    public void test1098() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        boolean boolean601 = calculadora353.or(true, boolean58);
        Assertions.assertEquals(boolean601, true);
    }
    @Test
    public void test1099() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int789 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int789, 0);
        boolean boolean753 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean753, false);
        int int539 = calculadora353.divInt(-100, -500);
        Assertions.assertEquals(int539, 0);
    }
    @Test
    public void test1101() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        java.lang.String string561 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string561, "top");
        boolean boolean808 = calculadora353.maior(500, -250);
        Assertions.assertEquals(boolean808, true);
    }
    @Test
    public void test1102() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        java.lang.String string489 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string489, "LOREM");
        int int703 = calculadora353.divInt(0, -1000);
        Assertions.assertEquals(int703, 0);
        boolean boolean853 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean853, true);
        boolean boolean580 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean580, false);
    }
    @Test
    public void test1103() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean735 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean735, false);
        java.lang.String string844 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string844, "hi");
        boolean boolean583 = calculadora353.menor(500, 100);
        Assertions.assertEquals(boolean583, false);
        int int429 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int429, 0);
    }
    @Test
    public void test1104() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean242 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean242, true);
        int int984 = calculadora353.somaInt(1000, 1000);
        Assertions.assertEquals(int984, 2000);
        double double864 = calculadora353.mulDouble(-10.953, -105.5);
        Assertions.assertEquals(double864, 1155.5415);
    }
    @Test
    public void test1105() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        int int743 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int743, 1250);
        int int311 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int311, -25000);
        java.lang.String string224 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string224, "top");
        boolean boolean592 = calculadora353.and(boolean811, false);
        Assertions.assertEquals(boolean592, false);
    }
    @Test
    public void test1106() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int43 = calculadora353.mulInt(-1000, -250);
        Assertions.assertEquals(int43, 250000);
    }
    @Test
    public void test1107() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int325 = calculadora353.mulInt(-500, 0);
        Assertions.assertEquals(int325, 0);
        double double426 = calculadora353.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double426, -1.0);
    }
    @Test
    public void test1108() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
        java.lang.String string30 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string30, "go");
        int int338 = calculadora353.somaInt(0, 0);
        Assertions.assertEquals(int338, 0);
    }
    @Test
    public void test1109() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        int int555 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int555, -1250);
        int int932 = calculadora353.divInt(500, -500);
        Assertions.assertEquals(int932, -1);
        java.lang.String string743 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string743, "NICE");
        java.lang.String string508 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string508, "valeu");
        boolean boolean256 = calculadora353.or(boolean597, true);
        Assertions.assertEquals(boolean256, true);
    }
    @Test
    public void test1111() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        double double640 = calculadora353.mulDouble(-10.953, 3.14159);
        Assertions.assertEquals(double640, -34.409835269999995);
    }
    @Test
    public void test1112() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        java.lang.String string43 = calculadora353.toLowCase(string603);
        Assertions.assertEquals(string43, string603);
        int int306 = calculadora353.somaInt(1000, 500);
        Assertions.assertEquals(int306, 1500);
        java.lang.String string143 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string143, "ipsum");
    }
    @Test
    public void test1113() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean900 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean900, false);
        boolean boolean387 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean387, true);
    }
    @Test
    public void test1114() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        int int209 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int209, 25000);
        boolean boolean284 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean284, true);
    }
    @Test
    public void test1115() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        java.lang.String string635 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string635, "TOP");
        java.lang.String string713 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string713, "TOP");
        int int744 = calculadora353.subInt(250, 500);
        Assertions.assertEquals(int744, -250);
    }
    @Test
    public void test1117() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean617 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean617, false);
        double double621 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double621, -8.963);
        int int990 = calculadora353.subInt(-100, -250);
        Assertions.assertEquals(int990, 150);
        boolean boolean301 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean301, true);
    }
    @Test
    public void test1119() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        java.lang.String string728 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string728, "HELLO");
        double double272 = calculadora353.somaDouble(-10.953, -10.953);
        Assertions.assertEquals(double272, -21.906);
        double double385 = calculadora353.mulDouble(105.5, 1.99);
        Assertions.assertEquals(double385, 209.945);
    }
    @Test
    public void test1120() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int412 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int412, 2000);
        int int981 = calculadora353.somaInt(-1000, 500);
        Assertions.assertEquals(int981, -500);
    }
    @Test
    public void test1121() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        java.lang.String string205 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string205, "LOREM");
    }
    @Test
    public void test1122() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        double double603 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double603, -0.18168538300009132);
        int int630 = calculadora353.somaInt(-250, -250);
        Assertions.assertEquals(int630, -500);
    }
    @Test
    public void test1123() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        int int538 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int538, 600);
        boolean boolean634 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean634, true);
    }
    @Test
    public void test1124() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        int int805 = calculadora353.mulInt(100, 100);
        Assertions.assertEquals(int805, 10000);
        double double917 = calculadora353.subDouble(105.5, -105.5);
        Assertions.assertEquals(double917, 211.0);
    }
    @Test
    public void test1125() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string879 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string879, "lorem");
    }
    @Test
    public void test1126() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        int int354 = calculadora353.divInt(-100, 1000);
        Assertions.assertEquals(int354, 0);
        java.lang.String string507 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string507, "valeu");
        double double971 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double971, 103.95);
    }
    @Test
    public void test1127() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int425 = calculadora353.divInt(1000, 100);
        Assertions.assertEquals(int425, 10);
        double double506 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double506, 0.18168538300009132);
    }
    @Test
    public void test1128() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        double double403 = calculadora353.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double403, 0.43999999999999995);
        boolean boolean4 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean4, true);
    }
    @Test
    public void test1130() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        double double4 = calculadora353.subDouble(10.953, 1.99);
        Assertions.assertEquals(double4, 8.963);
    }
    @Test
    public void test1131() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        double double288 = calculadora353.subDouble(105.5, 0.55);
        Assertions.assertEquals(double288, 104.95);
        boolean boolean797 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean797, true);
    }
    @Test
    public void test1132() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        boolean boolean380 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean380, false);
        boolean boolean135 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean135, false);
        boolean boolean714 = calculadora353.menor(-1000, 100);
        Assertions.assertEquals(boolean714, true);
    }
    @Test
    public void test1133() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean854 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean854, false);
        boolean boolean528 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean528, true);
        boolean boolean655 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean655, false);
    }
    @Test
    public void test1135() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double99 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double99, 0.029778104265402842);
        int int665 = calculadora353.somaInt(0, -100);
        Assertions.assertEquals(int665, -100);
    }
    @Test
    public void test1136() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        boolean boolean470 = calculadora353.maior(-1000, -1000);
        Assertions.assertEquals(boolean470, false);
        double double92 = calculadora353.subDouble(0.55, -105.5);
        Assertions.assertEquals(double92, 106.05);
        boolean boolean86 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean86, true);
    }
    @Test
    public void test1138() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean154 = calculadora353.menor(-250, 250);
        Assertions.assertEquals(boolean154, true);
        int int450 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int450, 50000);
        int int17 = calculadora353.subInt(-1000, 250);
        Assertions.assertEquals(int17, -1250);
    }
    @Test
    public void test1139() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean410 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean410, true);
        boolean boolean381 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean381, true);
    }
    @Test
    public void test1140() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        java.lang.String string561 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string561, "top");
        boolean boolean92 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean92, false);
    }
    @Test
    public void test1142() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        double double923 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double923, -107.05);
        java.lang.String string531 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string531, "hello");
    }
    @Test
    public void test1143() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double363 = calculadora353.mulDouble(1.99, -10.953);
        Assertions.assertEquals(double363, -21.79647);
        java.lang.String string214 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string214, "ipsum");
        double double582 = calculadora353.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double582, 0.0);
    }
    @Test
    public void test1144() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        int int512 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int512, -150);
    }
    @Test
    public void test1145() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double363 = calculadora353.mulDouble(1.99, -10.953);
        Assertions.assertEquals(double363, -21.79647);
        java.lang.String string214 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string214, "ipsum");
        double double582 = calculadora353.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double582, 0.0);
        boolean boolean603 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean603, false);
    }
    @Test
    public void test1146() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
        int int320 = calculadora353.subInt(100, 1000);
        Assertions.assertEquals(int320, -900);
        boolean boolean141 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean141, true);
        double double797 = calculadora353.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double797, 1155.5415);
        boolean boolean516 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean516, true);
        int int910 = calculadora353.mulInt(-100, 500);
        Assertions.assertEquals(int910, -50000);
    }
    @Test
    public void test1147() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean827 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean827, false);
        boolean boolean522 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean522, false);
        int int108 = calculadora353.subInt(-100, 250);
        Assertions.assertEquals(int108, -350);
        java.lang.String string275 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string275, "hello");
    }
    @Test
    public void test1148() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        int int538 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int538, 600);
        java.lang.String string517 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string517, "NICE");
        int int945 = calculadora353.subInt(500, -500);
        Assertions.assertEquals(int945, 1000);
    }
    @Test
    public void test1149() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int43 = calculadora353.mulInt(-1000, -250);
        Assertions.assertEquals(int43, 250000);
        boolean boolean145 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean145, true);
    }
    @Test
    public void test1150() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string169 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string169, "HI");
        int int251 = calculadora353.divInt(500, -100);
        Assertions.assertEquals(int251, -5);
        java.lang.String string10 = calculadora353.toLowCase(string169);
        Assertions.assertEquals(string10, string169);
        boolean boolean394 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean394, false);
        double double14 = calculadora353.somaDouble(1.99, 105.5);
        Assertions.assertEquals(double14, 107.49);
    }
    @Test
    public void test1151() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        double double798 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double798, 94.547);
        int int707 = calculadora353.subInt(-1000, -500);
        Assertions.assertEquals(int707, -500);
    }
    @Test
    public void test1152() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double877 = calculadora353.divDouble(0.0, 0.0);
        Assertions.assertEquals(double877, NaN);
        boolean boolean580 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean580, false);
    }
    @Test
    public void test1154() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double658 = calculadora353.divDouble(105.5, 0.55);
        Assertions.assertEquals(double658, 191.8181818181818);
        boolean boolean880 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean880, true);
    }
    @Test
    public void test1156() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        boolean boolean380 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean380, false);
        boolean boolean135 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean135, false);
        boolean boolean714 = calculadora353.menor(-1000, 100);
        Assertions.assertEquals(boolean714, true);
        java.lang.String string297 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string297, "IPSUM");
    }
    @Test
    public void test1158() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        java.lang.String string215 = calculadora353.toUpCase(string263);
        Assertions.assertEquals(string215, STRING263);
    }
    @Test
    public void test1160() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
        double double96 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double96, 106.05);
    }
    @Test
    public void test1162() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double433 = calculadora353.mulDouble(1.99, -1.55);
        Assertions.assertEquals(double433, -3.0845000000000002);
    }
    @Test
    public void test1163() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int642 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int642, -100000);
    }
    @Test
    public void test1164() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        java.lang.String string738 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string738, "NICE");
        boolean boolean0 = calculadora353.menor(-1000, -500);
        Assertions.assertEquals(boolean0, true);
    }
    @Test
    public void test1166() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        int int65 = calculadora353.somaInt(100, 500);
        Assertions.assertEquals(int65, 600);
        int int808 = calculadora353.mulInt(-250, -250);
        Assertions.assertEquals(int808, 62500);
    }
    @Test
    public void test1167() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        boolean boolean289 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean289, false);
    }
    @Test
    public void test1168() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        boolean boolean789 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean789, true);
        int int380 = calculadora353.divInt(-100, -1000);
        Assertions.assertEquals(int380, 0);
    }
    @Test
    public void test1170() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        java.lang.String string728 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string728, "HELLO");
        boolean boolean853 = calculadora353.menor(0, 1000);
        Assertions.assertEquals(boolean853, true);
        boolean boolean636 = calculadora353.maior(500, 500);
        Assertions.assertEquals(boolean636, false);
        double double636 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double636, 19.91454545454545);
    }
    @Test
    public void test1171() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
        int int116 = calculadora353.mulInt(-100, 0);
        Assertions.assertEquals(int116, 0);
    }
    @Test
    public void test1172() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        int int329 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int329, 0);
        double double263 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double263, 19.91454545454545);
    }
    @Test
    public void test1174() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        java.lang.String string488 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string488, "HELLO");
    }
    @Test
    public void test1175() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        boolean boolean146 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean146, false);
        java.lang.String string882 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string882, "GO");
        java.lang.String string506 = calculadora353.toLowCase(string882);
        Assertions.assertEquals(string506, string882);
    }
    @Test
    public void test1176() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean140 = calculadora353.menor(-250, 500);
        Assertions.assertEquals(boolean140, true);
    }
    @Test
    public void test1177() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        double double119 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double119, 2.59159);
    }
    @Test
    public void test1178() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int296 = calculadora353.mulInt(0, 500);
        Assertions.assertEquals(int296, 0);
        boolean boolean296 = calculadora353.maior(0, 250);
        Assertions.assertEquals(boolean296, false);
    }
    @Test
    public void test1179() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        int int805 = calculadora353.mulInt(100, 100);
        Assertions.assertEquals(int805, 10000);
        java.lang.String string216 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string216, "VALEU");
    }
    @Test
    public void test1180() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        int int209 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int209, 25000);
        boolean boolean284 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean284, true);
        double double486 = calculadora353.somaDouble(-105.5, 10.953);
        Assertions.assertEquals(double486, -94.547);
    }
    @Test
    public void test1181() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        int int352 = calculadora353.divInt(1000, -1000);
        Assertions.assertEquals(int352, -1);
    }
    @Test
    public void test1182() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        boolean boolean620 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean620, false);
        boolean boolean544 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean544, true);
        double double757 = calculadora353.mulDouble(105.5, 105.5);
        Assertions.assertEquals(double757, 11130.25);
    }
    @Test
    public void test1183() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean222 = calculadora353.menor(-250, 0);
        Assertions.assertEquals(boolean222, true);
        boolean boolean969 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean969, true);
        boolean boolean396 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean396, false);
    }
    @Test
    public void test1184() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        int int154 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int154, -100000);
    }
    @Test
    public void test1185() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        double double36 = calculadora353.somaDouble(105.5, 3.14159);
        Assertions.assertEquals(double36, 108.64159);
    }
    @Test
    public void test1186() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double954 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double954, 6.28318);
        double double891 = calculadora353.divDouble(0.0, -105.5);
        Assertions.assertEquals(double891, -0.0);
        double double620 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double620, -10.953);
        boolean boolean946 = calculadora353.and(false, boolean721);
        Assertions.assertEquals(boolean946, false);
    }
    @Test
    public void test1187() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        double double110 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double110, 0.0);
        boolean boolean82 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean82, false);
        int int465 = calculadora353.subInt(0, -500);
        Assertions.assertEquals(int465, 500);
    }
    @Test
    public void test1188() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
        java.lang.String string149 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string149, "go");
        int int366 = calculadora353.subInt(-250, 1000);
        Assertions.assertEquals(int366, -1250);
    }
    @Test
    public void test1189() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        boolean boolean24 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean24, true);
        double double825 = calculadora353.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double825, 108.64159);
    }
    @Test
    public void test1190() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        double double529 = calculadora353.divDouble(10.953, 0.0);
        Assertions.assertEquals(double529, Infinity);
        boolean boolean524 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean524, true);
    }
    @Test
    public void test1191() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int789 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int789, 0);
        boolean boolean781 = calculadora353.menor(-250, 100);
        Assertions.assertEquals(boolean781, true);
    }
    @Test
    public void test1192() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
        int int451 = calculadora353.subInt(-500, 0);
        Assertions.assertEquals(int451, -500);
        double double528 = calculadora353.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double528, -0.0);
        boolean boolean919 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean919, false);
    }
    @Test
    public void test1193() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        boolean boolean237 = calculadora353.and(false, boolean815);
        Assertions.assertEquals(boolean237, false);
        double double853 = calculadora353.somaDouble(1.99, 10.953);
        Assertions.assertEquals(double853, 12.943);
    }
    @Test
    public void test1195() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        boolean boolean196 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean196, false);
    }
    @Test
    public void test1196() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int642 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int642, -100000);
        int int869 = calculadora353.somaInt(250, -1000);
        Assertions.assertEquals(int869, -750);
    }
    @Test
    public void test1197() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        boolean boolean558 = calculadora353.maior(1000, 250);
        Assertions.assertEquals(boolean558, true);
        boolean boolean133 = calculadora353.maior(500, 500);
        Assertions.assertEquals(boolean133, false);
    }
    @Test
    public void test1198() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string69 = calculadora353.toUpCase(string603);
        Assertions.assertEquals(string69, STRING603);
        double double691 = calculadora353.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double691, 0.6334372085472643);
    }
    @Test
    public void test1199() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
        double double331 = calculadora353.mulDouble(0.0, 3.14159);
        Assertions.assertEquals(double331, 0.0);
        boolean boolean815 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean815, false);
    }
    @Test
    public void test1200() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        java.lang.String string954 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string954, "nice");
        double double30 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double30, -1.44);
        boolean boolean133 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean133, false);
        double double583 = calculadora353.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double583, 1155.5415);
    }
    @Test
    public void test1201() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        int int940 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int940, 50000);
        double double579 = calculadora353.subDouble(1.99, -105.5);
        Assertions.assertEquals(double579, 107.49);
    }
    @Test
    public void test1202() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean288 = calculadora353.maior(500, -1000);
        Assertions.assertEquals(boolean288, true);
        java.lang.String string391 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string391, "IPSUM");
    }
    @Test
    public void test1203() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean999 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean999, true);
        double double429 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double429, -3.54);
    }
    @Test
    public void test1204() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string169 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string169, "HI");
        boolean boolean762 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean762, false);
        boolean boolean196 = calculadora353.menor(-250, 100);
        Assertions.assertEquals(boolean196, true);
    }
    @Test
    public void test1205() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
        double double331 = calculadora353.mulDouble(0.0, 3.14159);
        Assertions.assertEquals(double331, 0.0);
        boolean boolean815 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean815, false);
        boolean boolean419 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean419, false);
    }
    @Test
    public void test1206() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double961 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double961, -8.963);
        boolean boolean118 = calculadora353.or(true, boolean747);
        Assertions.assertEquals(boolean118, true);
    }
    @Test
    public void test1207() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean850 = calculadora353.menor(250, 100);
        Assertions.assertEquals(boolean850, false);
    }
    @Test
    public void test1208() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        boolean boolean766 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean766, true);
    }
    @Test
    public void test1209() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int412 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int412, 2000);
        int int555 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int555, -2);
        int int148 = calculadora353.subInt(-100, -500);
        Assertions.assertEquals(int148, 400);
    }
    @Test
    public void test1211() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        java.lang.String string310 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string310, "IPSUM");
        double double899 = calculadora353.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double899, -105.5);
        boolean boolean915 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean915, false);
        int int357 = calculadora353.subInt(-100, 0);
        Assertions.assertEquals(int357, -100);
    }
    @Test
    public void test1212() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean214 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean214, false);
        boolean boolean418 = calculadora353.menor(0, 250);
        Assertions.assertEquals(boolean418, true);
        double double145 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double145, 103.51);
        boolean boolean33 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean33, false);
    }
    @Test
    public void test1214() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double474 = calculadora353.subDouble(1.99, 0.0);
        Assertions.assertEquals(double474, 1.99);
    }
    @Test
    public void test1215() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        double double298 = calculadora353.divDouble(-1.55, 3.14159);
        Assertions.assertEquals(double298, -0.4933807403257586);
        double double307 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double307, -0.0502145530904775);
    }
    @Test
    public void test1216() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        int int212 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int212, -100000);
        boolean boolean995 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean995, true);
    }
    @Test
    public void test1218() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
        double double96 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double96, 106.05);
        java.lang.String string135 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string135, "IPSUM");
    }
    @Test
    public void test1219() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        java.lang.String string49 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string49, "lorem");
    }
    @Test
    public void test1220() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean700 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean700, false);
        int int58 = calculadora353.divInt(0, 500);
        Assertions.assertEquals(int58, 0);
        boolean boolean889 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean889, false);
    }
    @Test
    public void test1222() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean242 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean242, true);
        int int984 = calculadora353.somaInt(1000, 1000);
        Assertions.assertEquals(int984, 2000);
        double double864 = calculadora353.mulDouble(-10.953, -105.5);
        Assertions.assertEquals(double864, 1155.5415);
        boolean boolean905 = calculadora353.or(boolean906, false);
        Assertions.assertEquals(boolean905, false);
    }
    @Test
    public void test1224() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        int int498 = calculadora353.somaInt(1000, 100);
        Assertions.assertEquals(int498, 1100);
    }
    @Test
    public void test1225() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int296 = calculadora353.mulInt(0, 500);
        Assertions.assertEquals(int296, 0);
        double double179 = calculadora353.somaDouble(105.5, 3.14159);
        Assertions.assertEquals(double179, 108.64159);
    }
    @Test
    public void test1226() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        double double314 = calculadora353.somaDouble(-10.953, 105.5);
        Assertions.assertEquals(double314, 94.547);
        double double201 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double201, 6.024150000000001);
        boolean boolean901 = calculadora353.or(boolean562, false);
        Assertions.assertEquals(boolean901, false);
    }
    @Test
    public void test1227() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        int int461 = calculadora353.mulInt(500, 1000);
        Assertions.assertEquals(int461, 500000);
        double double150 = calculadora353.subDouble(0.0, 1.99);
        Assertions.assertEquals(double150, -1.99);
    }
    @Test
    public void test1229() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        boolean boolean574 = calculadora353.or(boolean319, false);
        Assertions.assertEquals(boolean574, false);
        boolean boolean387 = calculadora353.menor(250, -100);
        Assertions.assertEquals(boolean387, false);
    }
    @Test
    public void test1230() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        double double163 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double163, -3.54);
        java.lang.String string385 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string385, "valeu");
        int int199 = calculadora353.divInt(1000, 250);
        Assertions.assertEquals(int199, 4);
        int int913 = calculadora353.subInt(-1000, 1000);
        Assertions.assertEquals(int913, -2000);
    }
    @Test
    public void test1231() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        int int953 = calculadora353.divInt(250, 100);
        Assertions.assertEquals(int953, 2);
        java.lang.String string906 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string906, "HELLO");
        boolean boolean842 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean842, true);
    }
    @Test
    public void test1233() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int856 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int856, -2);
        boolean boolean27 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean27, true);
    }
    @Test
    public void test1234() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean970 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean970, true);
        boolean boolean731 = calculadora353.maior(1000, 1000);
        Assertions.assertEquals(boolean731, false);
        int int245 = calculadora353.divInt(250, -1000);
        Assertions.assertEquals(int245, 0);
        double double364 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double364, -10.953);
    }
    @Test
    public void test1235() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        int int984 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int984, -750);
        java.lang.String string369 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string369, "hi");
    }
    @Test
    public void test1236() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean242 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean242, true);
        double double851 = calculadora353.somaDouble(10.953, 3.14159);
        Assertions.assertEquals(double851, 14.09459);
    }
    @Test
    public void test1238() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double903 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double903, -10.953);
        double double26 = calculadora353.somaDouble(-10.953, -10.953);
        Assertions.assertEquals(double26, -21.906);
    }
    @Test
    public void test1240() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double363 = calculadora353.mulDouble(1.99, -10.953);
        Assertions.assertEquals(double363, -21.79647);
        java.lang.String string214 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string214, "ipsum");
        double double466 = calculadora353.subDouble(-1.55, 3.14159);
        Assertions.assertEquals(double466, -4.69159);
    }
    @Test
    public void test1241() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
        boolean boolean911 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean911, false);
        double double782 = calculadora353.subDouble(1.99, 1.99);
        Assertions.assertEquals(double782, 0.0);
        int int268 = calculadora353.divInt(0, -500);
        Assertions.assertEquals(int268, 0);
    }
    @Test
    public void test1243() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        boolean boolean694 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean694, false);
        double double798 = calculadora353.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double798, -1.55);
    }
    @Test
    public void test1244() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int278 = calculadora353.subInt(500, 500);
        Assertions.assertEquals(int278, 0);
        boolean boolean86 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean86, false);
        double double429 = calculadora353.somaDouble(1.99, 10.953);
        Assertions.assertEquals(double429, 12.943);
    }
    @Test
    public void test1245() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        int int830 = calculadora353.subInt(250, 250);
        Assertions.assertEquals(int830, 0);
    }
    @Test
    public void test1246() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
        double double686 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double686, -104.95);
        boolean boolean428 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean428, false);
    }
    @Test
    public void test1247() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        boolean boolean796 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean796, false);
    }
    @Test
    public void test1248() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        double double337 = calculadora353.somaDouble(10.953, -105.5);
        Assertions.assertEquals(double337, -94.547);
    }
    @Test
    public void test1249() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string446 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string446, "VALEU");
        java.lang.String string991 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string991, "nice");
        boolean boolean447 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean447, true);
    }
    @Test
    public void test1250() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        boolean boolean620 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean620, false);
        boolean boolean544 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean544, true);
        int int903 = calculadora353.somaInt(1000, 0);
        Assertions.assertEquals(int903, 1000);
    }
    @Test
    public void test1251() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        int int510 = calculadora353.somaInt(-500, -100);
        Assertions.assertEquals(int510, -600);
    }
    @Test
    public void test1252() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean439 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean439, true);
        boolean boolean144 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean144, true);
    }
    @Test
    public void test1253() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        int int711 = calculadora353.divInt(500, 1000);
        Assertions.assertEquals(int711, 0);
        int int690 = calculadora353.mulInt(1000, 250);
        Assertions.assertEquals(int690, 250000);
        double double416 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double416, -0.10381990521327014);
    }
    @Test
    public void test1254() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        int int977 = calculadora353.subInt(100, 500);
        Assertions.assertEquals(int977, -400);
        double double423 = calculadora353.somaDouble(105.5, 0.0);
        Assertions.assertEquals(double423, 105.5);
        boolean boolean92 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean92, true);
    }
    @Test
    public void test1255() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean389 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean389, false);
    }
    @Test
    public void test1256() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double788 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double788, 105.5);
        double double785 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double785, 94.547);
        int int191 = calculadora353.somaInt(250, 250);
        Assertions.assertEquals(int191, 500);
        int int665 = calculadora353.mulInt(100, -100);
        Assertions.assertEquals(int665, -10000);
    }
    @Test
    public void test1257() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        int int730 = calculadora353.mulInt(1000, 250);
        Assertions.assertEquals(int730, 250000);
        double double423 = calculadora353.subDouble(10.953, 3.14159);
        Assertions.assertEquals(double423, 7.8114099999999995);
    }
    @Test
    public void test1258() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        boolean boolean625 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean625, false);
        int int511 = calculadora353.mulInt(-100, -100);
        Assertions.assertEquals(int511, 10000);
    }
    @Test
    public void test1259() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        int int141 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int141, -1500);
    }
    @Test
    public void test1260() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean735 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean735, false);
        java.lang.String string844 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string844, "hi");
        boolean boolean583 = calculadora353.menor(500, 100);
        Assertions.assertEquals(boolean583, false);
        int int855 = calculadora353.somaInt(100, -500);
        Assertions.assertEquals(int855, -400);
    }
    @Test
    public void test1261() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        int int498 = calculadora353.somaInt(1000, 100);
        Assertions.assertEquals(int498, 1100);
        java.lang.String string107 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string107, "hi");
    }
    @Test
    public void test1262() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        double double388 = calculadora353.mulDouble(0.0, 0.55);
        Assertions.assertEquals(double388, 0.0);
        double double797 = calculadora353.somaDouble(1.99, 1.99);
        Assertions.assertEquals(double797, 3.98);
    }
    @Test
    public void test1264() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double775 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double775, 6.28318);
        double double428 = calculadora353.mulDouble(-105.5, 3.14159);
        Assertions.assertEquals(double428, -331.437745);
        boolean boolean577 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean577, true);
    }
    @Test
    public void test1265() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
        double double686 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double686, -104.95);
        boolean boolean428 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean428, false);
        boolean boolean82 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean82, true);
    }
    @Test
    public void test1267() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        int int238 = calculadora353.subInt(-1000, 100);
        Assertions.assertEquals(int238, -1100);
        double double632 = calculadora353.mulDouble(0.0, -10.953);
        Assertions.assertEquals(double632, -0.0);
    }
    @Test
    public void test1268() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean587 = calculadora353.menor(-250, 250);
        Assertions.assertEquals(boolean587, true);
    }
    @Test
    public void test1269() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double673 = calculadora353.subDouble(-105.5, -10.953);
        Assertions.assertEquals(double673, -94.547);
        boolean boolean512 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean512, true);
        double double306 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double306, -58.025000000000006);
        java.lang.String string40 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string40, "NICE");
        boolean boolean990 = calculadora353.or(true, boolean888);
        Assertions.assertEquals(boolean990, true);
        int int914 = calculadora353.divInt(1000, 250);
        Assertions.assertEquals(int914, 4);
    }
    @Test
    public void test1270() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        boolean boolean620 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean620, false);
        boolean boolean544 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean544, true);
        boolean boolean929 = calculadora353.or(boolean747, true);
        Assertions.assertEquals(boolean929, true);
    }
    @Test
    public void test1271() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        java.lang.String string887 = calculadora353.toUpCase(string796);
        Assertions.assertEquals(string887, STRING796);
    }
    @Test
    public void test1272() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        double double64 = calculadora353.mulDouble(-1.55, 1.99);
        Assertions.assertEquals(double64, -3.0845000000000002);
        double double553 = calculadora353.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double553, -116.453);
    }
    @Test
    public void test1273() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        int int354 = calculadora353.divInt(-100, 1000);
        Assertions.assertEquals(int354, 0);
        java.lang.String string901 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string901, "NICE");
    }
    @Test
    public void test1274() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double673 = calculadora353.subDouble(-105.5, -10.953);
        Assertions.assertEquals(double673, -94.547);
        boolean boolean512 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean512, true);
        double double760 = calculadora353.subDouble(105.5, 105.5);
        Assertions.assertEquals(double760, 0.0);
        boolean boolean977 = calculadora353.or(false, boolean888);
        Assertions.assertEquals(boolean977, false);
        boolean boolean639 = calculadora353.maior(0, 100);
        Assertions.assertEquals(boolean639, false);
    }
    @Test
    public void test1276() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
        java.lang.String string512 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string512, "NICE");
        java.lang.String string802 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string802, "IPSUM");
    }
    @Test
    public void test1277() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        boolean boolean558 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean558, true);
    }
    @Test
    public void test1279() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double966 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double966, 0.0);
        boolean boolean977 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean977, false);
    }
    @Test
    public void test1280() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean735 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean735, false);
        java.lang.String string844 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string844, "hi");
        boolean boolean583 = calculadora353.menor(500, 100);
        Assertions.assertEquals(boolean583, false);
        boolean boolean606 = calculadora353.and(boolean597, boolean735);
        Assertions.assertEquals(boolean606, false);
    }
    @Test
    public void test1281() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string33 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string33, "NICE");
        int int844 = calculadora353.subInt(100, -1000);
        Assertions.assertEquals(int844, 1100);
    }
    @Test
    public void test1282() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int296 = calculadora353.mulInt(0, 500);
        Assertions.assertEquals(int296, 0);
        boolean boolean296 = calculadora353.maior(0, 250);
        Assertions.assertEquals(boolean296, false);
        double double598 = calculadora353.divDouble(105.5, -10.953);
        Assertions.assertEquals(double598, -9.632064274627956);
    }
    @Test
    public void test1284() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        boolean boolean380 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean380, false);
        boolean boolean135 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean135, false);
        boolean boolean714 = calculadora353.menor(-1000, 100);
        Assertions.assertEquals(boolean714, true);
        java.lang.String string297 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string297, "IPSUM");
        double double896 = calculadora353.mulDouble(105.5, 0.55);
        Assertions.assertEquals(double896, 58.025000000000006);
    }
    @Test
    public void test1285() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        int int212 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int212, -100000);
        int int183 = calculadora353.subInt(1000, 1000);
        Assertions.assertEquals(int183, 0);
        double double433 = calculadora353.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double433, 6.2517641);
    }
    @Test
    public void test1287() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        double double551 = calculadora353.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double551, 0.6334372085472643);
        boolean boolean522 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean522, false);
        double double542 = calculadora353.mulDouble(10.953, -1.55);
        Assertions.assertEquals(double542, -16.977149999999998);
        boolean boolean826 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean826, false);
    }
    @Test
    public void test1288() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        int int743 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int743, 1250);
        int int311 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int311, -25000);
        java.lang.String string224 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string224, "top");
        boolean boolean711 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean711, false);
    }
    @Test
    public void test1289() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        boolean boolean440 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean440, true);
        double double653 = calculadora353.mulDouble(-1.55, -10.953);
        Assertions.assertEquals(double653, 16.977149999999998);
        int int388 = calculadora353.subInt(500, 0);
        Assertions.assertEquals(int388, 500);
    }
    @Test
    public void test1291() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean712 = calculadora353.maior(-100, 1000);
        Assertions.assertEquals(boolean712, false);
    }
    @Test
    public void test1292() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        int int30 = calculadora353.somaInt(1000, -100);
        Assertions.assertEquals(int30, 900);
        java.lang.String string596 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string596, "ipsum");
        double double697 = calculadora353.divDouble(-1.55, 1.99);
        Assertions.assertEquals(double697, -0.7788944723618091);
    }
    @Test
    public void test1293() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean616 = calculadora353.maior(100, 0);
        Assertions.assertEquals(boolean616, true);
        boolean boolean378 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean378, true);
        boolean boolean52 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean52, true);
    }
    @Test
    public void test1294() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        java.lang.String string769 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string769, "ipsum");
        int int914 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int914, 0);
        boolean boolean892 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean892, false);
    }
    @Test
    public void test1295() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double581 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double581, -21.906);
        int int630 = calculadora353.divInt(-500, -100);
        Assertions.assertEquals(int630, 5);
    }
    @Test
    public void test1296() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int86 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int86, -2);
        java.lang.String string102 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string102, "HI");
        double double220 = calculadora353.mulDouble(1.99, 10.953);
        Assertions.assertEquals(double220, 21.79647);
    }
    @Test
    public void test1297() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        int int730 = calculadora353.mulInt(1000, 250);
        Assertions.assertEquals(int730, 250000);
        boolean boolean533 = calculadora353.menor(-250, 500);
        Assertions.assertEquals(boolean533, true);
        double double576 = calculadora353.mulDouble(105.5, -105.5);
        Assertions.assertEquals(double576, -11130.25);
    }
    @Test
    public void test1298() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean854 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean854, false);
        boolean boolean528 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean528, true);
        boolean boolean655 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean655, false);
        double double631 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double631, -3.54);
    }
    @Test
    public void test1300() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean154 = calculadora353.menor(-250, 250);
        Assertions.assertEquals(boolean154, true);
        int int450 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int450, 50000);
        int int326 = calculadora353.mulInt(0, -250);
        Assertions.assertEquals(int326, 0);
    }
    @Test
    public void test1301() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        boolean boolean305 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean305, true);
        int int515 = calculadora353.somaInt(-1000, 250);
        Assertions.assertEquals(int515, -750);
        int int222 = calculadora353.subInt(-100, -250);
        Assertions.assertEquals(int222, 150);
        boolean boolean269 = calculadora353.and(boolean305, false);
        Assertions.assertEquals(boolean269, false);
    }
    @Test
    public void test1302() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        boolean boolean251 = calculadora353.menor(-100, 100);
        Assertions.assertEquals(boolean251, true);
        int int436 = calculadora353.subInt(500, 1000);
        Assertions.assertEquals(int436, -500);
    }
    @Test
    public void test1303() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        int int139 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int139, 50000);
        int int157 = calculadora353.somaInt(-1000, 500);
        Assertions.assertEquals(int157, -500);
    }
    @Test
    public void test1304() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean828 = calculadora353.menor(250, 100);
        Assertions.assertEquals(boolean828, false);
        boolean boolean279 = calculadora353.and(boolean593, boolean593);
        Assertions.assertEquals(boolean279, false);
        int int519 = calculadora353.somaInt(0, -1000);
        Assertions.assertEquals(int519, -1000);
    }
    @Test
    public void test1305() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        double double798 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double798, 94.547);
        double double886 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double886, -4.8694645);
    }
    @Test
    public void test1307() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
        java.lang.String string2 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string2, "hello");
        java.lang.String string160 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string160, "GO");
    }
    @Test
    public void test1308() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
        int int451 = calculadora353.subInt(-500, 0);
        Assertions.assertEquals(int451, -500);
        int int684 = calculadora353.divInt(100, -500);
        Assertions.assertEquals(int684, 0);
    }
    @Test
    public void test1309() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean242 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean242, true);
        java.lang.String string161 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string161, "HI");
    }
    @Test
    public void test1310() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        boolean boolean558 = calculadora353.maior(1000, 250);
        Assertions.assertEquals(boolean558, true);
        boolean boolean133 = calculadora353.maior(500, 500);
        Assertions.assertEquals(boolean133, false);
        boolean boolean729 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean729, true);
    }
    @Test
    public void test1311() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        java.lang.String string466 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string466, "VALEU");
        boolean boolean700 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean700, false);
        double double832 = calculadora353.mulDouble(1.99, 1.99);
        Assertions.assertEquals(double832, 3.9601);
    }
    @Test
    public void test1312() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        boolean boolean574 = calculadora353.or(boolean319, false);
        Assertions.assertEquals(boolean574, false);
        int int919 = calculadora353.somaInt(500, -250);
        Assertions.assertEquals(int919, 250);
        int int188 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int188, -100000);
        java.lang.String string827 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string827, "top");
    }
    @Test
    public void test1313() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        double double858 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double858, Infinity);
        java.lang.String string53 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string53, "hello");
        double double882 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double882, -1.0);
        int int461 = calculadora353.subInt(500, -250);
        Assertions.assertEquals(int461, 750);
        java.lang.String string151 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string151, "HELLO");
    }
    @Test
    public void test1315() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        java.lang.String string707 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string707, "hi");
        double double425 = calculadora353.subDouble(-1.55, 10.953);
        Assertions.assertEquals(double425, -12.503);
        double double124 = calculadora353.subDouble(-105.5, 3.14159);
        Assertions.assertEquals(double124, -108.64159);
        java.lang.String string434 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string434, "NICE");
    }
    @Test
    public void test1318() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean597 = calculadora353.maior(100, -100);
        Assertions.assertEquals(boolean597, true);
        double double491 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double491, -209.945);
        double double845 = calculadora353.divDouble(3.14159, -105.5);
        Assertions.assertEquals(double845, -0.029778104265402842);
    }
    @Test
    public void test1319() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double890 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double890, 103.95);
        java.lang.String string683 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string683, "top");
    }
    @Test
    public void test1320() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        boolean boolean558 = calculadora353.maior(1000, 250);
        Assertions.assertEquals(boolean558, true);
        boolean boolean133 = calculadora353.maior(500, 500);
        Assertions.assertEquals(boolean133, false);
        boolean boolean729 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean729, true);
        double double95 = calculadora353.mulDouble(1.99, -10.953);
        Assertions.assertEquals(double95, -21.79647);
    }
    @Test
    public void test1322() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        int int30 = calculadora353.somaInt(1000, -100);
        Assertions.assertEquals(int30, 900);
        java.lang.String string596 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string596, "ipsum");
        double double697 = calculadora353.divDouble(-1.55, 1.99);
        Assertions.assertEquals(double697, -0.7788944723618091);
        int int506 = calculadora353.subInt(-500, -1000);
        Assertions.assertEquals(int506, 500);
    }
    @Test
    public void test1323() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
        double double96 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double96, 106.05);
        boolean boolean240 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean240, true);
    }
    @Test
    public void test1324() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int278 = calculadora353.subInt(500, 500);
        Assertions.assertEquals(int278, 0);
        boolean boolean86 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean86, false);
        double double429 = calculadora353.somaDouble(1.99, 10.953);
        Assertions.assertEquals(double429, 12.943);
        boolean boolean129 = calculadora353.maior(1000, 1000);
        Assertions.assertEquals(boolean129, false);
    }
    @Test
    public void test1326() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean452 = calculadora353.or(true, boolean597);
        Assertions.assertEquals(boolean452, true);
        double double15 = calculadora353.divDouble(1.99, -1.55);
        Assertions.assertEquals(double15, -1.2838709677419355);
        int int81 = calculadora353.somaInt(-1000, -100);
        Assertions.assertEquals(int81, -1100);
    }
    @Test
    public void test1327() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double966 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double966, 0.0);
        int int724 = calculadora353.subInt(-1000, -250);
        Assertions.assertEquals(int724, -750);
        boolean boolean660 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean660, false);
    }
    @Test
    public void test1328() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        java.lang.String string623 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string623, "VALEU");
        int int738 = calculadora353.somaInt(0, 100);
        Assertions.assertEquals(int738, 100);
    }
    @Test
    public void test1330() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean528 = calculadora353.menor(0, -500);
        Assertions.assertEquals(boolean528, false);
        java.lang.String string258 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string258, "ipsum");
    }
    @Test
    public void test1331() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string33 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string33, "NICE");
        int int844 = calculadora353.subInt(100, -1000);
        Assertions.assertEquals(int844, 1100);
        boolean boolean527 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean527, false);
    }
    @Test
    public void test1332() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        int int311 = calculadora353.somaInt(500, 0);
        Assertions.assertEquals(int311, 500);
        boolean boolean259 = calculadora353.and(boolean597, true);
        Assertions.assertEquals(boolean259, false);
    }
    @Test
    public void test1333() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        double double923 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double923, -107.05);
        java.lang.String string531 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string531, "hello");
        double double804 = calculadora353.divDouble(0.55, 0.55);
        Assertions.assertEquals(double804, 1.0);
    }
    @Test
    public void test1334() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean616 = calculadora353.maior(100, 0);
        Assertions.assertEquals(boolean616, true);
        int int140 = calculadora353.subInt(-1000, -1000);
        Assertions.assertEquals(int140, 0);
        java.lang.String string754 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string754, "hi");
    }
    @Test
    public void test1335() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int425 = calculadora353.divInt(1000, 100);
        Assertions.assertEquals(int425, 10);
        java.lang.String string583 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string583, "top");
        int int245 = calculadora353.divInt(-100, 100);
        Assertions.assertEquals(int245, -1);
        int int951 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int951, 1);
        java.lang.String string820 = calculadora353.toLowCase(string583);
        Assertions.assertEquals(string820, string583);
    }
    @Test
    public void test1336() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double954 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double954, 6.28318);
        double double891 = calculadora353.divDouble(0.0, -105.5);
        Assertions.assertEquals(double891, -0.0);
        double double620 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double620, -10.953);
        boolean boolean233 = calculadora353.maior(-500, -100);
        Assertions.assertEquals(boolean233, false);
        int int443 = calculadora353.divInt(250, 1000);
        Assertions.assertEquals(int443, 0);
    }
    @Test
    public void test1338() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean414 = calculadora353.menor(500, 100);
        Assertions.assertEquals(boolean414, false);
        double double10 = calculadora353.divDouble(10.953, 1.99);
        Assertions.assertEquals(double10, 5.504020100502513);
    }
    @Test
    public void test1339() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        double double227 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double227, 103.95);
    }
    @Test
    public void test1340() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        int int984 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int984, -750);
        java.lang.String string578 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string578, "NICE");
    }
    @Test
    public void test1341() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        double double123 = calculadora353.subDouble(1.99, 0.0);
        Assertions.assertEquals(double123, 1.99);
        double double0 = calculadora353.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double0, -103.95);
    }
    @Test
    public void test1342() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double890 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double890, 103.95);
        boolean boolean132 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean132, false);
        java.lang.String string400 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string400, "HI");
    }
    @Test
    public void test1343() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean452 = calculadora353.or(true, boolean597);
        Assertions.assertEquals(boolean452, true);
        double double15 = calculadora353.divDouble(1.99, -1.55);
        Assertions.assertEquals(double15, -1.2838709677419355);
        boolean boolean577 = calculadora353.and(boolean597, true);
        Assertions.assertEquals(boolean577, false);
    }
    @Test
    public void test1344() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        java.lang.String string136 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string136, "lorem");
        double double470 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double470, 19.91454545454545);
    }
    @Test
    public void test1345() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean254 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean254, false);
        int int928 = calculadora353.subInt(-500, -100);
        Assertions.assertEquals(int928, -400);
        int int857 = calculadora353.divInt(-100, -500);
        Assertions.assertEquals(int857, 0);
        double double355 = calculadora353.somaDouble(-10.953, 3.14159);
        Assertions.assertEquals(double355, -7.8114099999999995);
    }
    @Test
    public void test1346() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        boolean boolean142 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean142, true);
    }
    @Test
    public void test1347() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean68 = calculadora353.menor(1000, -1000);
        Assertions.assertEquals(boolean68, false);
    }
    @Test
    public void test1348() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        int int633 = calculadora353.subInt(1000, 1000);
        Assertions.assertEquals(int633, 0);
    }
    @Test
    public void test1349() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        double double4 = calculadora353.subDouble(10.953, 1.99);
        Assertions.assertEquals(double4, 8.963);
        boolean boolean375 = calculadora353.and(true, boolean58);
        Assertions.assertEquals(boolean375, false);
    }
    @Test
    public void test1351() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        java.lang.String string354 = calculadora353.toUpCase(string944);
        Assertions.assertEquals(string354, STRING944);
        boolean boolean187 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean187, false);
    }
    @Test
    public void test1352() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double903 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double903, -10.953);
        boolean boolean785 = calculadora353.menor(-250, -1000);
        Assertions.assertEquals(boolean785, false);
        boolean boolean743 = calculadora353.menor(1000, -250);
        Assertions.assertEquals(boolean743, false);
    }
    @Test
    public void test1353() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
        java.lang.String string30 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string30, "go");
        int int338 = calculadora353.somaInt(0, 0);
        Assertions.assertEquals(int338, 0);
        boolean boolean505 = calculadora353.maior(0, 1000);
        Assertions.assertEquals(boolean505, false);
    }
    @Test
    public void test1354() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean999 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean999, true);
        boolean boolean770 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean770, false);
    }
    @Test
    public void test1355() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double447 = calculadora353.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double447, -0.8525000000000001);
        int int939 = calculadora353.mulInt(0, -1000);
        Assertions.assertEquals(int939, 0);
        int int481 = calculadora353.mulInt(-250, -500);
        Assertions.assertEquals(int481, 125000);
    }
    @Test
    public void test1357() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double961 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double961, -8.963);
        boolean boolean552 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean552, true);
        int int293 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int293, -100000);
    }
    @Test
    public void test1358() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean779 = calculadora353.menor(-250, -1000);
        Assertions.assertEquals(boolean779, false);
        double double445 = calculadora353.mulDouble(105.5, 105.5);
        Assertions.assertEquals(double445, 11130.25);
    }
    @Test
    public void test1359() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        boolean boolean146 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean146, false);
        java.lang.String string882 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string882, "GO");
        double double9 = calculadora353.subDouble(-1.55, 10.953);
        Assertions.assertEquals(double9, -12.503);
        boolean boolean108 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean108, false);
    }
    @Test
    public void test1360() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int438 = calculadora353.somaInt(-100, -500);
        Assertions.assertEquals(int438, -600);
        java.lang.String string531 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string531, "NICE");
    }
    @Test
    public void test1361() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean828 = calculadora353.menor(250, 100);
        Assertions.assertEquals(boolean828, false);
        boolean boolean279 = calculadora353.and(boolean593, boolean593);
        Assertions.assertEquals(boolean279, false);
        double double356 = calculadora353.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double356, -104.95);
    }
    @Test
    public void test1363() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        int int990 = calculadora353.subInt(100, -500);
        Assertions.assertEquals(int990, 600);
        double double952 = calculadora353.somaDouble(0.55, 1.99);
        Assertions.assertEquals(double952, 2.54);
    }
    @Test
    public void test1364() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        java.lang.String string778 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string778, "go");
    }
    @Test
    public void test1365() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        boolean boolean926 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean926, true);
    }
    @Test
    public void test1366() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
        double double515 = calculadora353.divDouble(-105.5, -105.5);
        Assertions.assertEquals(double515, 1.0);
        java.lang.String string350 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string350, "GO");
    }
    @Test
    public void test1368() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        double double904 = calculadora353.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double904, 1155.5415);
        double double375 = calculadora353.subDouble(0.0, 10.953);
        Assertions.assertEquals(double375, -10.953);
    }
    @Test
    public void test1369() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean616 = calculadora353.maior(100, 0);
        Assertions.assertEquals(boolean616, true);
        boolean boolean378 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean378, true);
        boolean boolean52 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean52, true);
        int int785 = calculadora353.divInt(-1000, 1000);
        Assertions.assertEquals(int785, -1);
    }
    @Test
    public void test1370() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        boolean boolean146 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean146, false);
        java.lang.String string907 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string907, "IPSUM");
    }
    @Test
    public void test1371() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        boolean boolean273 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean273, true);
    }
    @Test
    public void test1372() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        java.lang.String string807 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string807, "LOREM");
        java.lang.String string899 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string899, "hi");
    }
    @Test
    public void test1373() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        int int135 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int135, 25000);
    }
    @Test
    public void test1374() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        java.lang.String string768 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string768, "valeu");
    }
    @Test
    public void test1376() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int514 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int514, 250000);
        double double787 = calculadora353.subDouble(0.55, 0.0);
        Assertions.assertEquals(double787, 0.55);
    }
    @Test
    public void test1377() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        java.lang.String string564 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string564, string466);
        java.lang.String string236 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string236, "top");
        int int919 = calculadora353.subInt(100, -250);
        Assertions.assertEquals(int919, 350);
    }
    @Test
    public void test1378() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        java.lang.String string278 = calculadora353.toUpCase(string603);
        Assertions.assertEquals(string278, STRING603);
        double double627 = calculadora353.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double627, -16.977149999999998);
        boolean boolean291 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean291, false);
    }
    @Test
    public void test1379() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int856 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int856, -2);
        double double301 = calculadora353.subDouble(0.55, -105.5);
        Assertions.assertEquals(double301, 106.05);
    }
    @Test
    public void test1380() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean816 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean816, false);
        boolean boolean32 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean32, true);
    }
    @Test
    public void test1382() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double137 = calculadora353.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double137, 1.1);
        double double902 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double902, 0.0);
    }
    @Test
    public void test1383() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string169 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string169, "HI");
        boolean boolean762 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean762, false);
        boolean boolean196 = calculadora353.menor(-250, 100);
        Assertions.assertEquals(boolean196, true);
        boolean boolean520 = calculadora353.menor(500, -100);
        Assertions.assertEquals(boolean520, false);
    }
    @Test
    public void test1384() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
        boolean boolean911 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean911, false);
        double double782 = calculadora353.subDouble(1.99, 1.99);
        Assertions.assertEquals(double782, 0.0);
        int int209 = calculadora353.divInt(-500, 100);
        Assertions.assertEquals(int209, -5);
    }
    @Test
    public void test1385() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        boolean boolean989 = calculadora353.or(boolean721, false);
        Assertions.assertEquals(boolean989, false);
    }
    @Test
    public void test1386() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int856 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int856, -2);
        double double310 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double310, -58.025000000000006);
    }
    @Test
    public void test1387() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        int int538 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int538, 600);
        double double483 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double483, -1.0);
        double double359 = calculadora353.somaDouble(-10.953, 1.99);
        Assertions.assertEquals(double359, -8.963);
        double double712 = calculadora353.subDouble(1.99, -10.953);
        Assertions.assertEquals(double712, 12.943);
    }
    @Test
    public void test1388() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        boolean boolean620 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean620, false);
        boolean boolean544 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean544, true);
        java.lang.String string120 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string120, "GO");
    }
    @Test
    public void test1389() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double99 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double99, 0.029778104265402842);
        int int359 = calculadora353.divInt(-1000, 100);
        Assertions.assertEquals(int359, -10);
        double double431 = calculadora353.subDouble(0.55, 10.953);
        Assertions.assertEquals(double431, -10.402999999999999);
    }
    @Test
    public void test1392() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double527 = calculadora353.somaDouble(105.5, 10.953);
        Assertions.assertEquals(double527, 116.453);
        double double418 = calculadora353.subDouble(105.5, 0.55);
        Assertions.assertEquals(double418, 104.95);
        int int338 = calculadora353.somaInt(0, 500);
        Assertions.assertEquals(int338, 500);
    }
    @Test
    public void test1393() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double324 = calculadora353.somaDouble(10.953, -1.55);
        Assertions.assertEquals(double324, 9.402999999999999);
    }
    @Test
    public void test1394() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean828 = calculadora353.menor(250, 100);
        Assertions.assertEquals(boolean828, false);
        int int319 = calculadora353.somaInt(500, 100);
        Assertions.assertEquals(int319, 600);
    }
    @Test
    public void test1395() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int43 = calculadora353.mulInt(-1000, -250);
        Assertions.assertEquals(int43, 250000);
        boolean boolean145 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean145, true);
        java.lang.String string230 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string230, "NICE");
    }
    @Test
    public void test1396() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double361 = calculadora353.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double361, -102.35841);
        int int561 = calculadora353.mulInt(100, 0);
        Assertions.assertEquals(int561, 0);
        java.lang.String string701 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string701, "nice");
    }
    @Test
    public void test1397() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        double double110 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double110, 0.0);
        boolean boolean784 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean784, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
    }
    @Test
    public void test1398() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double137 = calculadora353.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double137, 1.1);
        boolean boolean264 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean264, false);
    }
    @Test
    public void test1399() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double115 = calculadora353.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double115, 163.525);
        boolean boolean75 = calculadora353.menor(500, 0);
        Assertions.assertEquals(boolean75, false);
        int int470 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int470, 100000);
    }
    @Test
    public void test1400() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        boolean boolean688 = calculadora353.menor(-500, 0);
        Assertions.assertEquals(boolean688, true);
    }
    @Test
    public void test1401() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double361 = calculadora353.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double361, -102.35841);
        int int32 = calculadora353.somaInt(-500, -1000);
        Assertions.assertEquals(int32, -1500);
        boolean boolean625 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean625, true);
    }
    @Test
    public void test1403() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        boolean boolean146 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean146, false);
        java.lang.String string882 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string882, "GO");
        double double9 = calculadora353.subDouble(-1.55, 10.953);
        Assertions.assertEquals(double9, -12.503);
        boolean boolean693 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean693, false);
    }
    @Test
    public void test1404() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean795 = calculadora353.or(false, boolean721);
        Assertions.assertEquals(boolean795, false);
        java.lang.String string169 = calculadora353.toLowCase(string173);
        Assertions.assertEquals(string169, string173);
    }
    @Test
    public void test1405() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        int int154 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int154, -100000);
        boolean boolean481 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean481, true);
    }
    @Test
    public void test1407() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        boolean boolean97 = calculadora353.menor(250, -100);
        Assertions.assertEquals(boolean97, false);
        int int794 = calculadora353.somaInt(-250, -250);
        Assertions.assertEquals(int794, -500);
    }
    @Test
    public void test1408() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        java.lang.String string26 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string26, "HELLO");
    }
    @Test
    public void test1410() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        boolean boolean245 = calculadora353.menor(100, 100);
        Assertions.assertEquals(boolean245, false);
        boolean boolean292 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean292, false);
    }
    @Test
    public void test1411() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean410 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean410, true);
        double double839 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double839, 103.95);
        boolean boolean400 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean400, true);
    }
    @Test
    public void test1412() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        int int881 = calculadora353.mulInt(100, 250);
        Assertions.assertEquals(int881, 25000);
        boolean boolean686 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean686, false);
        int int83 = calculadora353.divInt(-500, -500);
        Assertions.assertEquals(int83, 1);
    }
    @Test
    public void test1413() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double324 = calculadora353.somaDouble(10.953, -1.55);
        Assertions.assertEquals(double324, 9.402999999999999);
        boolean boolean330 = calculadora353.maior(-1000, 1000);
        Assertions.assertEquals(boolean330, false);
    }
    @Test
    public void test1414() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        boolean boolean950 = calculadora353.and(boolean906, false);
        Assertions.assertEquals(boolean950, false);
        boolean boolean461 = calculadora353.maior(100, -250);
        Assertions.assertEquals(boolean461, true);
    }
    @Test
    public void test1415() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        int int354 = calculadora353.divInt(-100, 1000);
        Assertions.assertEquals(int354, 0);
        java.lang.String string901 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string901, "NICE");
        double double800 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double800, Infinity);
    }
    @Test
    public void test1416() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean843 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean843, false);
        int int479 = calculadora353.somaInt(100, 500);
        Assertions.assertEquals(int479, 600);
    }
    @Test
    public void test1417() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        int int354 = calculadora353.divInt(-100, 1000);
        Assertions.assertEquals(int354, 0);
        java.lang.String string901 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string901, "NICE");
        double double800 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double800, Infinity);
        int int346 = calculadora353.mulInt(100, 0);
        Assertions.assertEquals(int346, 0);
    }
    @Test
    public void test1418() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        boolean boolean583 = calculadora353.maior(100, 100);
        Assertions.assertEquals(boolean583, false);
    }
    @Test
    public void test1419() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        java.lang.String string889 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string889, "VALEU");
        boolean boolean757 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean757, true);
        boolean boolean702 = calculadora353.maior(100, 100);
        Assertions.assertEquals(boolean702, false);
        double double822 = calculadora353.subDouble(0.55, 10.953);
        Assertions.assertEquals(double822, -10.402999999999999);
    }
    @Test
    public void test1420() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        boolean boolean251 = calculadora353.menor(-100, 100);
        Assertions.assertEquals(boolean251, true);
        int int531 = calculadora353.mulInt(1000, 1000);
        Assertions.assertEquals(int531, 1000000);
        boolean boolean579 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean579, false);
    }
    @Test
    public void test1421() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        int int65 = calculadora353.somaInt(100, 500);
        Assertions.assertEquals(int65, 600);
        int int808 = calculadora353.mulInt(-250, -250);
        Assertions.assertEquals(int808, 62500);
        int int211 = calculadora353.somaInt(500, 0);
        Assertions.assertEquals(int211, 500);
    }
    @Test
    public void test1422() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean887 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean887, false);
        double double847 = calculadora353.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double847, -103.95);
    }
    @Test
    public void test1423() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        boolean boolean478 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean478, false);
        boolean boolean284 = calculadora353.menor(500, -500);
        Assertions.assertEquals(boolean284, false);
        java.lang.String string602 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string602, "GO");
    }
    @Test
    public void test1424() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean950 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean950, false);
        java.lang.String string456 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string456, "hello");
        boolean boolean392 = calculadora353.maior(-100, -100);
        Assertions.assertEquals(boolean392, false);
        int int801 = calculadora353.mulInt(-1000, -500);
        Assertions.assertEquals(int801, 500000);
    }
    @Test
    public void test1425() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double903 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double903, -10.953);
        int int154 = calculadora353.somaInt(-250, 250);
        Assertions.assertEquals(int154, 0);
    }
    @Test
    public void test1426() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        boolean boolean273 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean273, true);
        boolean boolean87 = calculadora353.or(false, boolean116);
        Assertions.assertEquals(boolean87, false);
    }
    @Test
    public void test1427() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        java.lang.String string707 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string707, "hi");
        double double425 = calculadora353.subDouble(-1.55, 10.953);
        Assertions.assertEquals(double425, -12.503);
        double double124 = calculadora353.subDouble(-105.5, 3.14159);
        Assertions.assertEquals(double124, -108.64159);
        java.lang.String string434 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string434, "NICE");
        int int889 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int889, -100000);
    }
    @Test
    public void test1428() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string446 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string446, "VALEU");
        java.lang.String string991 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string991, "nice");
        double double719 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double719, -0.005213270142180095);
        int int450 = calculadora353.divInt(100, -100);
        Assertions.assertEquals(int450, -1);
        int int778 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int778, -2);
    }
    @Test
    public void test1429() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean10 = calculadora353.and(false, boolean721);
        Assertions.assertEquals(boolean10, false);
    }
    @Test
    public void test1430() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
        boolean boolean776 = calculadora353.menor(-250, -100);
        Assertions.assertEquals(boolean776, true);
        java.lang.String string672 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string672, "GO");
    }
    @Test
    public void test1431() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        double double398 = calculadora353.subDouble(0.0, 0.55);
        Assertions.assertEquals(double398, -0.55);
        boolean boolean221 = calculadora353.maior(250, 100);
        Assertions.assertEquals(boolean221, true);
        java.lang.String string957 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string957, "NICE");
    }
    @Test
    public void test1432() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
        java.lang.String string30 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string30, "go");
        int int338 = calculadora353.somaInt(0, 0);
        Assertions.assertEquals(int338, 0);
        int int69 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int69, 10);
    }
    @Test
    public void test1434() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double690 = calculadora353.divDouble(3.14159, 10.953);
        Assertions.assertEquals(double690, 0.2868246142609331);
    }
    @Test
    public void test1435() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        java.lang.String string43 = calculadora353.toLowCase(string603);
        Assertions.assertEquals(string43, string603);
        int int306 = calculadora353.somaInt(1000, 500);
        Assertions.assertEquals(int306, 1500);
        double double311 = calculadora353.subDouble(0.55, 0.55);
        Assertions.assertEquals(double311, 0.0);
    }
    @Test
    public void test1438() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        boolean boolean625 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean625, false);
        int int511 = calculadora353.mulInt(-100, -100);
        Assertions.assertEquals(int511, 10000);
        boolean boolean681 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean681, true);
    }
    @Test
    public void test1439() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        boolean boolean146 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean146, false);
        java.lang.String string882 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string882, "GO");
        java.lang.String string506 = calculadora353.toLowCase(string882);
        Assertions.assertEquals(string506, string882);
        double double59 = calculadora353.mulDouble(-1.55, 0.55);
        Assertions.assertEquals(double59, -0.8525000000000001);
    }
    @Test
    public void test1440() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        double double798 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double798, 94.547);
        int int707 = calculadora353.subInt(-1000, -500);
        Assertions.assertEquals(int707, -500);
        java.lang.String string642 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string642, "valeu");
    }
    @Test
    public void test1441() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int336 = calculadora353.divInt(0, 250);
        Assertions.assertEquals(int336, 0);
        int int511 = calculadora353.divInt(-100, -500);
        Assertions.assertEquals(int511, 0);
        double double397 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double397, 1.0);
    }
    @Test
    public void test1442() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        int int982 = calculadora353.somaInt(-100, 0);
        Assertions.assertEquals(int982, -100);
        double double880 = calculadora353.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double880, -9.632064274627956);
    }
    @Test
    public void test1443() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean700 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean700, false);
        int int58 = calculadora353.divInt(0, 500);
        Assertions.assertEquals(int58, 0);
        boolean boolean889 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean889, false);
        boolean boolean446 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean446, true);
    }
    @Test
    public void test1444() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        boolean boolean391 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean391, false);
        double double870 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double870, 0.0);
        double double500 = calculadora353.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double500, 0.0);
    }
    @Test
    public void test1445() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        int int926 = calculadora353.divInt(0, 1000);
        Assertions.assertEquals(int926, 0);
        int int669 = calculadora353.divInt(0, -500);
        Assertions.assertEquals(int669, 0);
    }
    @Test
    public void test1446() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        boolean boolean391 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean391, false);
        double double427 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double427, Infinity);
    }
    @Test
    public void test1447() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean900 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean900, false);
        java.lang.String string965 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string965, "valeu");
        int int544 = calculadora353.subInt(-100, 500);
        Assertions.assertEquals(int544, -600);
    }
    @Test
    public void test1448() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        int int805 = calculadora353.mulInt(100, 100);
        Assertions.assertEquals(int805, 10000);
        boolean boolean299 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean299, false);
    }
    @Test
    public void test1449() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean528 = calculadora353.menor(0, -500);
        Assertions.assertEquals(boolean528, false);
        boolean boolean8 = calculadora353.or(false, boolean528);
        Assertions.assertEquals(boolean8, false);
        double double641 = calculadora353.somaDouble(1.99, 3.14159);
        Assertions.assertEquals(double641, 5.13159);
    }
    @Test
    public void test1450() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        double double110 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double110, 0.0);
        boolean boolean82 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean82, false);
        double double428 = calculadora353.subDouble(0.0, 105.5);
        Assertions.assertEquals(double428, -105.5);
    }
    @Test
    public void test1451() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int438 = calculadora353.somaInt(-100, -500);
        Assertions.assertEquals(int438, -600);
        double double999 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double999, -4.8694645);
    }
    @Test
    public void test1452() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        double double603 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double603, -0.18168538300009132);
        int int630 = calculadora353.somaInt(-250, -250);
        Assertions.assertEquals(int630, -500);
        boolean boolean311 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean311, false);
    }
    @Test
    public void test1453() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double890 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double890, 103.95);
        double double947 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double947, 0.0);
        double double991 = calculadora353.divDouble(0.0, 0.55);
        Assertions.assertEquals(double991, 0.0);
        double double453 = calculadora353.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double453, -4.8694645);
    }
    @Test
    public void test1454() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
        int int451 = calculadora353.subInt(-500, 0);
        Assertions.assertEquals(int451, -500);
        double double528 = calculadora353.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double528, -0.0);
        boolean boolean919 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean919, false);
        boolean boolean851 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean851, false);
    }
    @Test
    public void test1456() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
        boolean boolean802 = calculadora353.or(boolean825, false);
        Assertions.assertEquals(boolean802, false);
    }
    @Test
    public void test1457() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        int int283 = calculadora353.mulInt(-250, 0);
        Assertions.assertEquals(int283, 0);
        boolean boolean934 = calculadora353.or(false, boolean747);
        Assertions.assertEquals(boolean934, false);
    }
    @Test
    public void test1459() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        double double651 = calculadora353.subDouble(-10.953, -105.5);
        Assertions.assertEquals(double651, 94.547);
        java.lang.String string429 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string429, "go");
    }
    @Test
    public void test1460() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        double double757 = calculadora353.mulDouble(3.14159, 0.0);
        Assertions.assertEquals(double757, 0.0);
    }
    @Test
    public void test1461() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        int int636 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int636, 2000);
    }
    @Test
    public void test1462() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        double double477 = calculadora353.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double477, 1.0945);
        double double411 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double411, -1.55);
    }
    @Test
    public void test1463() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        java.lang.String string807 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string807, "LOREM");
        int int992 = calculadora353.subInt(-250, 1000);
        Assertions.assertEquals(int992, -1250);
        boolean boolean496 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean496, true);
    }
    @Test
    public void test1465() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        double double110 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double110, 0.0);
        boolean boolean82 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean82, false);
        int int772 = calculadora353.mulInt(-100, -500);
        Assertions.assertEquals(int772, 50000);
    }
    @Test
    public void test1466() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
        boolean boolean802 = calculadora353.or(boolean825, false);
        Assertions.assertEquals(boolean802, false);
        java.lang.String string699 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string699, "top");
    }
    @Test
    public void test1467() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        int int154 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int154, -100000);
        boolean boolean481 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean481, true);
        double double346 = calculadora353.subDouble(0.55, -105.5);
        Assertions.assertEquals(double346, 106.05);
    }
    @Test
    public void test1468() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        boolean boolean945 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean945, false);
        boolean boolean951 = calculadora353.or(false, boolean945);
        Assertions.assertEquals(boolean951, false);
    }
    @Test
    public void test1469() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
        java.lang.String string149 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string149, "go");
        int int137 = calculadora353.subInt(-1000, 0);
        Assertions.assertEquals(int137, -1000);
    }
    @Test
    public void test1471() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int789 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int789, 0);
        boolean boolean753 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean753, false);
        int int608 = calculadora353.divInt(1000, 500);
        Assertions.assertEquals(int608, 2);
        int int845 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int845, -100);
    }
    @Test
    public void test1472() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        java.lang.String string135 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string135, "hi");
        java.lang.String string853 = calculadora353.toUpCase(string135);
        Assertions.assertEquals(string853, STRING135);
        boolean boolean478 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean478, true);
    }
    @Test
    public void test1473() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int425 = calculadora353.divInt(1000, 100);
        Assertions.assertEquals(int425, 10);
        java.lang.String string583 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string583, "top");
        double double276 = calculadora353.subDouble(0.0, -10.953);
        Assertions.assertEquals(double276, 10.953);
    }
    @Test
    public void test1474() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        int int154 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int154, -100000);
        boolean boolean481 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean481, true);
        java.lang.String string433 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string433, "GO");
    }
    @Test
    public void test1475() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        java.lang.String string701 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string701, "LOREM");
        boolean boolean808 = calculadora353.menor(1000, 0);
        Assertions.assertEquals(boolean808, false);
        int int656 = calculadora353.subInt(-500, -1000);
        Assertions.assertEquals(int656, 500);
    }
    @Test
    public void test1476() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double99 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double99, 0.029778104265402842);
        int int359 = calculadora353.divInt(-1000, 100);
        Assertions.assertEquals(int359, -10);
        double double431 = calculadora353.subDouble(0.55, 10.953);
        Assertions.assertEquals(double431, -10.402999999999999);
        boolean boolean374 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean374, true);
    }
    @Test
    public void test1477() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean887 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean887, false);
        double double838 = calculadora353.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double838, 0.0);
    }
    @Test
    public void test1478() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        java.lang.String string560 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string560, "TOP");
        double double974 = calculadora353.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double974, 1.5786884422110552);
    }
    @Test
    public void test1479() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        java.lang.String string136 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string136, "lorem");
        double double317 = calculadora353.divDouble(0.55, -1.55);
        Assertions.assertEquals(double317, -0.3548387096774194);
    }
    @Test
    public void test1480() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        java.lang.String string210 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string210, "VALEU");
    }
    @Test
    public void test1481() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean962 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean962, false);
        boolean boolean319 = calculadora353.menor(250, -1000);
        Assertions.assertEquals(boolean319, false);
        double double950 = calculadora353.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double950, 0.0);
    }
    @Test
    public void test1482() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int278 = calculadora353.subInt(500, 500);
        Assertions.assertEquals(int278, 0);
        boolean boolean86 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean86, false);
        double double562 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double562, -1.0);
    }
    @Test
    public void test1483() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean616 = calculadora353.maior(100, 0);
        Assertions.assertEquals(boolean616, true);
        boolean boolean895 = calculadora353.maior(-250, -250);
        Assertions.assertEquals(boolean895, false);
        java.lang.String string336 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string336, "nice");
    }
    @Test
    public void test1485() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        double double651 = calculadora353.subDouble(-10.953, -105.5);
        Assertions.assertEquals(double651, 94.547);
        boolean boolean431 = calculadora353.menor(500, -100);
        Assertions.assertEquals(boolean431, false);
    }
    @Test
    public void test1486() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int336 = calculadora353.divInt(0, 250);
        Assertions.assertEquals(int336, 0);
        boolean boolean759 = calculadora353.or(false, boolean597);
        Assertions.assertEquals(boolean759, false);
    }
    @Test
    public void test1488() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        java.lang.String string449 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string449, "TOP");
        double double492 = calculadora353.subDouble(3.14159, 10.953);
        Assertions.assertEquals(double492, -7.8114099999999995);
        double double887 = calculadora353.divDouble(1.99, 0.55);
        Assertions.assertEquals(double887, 3.6181818181818177);
    }
    @Test
    public void test1490() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int519 = calculadora353.divInt(250, 1000);
        Assertions.assertEquals(int519, 0);
        java.lang.String string391 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string391, "lorem");
        double double533 = calculadora353.subDouble(0.0, 0.55);
        Assertions.assertEquals(double533, -0.55);
    }
    @Test
    public void test1491() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
        double double90 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double90, 1.0);
    }
    @Test
    public void test1492() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        int int696 = calculadora353.divInt(-250, -1000);
        Assertions.assertEquals(int696, 0);
        boolean boolean688 = calculadora353.menor(100, 100);
        Assertions.assertEquals(boolean688, false);
    }
    @Test
    public void test1493() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        boolean boolean146 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean146, false);
        java.lang.String string882 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string882, "GO");
        double double9 = calculadora353.subDouble(-1.55, 10.953);
        Assertions.assertEquals(double9, -12.503);
        boolean boolean108 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean108, false);
        boolean boolean899 = calculadora353.maior(-1000, -100);
        Assertions.assertEquals(boolean899, false);
    }
    @Test
    public void test1495() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean288 = calculadora353.maior(500, -1000);
        Assertions.assertEquals(boolean288, true);
        int int714 = calculadora353.mulInt(-1000, -1000);
        Assertions.assertEquals(int714, 1000000);
    }
    @Test
    public void test1497() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        double double477 = calculadora353.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double477, 1.0945);
        int int533 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int533, 1250);
    }
    @Test
    public void test1499() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean582 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean582, true);
        boolean boolean791 = calculadora353.and(true, boolean721);
        Assertions.assertEquals(boolean791, false);
    }
    @Test
    public void test1500() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int856 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int856, -2);
        boolean boolean27 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean27, true);
        int int298 = calculadora353.subInt(-100, 250);
        Assertions.assertEquals(int298, -350);
    }
    @Test
    public void test1501() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int885 = calculadora353.mulInt(-500, -100);
        Assertions.assertEquals(int885, 50000);
        java.lang.String string289 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string289, "HELLO");
        double double543 = calculadora353.somaDouble(-1.55, 10.953);
        Assertions.assertEquals(double543, 9.402999999999999);
    }
    @Test
    public void test1502() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        java.lang.String string778 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string778, "go");
        double double679 = calculadora353.mulDouble(3.14159, 0.0);
        Assertions.assertEquals(double679, 0.0);
    }
    @Test
    public void test1503() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        int int512 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int512, -150);
        boolean boolean671 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean671, false);
    }
    @Test
    public void test1505() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int725 = calculadora353.mulInt(-1000, -250);
        Assertions.assertEquals(int725, 250000);
        double double174 = calculadora353.somaDouble(10.953, 10.953);
        Assertions.assertEquals(double174, 21.906);
        int int831 = calculadora353.mulInt(1000, 1000);
        Assertions.assertEquals(int831, 1000000);
    }
    @Test
    public void test1508() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        int int283 = calculadora353.mulInt(-250, 0);
        Assertions.assertEquals(int283, 0);
        boolean boolean934 = calculadora353.or(false, boolean747);
        Assertions.assertEquals(boolean934, false);
        boolean boolean252 = calculadora353.and(boolean747, true);
        Assertions.assertEquals(boolean252, false);
    }
    @Test
    public void test1509() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int278 = calculadora353.subInt(500, 500);
        Assertions.assertEquals(int278, 0);
        boolean boolean86 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean86, false);
        java.lang.String string718 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string718, "HI");
    }
    @Test
    public void test1510() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        java.lang.String string466 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string466, "VALEU");
        boolean boolean700 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean700, false);
        boolean boolean340 = calculadora353.maior(250, -1000);
        Assertions.assertEquals(boolean340, true);
    }
    @Test
    public void test1512() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string5 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string5, "valeu");
    }
    @Test
    public void test1513() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        int int212 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int212, -100000);
        int int183 = calculadora353.subInt(1000, 1000);
        Assertions.assertEquals(int183, 0);
        double double433 = calculadora353.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double433, 6.2517641);
        int int710 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int710, -25000);
    }
    @Test
    public void test1514() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        double double398 = calculadora353.subDouble(0.0, 0.55);
        Assertions.assertEquals(double398, -0.55);
        boolean boolean221 = calculadora353.maior(250, 100);
        Assertions.assertEquals(boolean221, true);
        java.lang.String string957 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string957, "NICE");
        boolean boolean192 = calculadora353.menor(-500, -100);
        Assertions.assertEquals(boolean192, true);
    }
    @Test
    public void test1515() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean708 = calculadora353.menor(1000, 250);
        Assertions.assertEquals(boolean708, false);
        java.lang.String string61 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string61, "LOREM");
        int int448 = calculadora353.somaInt(0, -1000);
        Assertions.assertEquals(int448, -1000);
    }
    @Test
    public void test1516() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        boolean boolean789 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean789, true);
        java.lang.String string200 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string200, "HI");
    }
    @Test
    public void test1517() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double954 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double954, 6.28318);
        double double891 = calculadora353.divDouble(0.0, -105.5);
        Assertions.assertEquals(double891, -0.0);
        double double620 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double620, -10.953);
        boolean boolean233 = calculadora353.maior(-500, -100);
        Assertions.assertEquals(boolean233, false);
        java.lang.String string84 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string84, "IPSUM");
    }
    @Test
    public void test1518() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        java.lang.String string793 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string793, "TOP");
        int int212 = calculadora353.somaInt(0, -100);
        Assertions.assertEquals(int212, -100);
        boolean boolean569 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean569, false);
    }
    @Test
    public void test1519() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int43 = calculadora353.mulInt(-1000, -250);
        Assertions.assertEquals(int43, 250000);
        int int319 = calculadora353.somaInt(-250, 0);
        Assertions.assertEquals(int319, -250);
    }
    @Test
    public void test1520() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int789 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int789, 0);
        boolean boolean753 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean753, false);
        int int608 = calculadora353.divInt(1000, 500);
        Assertions.assertEquals(int608, 2);
        boolean boolean634 = calculadora353.maior(1000, -100);
        Assertions.assertEquals(boolean634, true);
    }
    @Test
    public void test1521() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int789 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int789, 0);
        boolean boolean781 = calculadora353.menor(-250, 100);
        Assertions.assertEquals(boolean781, true);
        double double95 = calculadora353.divDouble(-105.5, 3.14159);
        Assertions.assertEquals(double95, -33.58172135765648);
    }
    @Test
    public void test1522() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        int int80 = calculadora353.somaInt(100, 100);
        Assertions.assertEquals(int80, 200);
        boolean boolean237 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean237, true);
    }
    @Test
    public void test1524() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean414 = calculadora353.menor(500, 100);
        Assertions.assertEquals(boolean414, false);
        double double10 = calculadora353.divDouble(10.953, 1.99);
        Assertions.assertEquals(double10, 5.504020100502513);
        int int810 = calculadora353.somaInt(0, -1000);
        Assertions.assertEquals(int810, -1000);
    }
    @Test
    public void test1525() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
        java.lang.String string149 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string149, "go");
        int int366 = calculadora353.subInt(-250, 1000);
        Assertions.assertEquals(int366, -1250);
        int int168 = calculadora353.divInt(-500, -1000);
        Assertions.assertEquals(int168, 0);
    }
    @Test
    public void test1526() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean597 = calculadora353.maior(100, -100);
        Assertions.assertEquals(boolean597, true);
        double double491 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double491, -209.945);
        double double845 = calculadora353.divDouble(3.14159, -105.5);
        Assertions.assertEquals(double845, -0.029778104265402842);
        java.lang.String string693 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string693, "nice");
    }
    @Test
    public void test1527() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        java.lang.String string728 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string728, "HELLO");
        boolean boolean853 = calculadora353.menor(0, 1000);
        Assertions.assertEquals(boolean853, true);
        int int327 = calculadora353.divInt(0, -250);
        Assertions.assertEquals(int327, 0);
    }
    @Test
    public void test1528() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        double double64 = calculadora353.mulDouble(-1.55, 1.99);
        Assertions.assertEquals(double64, -3.0845000000000002);
        int int65 = calculadora353.subInt(100, -100);
        Assertions.assertEquals(int65, 200);
    }
    @Test
    public void test1530() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean735 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean735, false);
        java.lang.String string844 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string844, "hi");
        boolean boolean583 = calculadora353.menor(500, 100);
        Assertions.assertEquals(boolean583, false);
        boolean boolean606 = calculadora353.and(boolean597, boolean735);
        Assertions.assertEquals(boolean606, false);
        boolean boolean456 = calculadora353.maior(500, 1000);
        Assertions.assertEquals(boolean456, false);
    }
    @Test
    public void test1531() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean795 = calculadora353.or(false, boolean721);
        Assertions.assertEquals(boolean795, false);
        java.lang.String string169 = calculadora353.toLowCase(string173);
        Assertions.assertEquals(string169, string173);
        int int505 = calculadora353.subInt(500, -1000);
        Assertions.assertEquals(int505, 1500);
    }
    @Test
    public void test1532() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        java.lang.String string135 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string135, "hi");
        boolean boolean319 = calculadora353.and(false, boolean815);
        Assertions.assertEquals(boolean319, false);
        int int782 = calculadora353.mulInt(-500, 250);
        Assertions.assertEquals(int782, -125000);
    }
    @Test
    public void test1533() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string33 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string33, "NICE");
        int int844 = calculadora353.subInt(100, -1000);
        Assertions.assertEquals(int844, 1100);
        int int557 = calculadora353.mulInt(-500, -250);
        Assertions.assertEquals(int557, 125000);
    }
    @Test
    public void test1534() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double481 = calculadora353.mulDouble(0.0, 3.14159);
        Assertions.assertEquals(double481, 0.0);
    }
    @Test
    public void test1536() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int795 = calculadora353.somaInt(-500, -1000);
        Assertions.assertEquals(int795, -1500);
        boolean boolean0 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean0, false);
    }
    @Test
    public void test1538() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
        int int202 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int202, 250);
        int int897 = calculadora353.somaInt(-100, -100);
        Assertions.assertEquals(int897, -200);
    }
    @Test
    public void test1539() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
        double double96 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double96, 106.05);
        boolean boolean240 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean240, true);
        int int617 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int617, -2);
    }
    @Test
    public void test1540() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean999 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean999, true);
        boolean boolean770 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean770, false);
        java.lang.String string314 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string314, "HI");
    }
    @Test
    public void test1541() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        double double882 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double882, 3.54);
        int int236 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int236, 100000);
    }
    @Test
    public void test1543() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        int int498 = calculadora353.somaInt(1000, 100);
        Assertions.assertEquals(int498, 1100);
        double double471 = calculadora353.somaDouble(3.14159, -10.953);
        Assertions.assertEquals(double471, -7.8114099999999995);
    }
    @Test
    public void test1544() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double966 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double966, 0.0);
        int int724 = calculadora353.subInt(-1000, -250);
        Assertions.assertEquals(int724, -750);
        boolean boolean660 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean660, false);
        boolean boolean525 = calculadora353.maior(500, 250);
        Assertions.assertEquals(boolean525, true);
    }
    @Test
    public void test1545() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double442 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double442, 6.024150000000001);
        int int926 = calculadora353.somaInt(-100, -250);
        Assertions.assertEquals(int926, -350);
        boolean boolean582 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean582, true);
    }
    @Test
    public void test1547() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double351 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double351, Infinity);
        java.lang.String string770 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string770, "lorem");
        double double150 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double150, -0.0);
        int int516 = calculadora353.somaInt(-250, -250);
        Assertions.assertEquals(int516, -500);
    }
    @Test
    public void test1549() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        java.lang.String string889 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string889, "VALEU");
        boolean boolean757 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean757, true);
        boolean boolean702 = calculadora353.maior(100, 100);
        Assertions.assertEquals(boolean702, false);
        boolean boolean386 = calculadora353.menor(500, 500);
        Assertions.assertEquals(boolean386, false);
    }
    @Test
    public void test1551() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean341 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean341, true);
    }
    @Test
    public void test1552() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
        double double686 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double686, -104.95);
        java.lang.String string388 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string388, "TOP");
    }
    @Test
    public void test1553() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean137 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean137, false);
        boolean boolean527 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean527, false);
    }
    @Test
    public void test1555() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean950 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean950, false);
        java.lang.String string456 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string456, "hello");
        boolean boolean392 = calculadora353.maior(-100, -100);
        Assertions.assertEquals(boolean392, false);
        double double577 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double577, 0.43999999999999995);
    }
    @Test
    public void test1556() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        double double4 = calculadora353.subDouble(10.953, 1.99);
        Assertions.assertEquals(double4, 8.963);
        java.lang.String string848 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string848, "nice");
    }
    @Test
    public void test1557() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        double double163 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double163, -3.54);
        double double54 = calculadora353.subDouble(105.5, 3.14159);
        Assertions.assertEquals(double54, 102.35841);
    }
    @Test
    public void test1558() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double954 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double954, 6.28318);
        int int536 = calculadora353.mulInt(0, 250);
        Assertions.assertEquals(int536, 0);
    }
    @Test
    public void test1559() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        java.lang.String string136 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string136, "lorem");
        boolean boolean674 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean674, false);
    }
    @Test
    public void test1560() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double890 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double890, 103.95);
        boolean boolean367 = calculadora353.maior(0, -1000);
        Assertions.assertEquals(boolean367, true);
    }
    @Test
    public void test1561() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        int int666 = calculadora353.mulInt(-100, -500);
        Assertions.assertEquals(int666, 50000);
        boolean boolean285 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean285, true);
        int int888 = calculadora353.subInt(1000, 250);
        Assertions.assertEquals(int888, 750);
    }
    @Test
    public void test1562() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        java.lang.String string489 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string489, "LOREM");
        int int703 = calculadora353.divInt(0, -1000);
        Assertions.assertEquals(int703, 0);
        boolean boolean853 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean853, true);
        double double578 = calculadora353.subDouble(0.0, 0.55);
        Assertions.assertEquals(double578, -0.55);
    }
    @Test
    public void test1563() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        boolean boolean371 = calculadora353.or(true, boolean718);
        Assertions.assertEquals(boolean371, true);
        double double380 = calculadora353.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double380, 0.6334372085472643);
    }
    @Test
    public void test1564() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int856 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int856, -2);
        double double310 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double310, -58.025000000000006);
        int int260 = calculadora353.subInt(-1000, -100);
        Assertions.assertEquals(int260, -900);
    }
    @Test
    public void test1565() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        boolean boolean635 = calculadora353.menor(-100, -1000);
        Assertions.assertEquals(boolean635, false);
    }
    @Test
    public void test1566() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean452 = calculadora353.or(true, boolean597);
        Assertions.assertEquals(boolean452, true);
        double double15 = calculadora353.divDouble(1.99, -1.55);
        Assertions.assertEquals(double15, -1.2838709677419355);
        int int431 = calculadora353.somaInt(0, 250);
        Assertions.assertEquals(int431, 250);
        double double459 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double459, -34.409835269999995);
    }
    @Test
    public void test1567() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean582 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean582, true);
        boolean boolean791 = calculadora353.and(true, boolean721);
        Assertions.assertEquals(boolean791, false);
        double double128 = calculadora353.subDouble(0.55, 0.55);
        Assertions.assertEquals(double128, 0.0);
    }
    @Test
    public void test1568() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean862 = calculadora353.menor(-1000, 1000);
        Assertions.assertEquals(boolean862, true);
        boolean boolean17 = calculadora353.maior(100, -250);
        Assertions.assertEquals(boolean17, true);
    }
    @Test
    public void test1569() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean254 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean254, false);
        int int928 = calculadora353.subInt(-500, -100);
        Assertions.assertEquals(int928, -400);
        int int857 = calculadora353.divInt(-100, -500);
        Assertions.assertEquals(int857, 0);
        double double355 = calculadora353.somaDouble(-10.953, 3.14159);
        Assertions.assertEquals(double355, -7.8114099999999995);
        java.lang.String string79 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string79, "ipsum");
    }
    @Test
    public void test1571() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        double double141 = calculadora353.mulDouble(0.0, -105.5);
        Assertions.assertEquals(double141, -0.0);
    }
    @Test
    public void test1572() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        double double110 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double110, 0.0);
        boolean boolean82 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean82, false);
        int int465 = calculadora353.subInt(0, -500);
        Assertions.assertEquals(int465, 500);
        int int842 = calculadora353.somaInt(1000, -1000);
        Assertions.assertEquals(int842, 0);
    }
    @Test
    public void test1573() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double966 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double966, 0.0);
        int int724 = calculadora353.subInt(-1000, -250);
        Assertions.assertEquals(int724, -750);
        boolean boolean302 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean302, true);
    }
    @Test
    public void test1574() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double447 = calculadora353.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double447, -0.8525000000000001);
        int int939 = calculadora353.mulInt(0, -1000);
        Assertions.assertEquals(int939, 0);
        int int481 = calculadora353.mulInt(-250, -500);
        Assertions.assertEquals(int481, 125000);
        double double737 = calculadora353.somaDouble(0.0, 3.14159);
        Assertions.assertEquals(double737, 3.14159);
    }
    @Test
    public void test1575() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean616 = calculadora353.maior(100, 0);
        Assertions.assertEquals(boolean616, true);
        int int140 = calculadora353.subInt(-1000, -1000);
        Assertions.assertEquals(int140, 0);
        double double499 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double499, 19.91454545454545);
    }
    @Test
    public void test1576() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        boolean boolean289 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean289, false);
        int int351 = calculadora353.somaInt(250, 100);
        Assertions.assertEquals(int351, 350);
    }
    @Test
    public void test1577() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        java.lang.String string561 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string561, "top");
        boolean boolean993 = calculadora353.maior(0, 500);
        Assertions.assertEquals(boolean993, false);
        boolean boolean980 = calculadora353.maior(0, 1000);
        Assertions.assertEquals(boolean980, false);
    }
    @Test
    public void test1579() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        boolean boolean688 = calculadora353.menor(-500, 0);
        Assertions.assertEquals(boolean688, true);
        int int361 = calculadora353.somaInt(-100, 100);
        Assertions.assertEquals(int361, 0);
    }
    @Test
    public void test1580() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        boolean boolean950 = calculadora353.and(boolean906, false);
        Assertions.assertEquals(boolean950, false);
        boolean boolean461 = calculadora353.maior(100, -250);
        Assertions.assertEquals(boolean461, true);
        int int249 = calculadora353.divInt(0, 250);
        Assertions.assertEquals(int249, 0);
    }
    @Test
    public void test1581() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        boolean boolean978 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean978, false);
    }
    @Test
    public void test1582() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        int int498 = calculadora353.somaInt(1000, 100);
        Assertions.assertEquals(int498, 1100);
        double double802 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double802, -0.0);
    }
    @Test
    public void test1583() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean214 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean214, false);
        boolean boolean418 = calculadora353.menor(0, 250);
        Assertions.assertEquals(boolean418, true);
        double double145 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double145, 103.51);
        int int687 = calculadora353.divInt(-250, 250);
        Assertions.assertEquals(int687, -1);
    }
    @Test
    public void test1584() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean137 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean137, false);
        java.lang.String string432 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string432, "HI");
    }
    @Test
    public void test1585() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        int int805 = calculadora353.mulInt(100, 100);
        Assertions.assertEquals(int805, 10000);
        boolean boolean299 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean299, false);
        int int181 = calculadora353.divInt(250, 100);
        Assertions.assertEquals(int181, 2);
    }
    @Test
    public void test1586() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean513 = calculadora353.maior(-500, -250);
        Assertions.assertEquals(boolean513, false);
    }
    @Test
    public void test1587() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double106 = calculadora353.subDouble(0.55, -1.55);
        Assertions.assertEquals(double106, 2.1);
        boolean boolean586 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean586, true);
    }
    @Test
    public void test1588() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        double double121 = calculadora353.mulDouble(3.14159, 105.5);
        Assertions.assertEquals(double121, 331.437745);
        boolean boolean363 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean363, true);
    }
    @Test
    public void test1589() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        java.lang.String string590 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string590, "LOREM");
        double double54 = calculadora353.somaDouble(10.953, 3.14159);
        Assertions.assertEquals(double54, 14.09459);
    }
    @Test
    public void test1590() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double254 = calculadora353.somaDouble(1.99, -105.5);
        Assertions.assertEquals(double254, -103.51);
    }
    @Test
    public void test1591() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        java.lang.String string590 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string590, "LOREM");
        double double54 = calculadora353.somaDouble(10.953, 3.14159);
        Assertions.assertEquals(double54, 14.09459);
        double double877 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double877, 0.0);
    }
    @Test
    public void test1593() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        double double69 = calculadora353.subDouble(0.0, 0.0);
        Assertions.assertEquals(double69, 0.0);
        double double110 = calculadora353.mulDouble(-1.55, -1.55);
        Assertions.assertEquals(double110, 2.4025000000000003);
    }
    @Test
    public void test1594() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean154 = calculadora353.menor(-250, 250);
        Assertions.assertEquals(boolean154, true);
        int int450 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int450, 50000);
        int int17 = calculadora353.subInt(-1000, 250);
        Assertions.assertEquals(int17, -1250);
        boolean boolean491 = calculadora353.menor(100, -1000);
        Assertions.assertEquals(boolean491, false);
    }
    @Test
    public void test1595() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean439 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean439, true);
        boolean boolean704 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean704, false);
        java.lang.String string123 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string123, "GO");
        int int702 = calculadora353.mulInt(-100, 500);
        Assertions.assertEquals(int702, -50000);
    }
    @Test
    public void test1597() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        java.lang.String string409 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string409, "NICE");
    }
    @Test
    public void test1598() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean795 = calculadora353.or(false, boolean721);
        Assertions.assertEquals(boolean795, false);
        java.lang.String string169 = calculadora353.toLowCase(string173);
        Assertions.assertEquals(string169, string173);
        int int505 = calculadora353.subInt(500, -1000);
        Assertions.assertEquals(int505, 1500);
        double double573 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double573, -104.95);
    }
    @Test
    public void test1599() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double890 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double890, 103.95);
        double double947 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double947, 0.0);
        double double991 = calculadora353.divDouble(0.0, 0.55);
        Assertions.assertEquals(double991, 0.0);
        int int833 = calculadora353.somaInt(-500, -100);
        Assertions.assertEquals(int833, -600);
    }
    @Test
    public void test1600() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        java.lang.String string205 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string205, "LOREM");
        double double480 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double480, 1.0945);
    }
    @Test
    public void test1601() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int870 = calculadora353.mulInt(250, 1000);
        Assertions.assertEquals(int870, 250000);
        double double40 = calculadora353.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double40, -9.632064274627956);
    }
    @Test
    public void test1602() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean494 = calculadora353.menor(250, -100);
        Assertions.assertEquals(boolean494, false);
        boolean boolean394 = calculadora353.and(boolean124, true);
        Assertions.assertEquals(boolean394, false);
    }
    @Test
    public void test1603() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        int int853 = calculadora353.somaInt(500, 250);
        Assertions.assertEquals(int853, 750);
        int int117 = calculadora353.somaInt(250, -250);
        Assertions.assertEquals(int117, 0);
    }
    @Test
    public void test1604() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        int int154 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int154, -100000);
        boolean boolean481 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean481, true);
        boolean boolean310 = calculadora353.maior(-500, 500);
        Assertions.assertEquals(boolean310, false);
    }
    @Test
    public void test1606() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        int int756 = calculadora353.somaInt(500, -100);
        Assertions.assertEquals(int756, 400);
    }
    @Test
    public void test1607() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        boolean boolean50 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean50, true);
        boolean boolean283 = calculadora353.maior(-100, -100);
        Assertions.assertEquals(boolean283, false);
        boolean boolean428 = calculadora353.menor(-500, -500);
        Assertions.assertEquals(boolean428, false);
    }
    @Test
    public void test1608() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double351 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double351, Infinity);
        boolean boolean513 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean513, true);
    }
    @Test
    public void test1609() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        java.lang.String string136 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string136, "lorem");
        boolean boolean674 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean674, false);
        int int727 = calculadora353.subInt(250, 500);
        Assertions.assertEquals(int727, -250);
    }
    @Test
    public void test1610() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        int int982 = calculadora353.somaInt(-100, 0);
        Assertions.assertEquals(int982, -100);
        boolean boolean8 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean8, true);
    }
    @Test
    public void test1612() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int789 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int789, 0);
        boolean boolean781 = calculadora353.menor(-250, 100);
        Assertions.assertEquals(boolean781, true);
        java.lang.String string108 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string108, "hello");
    }
    @Test
    public void test1613() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        int int853 = calculadora353.somaInt(500, 250);
        Assertions.assertEquals(int853, 750);
        double double437 = calculadora353.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double437, -4.8694645);
    }
    @Test
    public void test1614() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        double double525 = calculadora353.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double525, 0.0);
        double double61 = calculadora353.divDouble(-10.953, -105.5);
        Assertions.assertEquals(double61, 0.10381990521327014);
    }
    @Test
    public void test1615() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        int int768 = calculadora353.mulInt(-1000, 0);
        Assertions.assertEquals(int768, 0);
    }
    @Test
    public void test1616() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean735 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean735, false);
        java.lang.String string844 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string844, "hi");
        boolean boolean583 = calculadora353.menor(500, 100);
        Assertions.assertEquals(boolean583, false);
        int int429 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int429, 0);
        boolean boolean353 = calculadora353.menor(1000, -250);
        Assertions.assertEquals(boolean353, false);
    }
    @Test
    public void test1617() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        int int468 = calculadora353.somaInt(-100, 250);
        Assertions.assertEquals(int468, 150);
        int int309 = calculadora353.subInt(-1000, 100);
        Assertions.assertEquals(int309, -1100);
    }
    @Test
    public void test1618() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean962 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean962, false);
        double double916 = calculadora353.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double916, 119.96820899999999);
        double double661 = calculadora353.somaDouble(-1.55, 0.55);
        Assertions.assertEquals(double661, -1.0);
    }
    @Test
    public void test1619() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        int int830 = calculadora353.subInt(250, 250);
        Assertions.assertEquals(int830, 0);
        double double507 = calculadora353.subDouble(1.99, 0.55);
        Assertions.assertEquals(double507, 1.44);
    }
    @Test
    public void test1620() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        int int510 = calculadora353.somaInt(-500, -100);
        Assertions.assertEquals(int510, -600);
        double double678 = calculadora353.divDouble(0.0, 105.5);
        Assertions.assertEquals(double678, 0.0);
    }
    @Test
    public void test1621() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        boolean boolean305 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean305, true);
        int int515 = calculadora353.somaInt(-1000, 250);
        Assertions.assertEquals(int515, -750);
        int int89 = calculadora353.divInt(-500, -250);
        Assertions.assertEquals(int89, 2);
    }
    @Test
    public void test1622() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        java.lang.String string135 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string135, "hi");
        boolean boolean267 = calculadora353.and(boolean815, true);
        Assertions.assertEquals(boolean267, false);
    }
    @Test
    public void test1623() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
        boolean boolean802 = calculadora353.or(boolean825, false);
        Assertions.assertEquals(boolean802, false);
        java.lang.String string699 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string699, "top");
        boolean boolean413 = calculadora353.or(false, boolean825);
        Assertions.assertEquals(boolean413, false);
    }
    @Test
    public void test1624() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
        double double515 = calculadora353.divDouble(-105.5, -105.5);
        Assertions.assertEquals(double515, 1.0);
        double double241 = calculadora353.subDouble(-1.55, -105.5);
        Assertions.assertEquals(double241, 103.95);
    }
    @Test
    public void test1625() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
        double double96 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double96, 106.05);
        java.lang.String string135 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string135, "IPSUM");
        int int90 = calculadora353.somaInt(100, -500);
        Assertions.assertEquals(int90, -400);
    }
    @Test
    public void test1627() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
        java.lang.String string948 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string948, "GO");
        boolean boolean210 = calculadora353.and(false, boolean47);
        Assertions.assertEquals(boolean210, false);
    }
    @Test
    public void test1629() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double447 = calculadora353.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double447, -0.8525000000000001);
        double double496 = calculadora353.subDouble(105.5, -105.5);
        Assertions.assertEquals(double496, 211.0);
        double double528 = calculadora353.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double528, -14.09459);
    }
    @Test
    public void test1630() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double966 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double966, 0.0);
        int int724 = calculadora353.subInt(-1000, -250);
        Assertions.assertEquals(int724, -750);
        boolean boolean302 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean302, true);
        double double824 = calculadora353.somaDouble(-10.953, 3.14159);
        Assertions.assertEquals(double824, -7.8114099999999995);
    }
    @Test
    public void test1631() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean341 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean341, true);
        int int70 = calculadora353.somaInt(-500, 250);
        Assertions.assertEquals(int70, -250);
    }
    @Test
    public void test1632() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        double double525 = calculadora353.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double525, 0.0);
        double double54 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double54, Infinity);
    }
    @Test
    public void test1633() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int642 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int642, -100000);
        java.lang.String string123 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string123, "TOP");
    }
    @Test
    public void test1634() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double99 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double99, 0.029778104265402842);
        int int359 = calculadora353.divInt(-1000, 100);
        Assertions.assertEquals(int359, -10);
        double double431 = calculadora353.subDouble(0.55, 10.953);
        Assertions.assertEquals(double431, -10.402999999999999);
        boolean boolean374 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean374, true);
        double double721 = calculadora353.somaDouble(-1.55, 3.14159);
        Assertions.assertEquals(double721, 1.5915899999999998);
    }
    @Test
    public void test1635() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double683 = calculadora353.divDouble(0.55, 10.953);
        Assertions.assertEquals(double683, 0.0502145530904775);
    }
    @Test
    public void test1636() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        int int412 = calculadora353.divInt(-250, -500);
        Assertions.assertEquals(int412, 0);
    }
    @Test
    public void test1637() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean410 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean410, true);
        double double839 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double839, 103.95);
        boolean boolean400 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean400, true);
        boolean boolean33 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean33, false);
    }
    @Test
    public void test1638() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
        boolean boolean911 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean911, false);
        double double900 = calculadora353.subDouble(0.0, 3.14159);
        Assertions.assertEquals(double900, -3.14159);
    }
    @Test
    public void test1639() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        double double314 = calculadora353.somaDouble(-10.953, 105.5);
        Assertions.assertEquals(double314, 94.547);
        double double201 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double201, 6.024150000000001);
        int int936 = calculadora353.divInt(250, 250);
        Assertions.assertEquals(int936, 1);
    }
    @Test
    public void test1640() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        double double375 = calculadora353.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double375, 0.0);
        double double627 = calculadora353.divDouble(-1.55, 105.5);
        Assertions.assertEquals(double627, -0.014691943127962086);
    }
    @Test
    public void test1641() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        double double4 = calculadora353.subDouble(10.953, 1.99);
        Assertions.assertEquals(double4, 8.963);
        boolean boolean375 = calculadora353.and(true, boolean58);
        Assertions.assertEquals(boolean375, false);
        int int454 = calculadora353.mulInt(250, 500);
        Assertions.assertEquals(int454, 125000);
    }
    @Test
    public void test1642() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double307 = calculadora353.subDouble(0.0, 0.55);
        Assertions.assertEquals(double307, -0.55);
        java.lang.String string438 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string438, "ipsum");
    }
    @Test
    public void test1643() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean414 = calculadora353.menor(500, 100);
        Assertions.assertEquals(boolean414, false);
        int int787 = calculadora353.subInt(-500, -100);
        Assertions.assertEquals(int787, -400);
    }
    @Test
    public void test1644() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int336 = calculadora353.divInt(0, 250);
        Assertions.assertEquals(int336, 0);
        double double154 = calculadora353.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double154, -211.0);
        double double396 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double396, -1155.5415);
    }
    @Test
    public void test1645() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean885 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean885, true);
    }
    @Test
    public void test1646() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int278 = calculadora353.subInt(500, 500);
        Assertions.assertEquals(int278, 0);
        boolean boolean86 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean86, false);
        double double562 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double562, -1.0);
        int int479 = calculadora353.divInt(500, -250);
        Assertions.assertEquals(int479, -2);
    }
    @Test
    public void test1647() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int104 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int104, -125000);
        int int150 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int150, -25000);
        boolean boolean787 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean787, false);
    }
    @Test
    public void test1648() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string5 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string5, "valeu");
        java.lang.String string875 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string875, "lorem");
    }
    @Test
    public void test1649() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean765 = calculadora353.or(true, boolean312);
        Assertions.assertEquals(boolean765, true);
        double double716 = calculadora353.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double716, 0.0);
        boolean boolean454 = calculadora353.maior(500, -250);
        Assertions.assertEquals(boolean454, true);
    }
    @Test
    public void test1650() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean357 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean357, false);
        int int461 = calculadora353.mulInt(500, 250);
        Assertions.assertEquals(int461, 125000);
        java.lang.String string253 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string253, "hello");
        java.lang.String string741 = calculadora353.toUpCase(string916);
        Assertions.assertEquals(string741, STRING916);
        double double702 = calculadora353.divDouble(-105.5, 3.14159);
        Assertions.assertEquals(double702, -33.58172135765648);
    }
    @Test
    public void test1651() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean357 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean357, false);
        int int461 = calculadora353.mulInt(500, 250);
        Assertions.assertEquals(int461, 125000);
        java.lang.String string253 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string253, "hello");
        int int121 = calculadora353.mulInt(-100, -100);
        Assertions.assertEquals(int121, 10000);
    }
    @Test
    public void test1654() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        boolean boolean50 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean50, true);
        boolean boolean696 = calculadora353.maior(250, 0);
        Assertions.assertEquals(boolean696, true);
    }
    @Test
    public void test1655() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int519 = calculadora353.divInt(250, 1000);
        Assertions.assertEquals(int519, 0);
        double double540 = calculadora353.divDouble(-1.55, 0.0);
        Assertions.assertEquals(double540, -Infinity);
        double double235 = calculadora353.somaDouble(10.953, -10.953);
        Assertions.assertEquals(double235, 0.0);
    }
    @Test
    public void test1656() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        int int926 = calculadora353.divInt(0, 1000);
        Assertions.assertEquals(int926, 0);
        double double152 = calculadora353.mulDouble(-1.55, 0.55);
        Assertions.assertEquals(double152, -0.8525000000000001);
    }
    @Test
    public void test1657() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        double double147 = calculadora353.mulDouble(1.99, 0.0);
        Assertions.assertEquals(double147, 0.0);
    }
    @Test
    public void test1658() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int602 = calculadora353.mulInt(-1000, -500);
        Assertions.assertEquals(int602, 500000);
    }
    @Test
    public void test1659() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        boolean boolean558 = calculadora353.maior(1000, 250);
        Assertions.assertEquals(boolean558, true);
        boolean boolean133 = calculadora353.maior(500, 500);
        Assertions.assertEquals(boolean133, false);
        boolean boolean729 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean729, true);
        double double216 = calculadora353.subDouble(-10.953, 0.0);
        Assertions.assertEquals(double216, -10.953);
    }
    @Test
    public void test1661() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        boolean boolean499 = calculadora353.menor(250, 500);
        Assertions.assertEquals(boolean499, true);
        int int504 = calculadora353.somaInt(-500, 500);
        Assertions.assertEquals(int504, 0);
        double double904 = calculadora353.somaDouble(1.99, 3.14159);
        Assertions.assertEquals(double904, 5.13159);
    }
    @Test
    public void test1662() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean154 = calculadora353.menor(-250, 250);
        Assertions.assertEquals(boolean154, true);
        java.lang.String string17 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string17, "ipsum");
    }
    @Test
    public void test1663() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        java.lang.String string409 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string409, "NICE");
        double double643 = calculadora353.somaDouble(105.5, 10.953);
        Assertions.assertEquals(double643, 116.453);
    }
    @Test
    public void test1664() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        double double661 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double661, -21.906);
    }
    @Test
    public void test1665() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        double double603 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double603, -0.18168538300009132);
        boolean boolean894 = calculadora353.and(boolean560, true);
        Assertions.assertEquals(boolean894, false);
        double double402 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double402, 94.547);
    }
    @Test
    public void test1666() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        double double551 = calculadora353.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double551, 0.6334372085472643);
        java.lang.String string507 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string507, "nice");
        boolean boolean423 = calculadora353.and(boolean906, false);
        Assertions.assertEquals(boolean423, false);
    }
    @Test
    public void test1667() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int789 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int789, 0);
        boolean boolean753 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean753, false);
        int int539 = calculadora353.divInt(-100, -500);
        Assertions.assertEquals(int539, 0);
        int int867 = calculadora353.divInt(-500, 1000);
        Assertions.assertEquals(int867, 0);
    }
    @Test
    public void test1669() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int104 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int104, -125000);
        int int150 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int150, -25000);
        java.lang.String string426 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string426, "valeu");
        java.lang.String string121 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string121, "go");
    }
    @Test
    public void test1670() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        double double201 = calculadora353.somaDouble(1.99, 3.14159);
        Assertions.assertEquals(double201, 5.13159);
        int int285 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int285, 0);
    }
    @Test
    public void test1672() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int104 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int104, -125000);
        int int150 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int150, -25000);
        java.lang.String string426 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string426, "valeu");
        double double506 = calculadora353.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double506, 1.7278745);
    }
    @Test
    public void test1673() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean828 = calculadora353.menor(250, 100);
        Assertions.assertEquals(boolean828, false);
        int int319 = calculadora353.somaInt(500, 100);
        Assertions.assertEquals(int319, 600);
        double double209 = calculadora353.somaDouble(1.99, 0.55);
        Assertions.assertEquals(double209, 2.54);
    }
    @Test
    public void test1674() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        boolean boolean440 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean440, true);
        double double653 = calculadora353.mulDouble(-1.55, -10.953);
        Assertions.assertEquals(double653, 16.977149999999998);
        boolean boolean205 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean205, true);
    }
    @Test
    public void test1675() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean250 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean250, true);
        java.lang.String string345 = calculadora353.toLowCase(string493);
        Assertions.assertEquals(string345, string493);
    }
    @Test
    public void test1676() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        boolean boolean371 = calculadora353.or(true, boolean718);
        Assertions.assertEquals(boolean371, true);
        double double770 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double770, 7.066451612903225);
    }
    @Test
    public void test1677() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean708 = calculadora353.menor(1000, 250);
        Assertions.assertEquals(boolean708, false);
        boolean boolean878 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean878, false);
    }
    @Test
    public void test1678() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean582 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean582, true);
        boolean boolean791 = calculadora353.and(true, boolean721);
        Assertions.assertEquals(boolean791, false);
        boolean boolean689 = calculadora353.maior(500, 0);
        Assertions.assertEquals(boolean689, true);
    }
    @Test
    public void test1679() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        double double798 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double798, 94.547);
        double double381 = calculadora353.subDouble(0.55, 0.0);
        Assertions.assertEquals(double381, 0.55);
    }
    @Test
    public void test1680() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean976 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean976, false);
    }
    @Test
    public void test1681() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int602 = calculadora353.mulInt(-1000, -500);
        Assertions.assertEquals(int602, 500000);
        int int500 = calculadora353.divInt(-500, -100);
        Assertions.assertEquals(int500, 5);
    }
    @Test
    public void test1682() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double115 = calculadora353.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double115, 163.525);
        boolean boolean75 = calculadora353.menor(500, 0);
        Assertions.assertEquals(boolean75, false);
        java.lang.String string360 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string360, "ipsum");
        boolean boolean76 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean76, false);
    }
    @Test
    public void test1683() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int425 = calculadora353.divInt(1000, 100);
        Assertions.assertEquals(int425, 10);
        boolean boolean165 = calculadora353.and(true, boolean906);
        Assertions.assertEquals(boolean165, false);
    }
    @Test
    public void test1685() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        java.lang.String string354 = calculadora353.toUpCase(string944);
        Assertions.assertEquals(string354, STRING944);
        boolean boolean474 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean474, false);
    }
    @Test
    public void test1686() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        int int211 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int211, 10);
    }
    @Test
    public void test1687() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        java.lang.String string310 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string310, "IPSUM");
        double double899 = calculadora353.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double899, -105.5);
        boolean boolean922 = calculadora353.maior(-500, -250);
        Assertions.assertEquals(boolean922, false);
    }
    @Test
    public void test1688() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double903 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double903, -10.953);
        boolean boolean785 = calculadora353.menor(-250, -1000);
        Assertions.assertEquals(boolean785, false);
        boolean boolean743 = calculadora353.menor(1000, -250);
        Assertions.assertEquals(boolean743, false);
        boolean boolean706 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean706, false);
    }
    @Test
    public void test1689() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        double double388 = calculadora353.mulDouble(0.0, 0.55);
        Assertions.assertEquals(double388, 0.0);
        int int391 = calculadora353.mulInt(0, -100);
        Assertions.assertEquals(int391, 0);
    }
    @Test
    public void test1690() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        int int786 = calculadora353.divInt(-250, -100);
        Assertions.assertEquals(int786, 2);
        double double989 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double989, 0.029778104265402842);
        double double493 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double493, -1155.5415);
        double double574 = calculadora353.subDouble(0.55, -105.5);
        Assertions.assertEquals(double574, 106.05);
    }
    @Test
    public void test1691() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        java.lang.String string560 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string560, "TOP");
        double double974 = calculadora353.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double974, 1.5786884422110552);
        boolean boolean145 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean145, true);
    }
    @Test
    public void test1693() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        boolean boolean230 = calculadora353.maior(-500, 100);
        Assertions.assertEquals(boolean230, false);
    }
    @Test
    public void test1694() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        java.lang.String string889 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string889, "VALEU");
        boolean boolean757 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean757, true);
        boolean boolean702 = calculadora353.maior(100, 100);
        Assertions.assertEquals(boolean702, false);
        boolean boolean386 = calculadora353.menor(500, 500);
        Assertions.assertEquals(boolean386, false);
        int int331 = calculadora353.divInt(-250, -250);
        Assertions.assertEquals(int331, 1);
    }
    @Test
    public void test1695() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        boolean boolean478 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean478, false);
        int int53 = calculadora353.mulInt(250, 1000);
        Assertions.assertEquals(int53, 250000);
    }
    @Test
    public void test1696() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean410 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean410, true);
        double double914 = calculadora353.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double914, 0.0);
    }
    @Test
    public void test1698() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean414 = calculadora353.menor(500, 100);
        Assertions.assertEquals(boolean414, false);
        double double10 = calculadora353.divDouble(10.953, 1.99);
        Assertions.assertEquals(double10, 5.504020100502513);
        boolean boolean93 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean93, true);
    }
    @Test
    public void test1699() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        double double651 = calculadora353.subDouble(-10.953, -105.5);
        Assertions.assertEquals(double651, 94.547);
        double double710 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double710, 1.0);
        double double328 = calculadora353.somaDouble(0.0, -10.953);
        Assertions.assertEquals(double328, -10.953);
    }
    @Test
    public void test1700() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        double double866 = calculadora353.subDouble(3.14159, 105.5);
        Assertions.assertEquals(double866, -102.35841);
        int int249 = calculadora353.subInt(250, 0);
        Assertions.assertEquals(int249, 250);
    }
    @Test
    public void test1701() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        double double260 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double260, -0.18168538300009132);
        int int947 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int947, 750);
        boolean boolean877 = calculadora353.menor(250, -1000);
        Assertions.assertEquals(boolean877, false);
        java.lang.String string68 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string68, "lorem");
    }
    @Test
    public void test1702() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean528 = calculadora353.menor(0, -500);
        Assertions.assertEquals(boolean528, false);
        boolean boolean8 = calculadora353.or(false, boolean528);
        Assertions.assertEquals(boolean8, false);
        double double641 = calculadora353.somaDouble(1.99, 3.14159);
        Assertions.assertEquals(double641, 5.13159);
        boolean boolean947 = calculadora353.maior(-100, -1000);
        Assertions.assertEquals(boolean947, true);
    }
    @Test
    public void test1703() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        boolean boolean694 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean694, false);
        double double798 = calculadora353.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double798, -1.55);
        java.lang.String string512 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string512, "top");
    }
    @Test
    public void test1704() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double705 = calculadora353.somaDouble(0.0, -10.953);
        Assertions.assertEquals(double705, -10.953);
    }
    @Test
    public void test1705() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int425 = calculadora353.divInt(1000, 100);
        Assertions.assertEquals(int425, 10);
        boolean boolean165 = calculadora353.and(true, boolean906);
        Assertions.assertEquals(boolean165, false);
        java.lang.String string978 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string978, "LOREM");
    }
    @Test
    public void test1706() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        java.lang.String string560 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string560, "TOP");
        boolean boolean817 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean817, true);
    }
    @Test
    public void test1707() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        double double341 = calculadora353.mulDouble(3.14159, 105.5);
        Assertions.assertEquals(double341, 331.437745);
        java.lang.String string55 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string55, "ipsum");
        double double14 = calculadora353.somaDouble(0.0, -10.953);
        Assertions.assertEquals(double14, -10.953);
    }
    @Test
    public void test1708() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean288 = calculadora353.maior(500, -1000);
        Assertions.assertEquals(boolean288, true);
        java.lang.String string391 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string391, "IPSUM");
        int int786 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int786, 350);
    }
    @Test
    public void test1709() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean494 = calculadora353.menor(250, -100);
        Assertions.assertEquals(boolean494, false);
        double double59 = calculadora353.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double59, -1.0);
    }
    @Test
    public void test1710() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        double double64 = calculadora353.mulDouble(-1.55, 1.99);
        Assertions.assertEquals(double64, -3.0845000000000002);
        int int65 = calculadora353.subInt(100, -100);
        Assertions.assertEquals(int65, 200);
        java.lang.String string762 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string762, "hi");
    }
    @Test
    public void test1711() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        java.lang.String string489 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string489, "LOREM");
        int int974 = calculadora353.divInt(500, 100);
        Assertions.assertEquals(int974, 5);
    }
    @Test
    public void test1712() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        int int212 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int212, -100000);
        int int183 = calculadora353.subInt(1000, 1000);
        Assertions.assertEquals(int183, 0);
        double double433 = calculadora353.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double433, 6.2517641);
        int int710 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int710, -25000);
        int int511 = calculadora353.mulInt(-100, 250);
        Assertions.assertEquals(int511, -25000);
    }
    @Test
    public void test1713() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string69 = calculadora353.toUpCase(string603);
        Assertions.assertEquals(string69, STRING603);
        int int715 = calculadora353.subInt(1000, 250);
        Assertions.assertEquals(int715, 750);
    }
    @Test
    public void test1714() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean572 = calculadora353.maior(250, 100);
        Assertions.assertEquals(boolean572, true);
        java.lang.String string500 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string500, "lorem");
        double double746 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double746, 3.54);
    }
    @Test
    public void test1715() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean827 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean827, false);
        boolean boolean522 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean522, false);
        int int108 = calculadora353.subInt(-100, 250);
        Assertions.assertEquals(int108, -350);
        java.lang.String string208 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string208, "valeu");
    }
    @Test
    public void test1716() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
        int int320 = calculadora353.subInt(100, 1000);
        Assertions.assertEquals(int320, -900);
        boolean boolean141 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean141, true);
        double double797 = calculadora353.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double797, 1155.5415);
        double double358 = calculadora353.subDouble(-1.55, 0.0);
        Assertions.assertEquals(double358, -1.55);
    }
    @Test
    public void test1717() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        boolean boolean613 = calculadora353.and(false, boolean825);
        Assertions.assertEquals(boolean613, false);
    }
    @Test
    public void test1718() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean214 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean214, false);
        int int812 = calculadora353.somaInt(-100, 1000);
        Assertions.assertEquals(int812, 900);
    }
    @Test
    public void test1719() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        double double551 = calculadora353.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double551, 0.6334372085472643);
        boolean boolean522 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean522, false);
        double double542 = calculadora353.mulDouble(10.953, -1.55);
        Assertions.assertEquals(double542, -16.977149999999998);
        boolean boolean826 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean826, false);
        double double982 = calculadora353.subDouble(1.99, 0.0);
        Assertions.assertEquals(double982, 1.99);
    }
    @Test
    public void test1720() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
        boolean boolean259 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean259, true);
        boolean boolean18 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean18, false);
        java.lang.String string904 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string904, "nice");
    }
    @Test
    public void test1721() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        boolean boolean230 = calculadora353.maior(-500, 100);
        Assertions.assertEquals(boolean230, false);
        java.lang.String string584 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string584, "GO");
    }
    @Test
    public void test1722() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        java.lang.String string205 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string205, "LOREM");
        int int982 = calculadora353.divInt(1000, -500);
        Assertions.assertEquals(int982, -2);
    }
    @Test
    public void test1723() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        java.lang.String string205 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string205, "LOREM");
        int int982 = calculadora353.divInt(1000, -500);
        Assertions.assertEquals(int982, -2);
        double double652 = calculadora353.somaDouble(3.14159, -10.953);
        Assertions.assertEquals(double652, -7.8114099999999995);
    }
    @Test
    public void test1724() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        double double798 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double798, 94.547);
        double double381 = calculadora353.subDouble(0.55, 0.0);
        Assertions.assertEquals(double381, 0.55);
        double double917 = calculadora353.somaDouble(1.99, -105.5);
        Assertions.assertEquals(double917, -103.51);
    }
    @Test
    public void test1725() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        boolean boolean245 = calculadora353.menor(100, 100);
        Assertions.assertEquals(boolean245, false);
        boolean boolean292 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean292, false);
        boolean boolean488 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean488, true);
    }
    @Test
    public void test1726() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        int int231 = calculadora353.subInt(250, -500);
        Assertions.assertEquals(int231, 750);
        double double193 = calculadora353.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double193, -107.49);
    }
    @Test
    public void test1727() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        int int491 = calculadora353.mulInt(1000, -500);
        Assertions.assertEquals(int491, -500000);
        java.lang.String string383 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string383, "go");
    }
    @Test
    public void test1728() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        boolean boolean583 = calculadora353.maior(100, 100);
        Assertions.assertEquals(boolean583, false);
        int int39 = calculadora353.somaInt(-500, -100);
        Assertions.assertEquals(int39, -600);
    }
    @Test
    public void test1730() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double474 = calculadora353.subDouble(1.99, 0.0);
        Assertions.assertEquals(double474, 1.99);
        int int760 = calculadora353.divInt(0, 1000);
        Assertions.assertEquals(int760, 0);
    }
    @Test
    public void test1731() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double548 = calculadora353.mulDouble(105.5, 105.5);
        Assertions.assertEquals(double548, 11130.25);
        boolean boolean974 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean974, false);
    }
    @Test
    public void test1732() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int425 = calculadora353.divInt(1000, 100);
        Assertions.assertEquals(int425, 10);
        boolean boolean165 = calculadora353.and(true, boolean906);
        Assertions.assertEquals(boolean165, false);
        java.lang.String string978 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string978, "LOREM");
        int int857 = calculadora353.subInt(-100, -1000);
        Assertions.assertEquals(int857, 900);
    }
    @Test
    public void test1733() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean708 = calculadora353.menor(1000, 250);
        Assertions.assertEquals(boolean708, false);
        java.lang.String string61 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string61, "LOREM");
        int int448 = calculadora353.somaInt(0, -1000);
        Assertions.assertEquals(int448, -1000);
        double double393 = calculadora353.subDouble(1.99, 105.5);
        Assertions.assertEquals(double393, -103.51);
    }
    @Test
    public void test1734() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        double double298 = calculadora353.divDouble(-1.55, 3.14159);
        Assertions.assertEquals(double298, -0.4933807403257586);
        double double732 = calculadora353.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double732, -0.0);
        int int303 = calculadora353.divInt(-100, -500);
        Assertions.assertEquals(int303, 0);
    }
    @Test
    public void test1735() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double966 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double966, 0.0);
        boolean boolean588 = calculadora353.maior(100, -100);
        Assertions.assertEquals(boolean588, true);
    }
    @Test
    public void test1736() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
        int int202 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int202, 250);
        boolean boolean345 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean345, true);
    }
    @Test
    public void test1737() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        boolean boolean242 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean242, true);
    }
    @Test
    public void test1738() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        double double976 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double976, -1.44);
    }
    @Test
    public void test1739() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string33 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string33, "NICE");
        double double945 = calculadora353.subDouble(10.953, 1.99);
        Assertions.assertEquals(double945, 8.963);
    }
    @Test
    public void test1740() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean779 = calculadora353.menor(-250, -1000);
        Assertions.assertEquals(boolean779, false);
        java.lang.String string667 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string667, "ipsum");
    }
    @Test
    public void test1741() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int86 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int86, -2);
        java.lang.String string102 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string102, "HI");
        int int926 = calculadora353.somaInt(1000, -250);
        Assertions.assertEquals(int926, 750);
    }
    @Test
    public void test1742() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
        java.lang.String string512 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string512, "NICE");
        java.lang.String string802 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string802, "IPSUM");
        double double453 = calculadora353.divDouble(0.0, 3.14159);
        Assertions.assertEquals(double453, 0.0);
    }
    @Test
    public void test1744() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        boolean boolean719 = calculadora353.menor(250, 500);
        Assertions.assertEquals(boolean719, true);
        int int409 = calculadora353.mulInt(-500, 100);
        Assertions.assertEquals(int409, -50000);
    }
    @Test
    public void test1745() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
        double double686 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double686, -104.95);
        java.lang.String string388 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string388, "TOP");
        boolean boolean965 = calculadora353.or(true, boolean815);
        Assertions.assertEquals(boolean965, true);
    }
    @Test
    public void test1746() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        double double123 = calculadora353.subDouble(1.99, 0.0);
        Assertions.assertEquals(double123, 1.99);
        double double0 = calculadora353.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double0, -103.95);
        boolean boolean774 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean774, false);
    }
    @Test
    public void test1748() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean850 = calculadora353.maior(0, 1000);
        Assertions.assertEquals(boolean850, false);
        double double234 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double234, 1.0);
        int int774 = calculadora353.somaInt(500, 500);
        Assertions.assertEquals(int774, 1000);
    }
    @Test
    public void test1749() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
        boolean boolean153 = calculadora353.menor(100, 0);
        Assertions.assertEquals(boolean153, false);
    }
    @Test
    public void test1750() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        int int65 = calculadora353.somaInt(100, 500);
        Assertions.assertEquals(int65, 600);
        int int808 = calculadora353.mulInt(-250, -250);
        Assertions.assertEquals(int808, 62500);
        int int211 = calculadora353.somaInt(500, 0);
        Assertions.assertEquals(int211, 500);
        double double244 = calculadora353.subDouble(-10.953, 0.55);
        Assertions.assertEquals(double244, -11.503);
    }
    @Test
    public void test1751() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        boolean boolean359 = calculadora353.maior(-100, -500);
        Assertions.assertEquals(boolean359, true);
        double double280 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double280, -0.005213270142180095);
        double double918 = calculadora353.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double918, -105.5);
    }
    @Test
    public void test1752() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        boolean boolean359 = calculadora353.maior(-100, -500);
        Assertions.assertEquals(boolean359, true);
        boolean boolean198 = calculadora353.maior(0, 0);
        Assertions.assertEquals(boolean198, false);
        int int410 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int410, -150);
    }
    @Test
    public void test1753() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        java.lang.String string136 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string136, "lorem");
        int int898 = calculadora353.subInt(-1000, -1000);
        Assertions.assertEquals(int898, 0);
    }
    @Test
    public void test1755() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        double double761 = calculadora353.divDouble(10.953, 0.0);
        Assertions.assertEquals(double761, Infinity);
    }
    @Test
    public void test1756() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean516 = calculadora353.maior(-1000, -1000);
        Assertions.assertEquals(boolean516, false);
        int int395 = calculadora353.subInt(250, 500);
        Assertions.assertEquals(int395, -250);
    }
    @Test
    public void test1757() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        int int28 = calculadora353.subInt(-250, 0);
        Assertions.assertEquals(int28, -250);
        int int750 = calculadora353.mulInt(-100, 100);
        Assertions.assertEquals(int750, -10000);
    }
    @Test
    public void test1758() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        int int538 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int538, 600);
        boolean boolean634 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean634, true);
        double double910 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double910, 2.59159);
    }
    @Test
    public void test1759() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        java.lang.String string489 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string489, "LOREM");
        int int703 = calculadora353.divInt(0, -1000);
        Assertions.assertEquals(int703, 0);
        boolean boolean221 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean221, true);
    }
    @Test
    public void test1761() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        double double341 = calculadora353.mulDouble(3.14159, 105.5);
        Assertions.assertEquals(double341, 331.437745);
        java.lang.String string55 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string55, "ipsum");
        double double926 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double926, 0.0);
        double double879 = calculadora353.divDouble(-10.953, 10.953);
        Assertions.assertEquals(double879, -1.0);
    }
    @Test
    public void test1762() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        int int555 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int555, -1250);
        int int932 = calculadora353.divInt(500, -500);
        Assertions.assertEquals(int932, -1);
        java.lang.String string743 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string743, "NICE");
        java.lang.String string731 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string731, "ipsum");
    }
    @Test
    public void test1763() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        boolean boolean808 = calculadora353.menor(100, 1000);
        Assertions.assertEquals(boolean808, true);
        double double173 = calculadora353.subDouble(0.0, 1.99);
        Assertions.assertEquals(double173, -1.99);
    }
    @Test
    public void test1765() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean827 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean827, false);
        double double633 = calculadora353.somaDouble(0.55, -1.55);
        Assertions.assertEquals(double633, -1.0);
    }
    @Test
    public void test1766() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double99 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double99, 0.029778104265402842);
        java.lang.String string377 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string377, "hello");
        java.lang.String string965 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string965, "HI");
    }
    @Test
    public void test1767() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        int int837 = calculadora353.divInt(-1000, -500);
        Assertions.assertEquals(int837, 2);
        double double838 = calculadora353.divDouble(3.14159, 10.953);
        Assertions.assertEquals(double838, 0.2868246142609331);
        double double580 = calculadora353.subDouble(0.55, 3.14159);
        Assertions.assertEquals(double580, -2.59159);
    }
    @Test
    public void test1768() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        int int984 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int984, -750);
        java.lang.String string578 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string578, "NICE");
        boolean boolean271 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean271, false);
    }
    @Test
    public void test1770() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int514 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int514, 250000);
        double double701 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double701, -104.95);
        int int974 = calculadora353.subInt(250, -500);
        Assertions.assertEquals(int974, 750);
    }
    @Test
    public void test1773() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
        java.lang.String string512 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string512, "NICE");
        double double638 = calculadora353.divDouble(10.953, 1.99);
        Assertions.assertEquals(double638, 5.504020100502513);
        java.lang.String string235 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string235, "LOREM");
    }
    @Test
    public void test1775() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        double double798 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double798, 94.547);
        boolean boolean678 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean678, false);
    }
    @Test
    public void test1776() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        double double4 = calculadora353.subDouble(10.953, 1.99);
        Assertions.assertEquals(double4, 8.963);
        int int535 = calculadora353.divInt(500, -250);
        Assertions.assertEquals(int535, -2);
    }
    @Test
    public void test1777() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double137 = calculadora353.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double137, 1.1);
        int int650 = calculadora353.subInt(-100, 500);
        Assertions.assertEquals(int650, -600);
    }
    @Test
    public void test1778() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string33 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string33, "NICE");
        boolean boolean150 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean150, true);
        double double637 = calculadora353.mulDouble(1.99, -10.953);
        Assertions.assertEquals(double637, -21.79647);
    }
    @Test
    public void test1779() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double775 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double775, 6.28318);
        double double428 = calculadora353.mulDouble(-105.5, 3.14159);
        Assertions.assertEquals(double428, -331.437745);
        boolean boolean577 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean577, true);
        double double386 = calculadora353.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double386, -104.95);
    }
    @Test
    public void test1780() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean999 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean999, true);
        boolean boolean770 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean770, false);
        java.lang.String string314 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string314, "HI");
        java.lang.String string356 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string356, "GO");
    }
    @Test
    public void test1781() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string33 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string33, "NICE");
        int int844 = calculadora353.subInt(100, -1000);
        Assertions.assertEquals(int844, 1100);
        boolean boolean527 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean527, false);
        boolean boolean830 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean830, true);
    }
    @Test
    public void test1782() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        java.lang.String string205 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string205, "LOREM");
        double double480 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double480, 1.0945);
        double double454 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double454, 1.0);
    }
    @Test
    public void test1783() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        int int139 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int139, 50000);
        int int157 = calculadora353.somaInt(-1000, 500);
        Assertions.assertEquals(int157, -500);
        double double616 = calculadora353.mulDouble(-1.55, 0.0);
        Assertions.assertEquals(double616, -0.0);
    }
    @Test
    public void test1784() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        int int329 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int329, 0);
        boolean boolean461 = calculadora353.maior(100, -1000);
        Assertions.assertEquals(boolean461, true);
        java.lang.String string988 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string988, "GO");
    }
    @Test
    public void test1785() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
        java.lang.String string512 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string512, "NICE");
        double double638 = calculadora353.divDouble(10.953, 1.99);
        Assertions.assertEquals(double638, 5.504020100502513);
        java.lang.String string235 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string235, "LOREM");
        java.lang.String string275 = calculadora353.toUpCase(string235);
        Assertions.assertEquals(string275, STRING235);
    }
    @Test
    public void test1786() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        boolean boolean90 = calculadora353.menor(0, -100);
        Assertions.assertEquals(boolean90, false);
    }
    @Test
    public void test1787() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        boolean boolean297 = calculadora353.maior(-100, 250);
        Assertions.assertEquals(boolean297, false);
        int int849 = calculadora353.somaInt(-1000, -100);
        Assertions.assertEquals(int849, -1100);
    }
    @Test
    public void test1788() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        boolean boolean251 = calculadora353.menor(-100, 100);
        Assertions.assertEquals(boolean251, true);
        int int436 = calculadora353.subInt(500, 1000);
        Assertions.assertEquals(int436, -500);
        boolean boolean525 = calculadora353.and(boolean60, false);
        Assertions.assertEquals(boolean525, false);
    }
    @Test
    public void test1789() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double883 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double883, -1.44);
    }
    @Test
    public void test1790() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        double double352 = calculadora353.somaDouble(1.99, 0.0);
        Assertions.assertEquals(double352, 1.99);
        double double126 = calculadora353.divDouble(-1.55, 0.55);
        Assertions.assertEquals(double126, -2.818181818181818);
    }
    @Test
    public void test1791() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        double double249 = calculadora353.subDouble(105.5, -1.55);
        Assertions.assertEquals(double249, 107.05);
    }
    @Test
    public void test1792() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double361 = calculadora353.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double361, -102.35841);
        int int32 = calculadora353.somaInt(-500, -1000);
        Assertions.assertEquals(int32, -1500);
        double double468 = calculadora353.mulDouble(-1.55, -105.5);
        Assertions.assertEquals(double468, 163.525);
    }
    @Test
    public void test1793() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean494 = calculadora353.menor(250, -100);
        Assertions.assertEquals(boolean494, false);
        double double133 = calculadora353.mulDouble(-1.55, 1.99);
        Assertions.assertEquals(double133, -3.0845000000000002);
    }
    @Test
    public void test1794() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int831 = calculadora353.somaInt(0, -500);
        Assertions.assertEquals(int831, -500);
        int int739 = calculadora353.divInt(-1000, -500);
        Assertions.assertEquals(int739, 2);
    }
    @Test
    public void test1796() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
        double double96 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double96, 106.05);
        boolean boolean240 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean240, true);
        boolean boolean430 = calculadora353.and(boolean593, true);
        Assertions.assertEquals(boolean430, false);
    }
    @Test
    public void test1797() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        boolean boolean351 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean351, false);
        boolean boolean166 = calculadora353.and(false, boolean351);
        Assertions.assertEquals(boolean166, false);
    }
    @Test
    public void test1798() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        int int212 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int212, -100000);
        java.lang.String string67 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string67, string466);
        int int593 = calculadora353.somaInt(250, 100);
        Assertions.assertEquals(int593, 350);
        boolean boolean432 = calculadora353.and(false, boolean721);
        Assertions.assertEquals(boolean432, false);
    }
    @Test
    public void test1799() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        boolean boolean950 = calculadora353.and(boolean906, false);
        Assertions.assertEquals(boolean950, false);
        int int925 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int925, 100000);
        double double967 = calculadora353.subDouble(0.0, -1.55);
        Assertions.assertEquals(double967, 1.55);
        boolean boolean472 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean472, false);
    }
    @Test
    public void test1800() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int725 = calculadora353.mulInt(-1000, -250);
        Assertions.assertEquals(int725, 250000);
        double double858 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double858, 11.503);
    }
    @Test
    public void test1801() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        int int490 = calculadora353.mulInt(-1000, 500);
        Assertions.assertEquals(int490, -500000);
        boolean boolean614 = calculadora353.maior(100, -250);
        Assertions.assertEquals(boolean614, true);
    }
    @Test
    public void test1802() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        int int141 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int141, -1500);
        boolean boolean883 = calculadora353.or(false, boolean811);
        Assertions.assertEquals(boolean883, false);
    }
    @Test
    public void test1803() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        int int984 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int984, -750);
        java.lang.String string578 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string578, "NICE");
        double double277 = calculadora353.divDouble(3.14159, 10.953);
        Assertions.assertEquals(double277, 0.2868246142609331);
    }
    @Test
    public void test1804() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        java.lang.String string136 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string136, "lorem");
        int int898 = calculadora353.subInt(-1000, -1000);
        Assertions.assertEquals(int898, 0);
        double double45 = calculadora353.somaDouble(-105.5, 10.953);
        Assertions.assertEquals(double45, -94.547);
    }
    @Test
    public void test1805() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        int int212 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int212, -100000);
        int int183 = calculadora353.subInt(1000, 1000);
        Assertions.assertEquals(int183, 0);
        double double433 = calculadora353.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double433, 6.2517641);
        boolean boolean235 = calculadora353.maior(-500, 1000);
        Assertions.assertEquals(boolean235, false);
    }
    @Test
    public void test1809() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean973 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean973, false);
    }
    @Test
    public void test1810() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        boolean boolean625 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean625, false);
        int int511 = calculadora353.mulInt(-100, -100);
        Assertions.assertEquals(int511, 10000);
        double double323 = calculadora353.somaDouble(1.99, 3.14159);
        Assertions.assertEquals(double323, 5.13159);
    }
    @Test
    public void test1811() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double966 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double966, 0.0);
        int int966 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int966, 0);
    }
    @Test
    public void test1813() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
        boolean boolean259 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean259, true);
        boolean boolean18 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean18, false);
        double double18 = calculadora353.subDouble(105.5, -1.55);
        Assertions.assertEquals(double18, 107.05);
        boolean boolean844 = calculadora353.menor(500, -1000);
        Assertions.assertEquals(boolean844, false);
    }
    @Test
    public void test1814() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean999 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean999, true);
        boolean boolean770 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean770, false);
        java.lang.String string314 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string314, "HI");
        boolean boolean663 = calculadora353.menor(-100, -100);
        Assertions.assertEquals(boolean663, false);
    }
    @Test
    public void test1815() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean242 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean242, true);
        double double420 = calculadora353.subDouble(-1.55, 105.5);
        Assertions.assertEquals(double420, -107.05);
    }
    @Test
    public void test1818() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string69 = calculadora353.toUpCase(string603);
        Assertions.assertEquals(string69, STRING603);
        int int715 = calculadora353.subInt(1000, 250);
        Assertions.assertEquals(int715, 750);
        java.lang.String string194 = calculadora353.toUpCase(string69);
        Assertions.assertEquals(string194, STRING69);
    }
    @Test
    public void test1819() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        int int820 = calculadora353.subInt(1000, -500);
        Assertions.assertEquals(int820, 1500);
    }
    @Test
    public void test1820() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        double double4 = calculadora353.subDouble(10.953, 1.99);
        Assertions.assertEquals(double4, 8.963);
        int int535 = calculadora353.divInt(500, -250);
        Assertions.assertEquals(int535, -2);
        java.lang.String string34 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string34, "lorem");
    }
    @Test
    public void test1822() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
        boolean boolean802 = calculadora353.or(boolean825, false);
        Assertions.assertEquals(boolean802, false);
        java.lang.String string699 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string699, "top");
        boolean boolean839 = calculadora353.maior(500, 0);
        Assertions.assertEquals(boolean839, true);
    }
    @Test
    public void test1823() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        int int881 = calculadora353.mulInt(100, 250);
        Assertions.assertEquals(int881, 25000);
        boolean boolean686 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean686, false);
        java.lang.String string338 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string338, "hi");
    }
    @Test
    public void test1824() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double325 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double325, -3.54);
        java.lang.String string492 = calculadora353.toUpCase(string418);
        Assertions.assertEquals(string492, STRING418);
    }
    @Test
    public void test1825() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean850 = calculadora353.menor(250, 100);
        Assertions.assertEquals(boolean850, false);
        boolean boolean289 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean289, true);
    }
    @Test
    public void test1826() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        int int74 = calculadora353.somaInt(-1000, 250);
        Assertions.assertEquals(int74, -750);
        double double354 = calculadora353.subDouble(-10.953, -105.5);
        Assertions.assertEquals(double354, 94.547);
    }
    @Test
    public void test1827() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double460 = calculadora353.mulDouble(-105.5, -105.5);
        Assertions.assertEquals(double460, 11130.25);
    }
    @Test
    public void test1828() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        java.lang.String string466 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string466, "VALEU");
        boolean boolean700 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean700, false);
        double double189 = calculadora353.somaDouble(3.14159, 105.5);
        Assertions.assertEquals(double189, 108.64159);
    }
    @Test
    public void test1829() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double527 = calculadora353.somaDouble(105.5, 10.953);
        Assertions.assertEquals(double527, 116.453);
        boolean boolean513 = calculadora353.maior(500, -1000);
        Assertions.assertEquals(boolean513, true);
        double double339 = calculadora353.mulDouble(-105.5, -105.5);
        Assertions.assertEquals(double339, 11130.25);
        int int546 = calculadora353.divInt(-1000, -1000);
        Assertions.assertEquals(int546, 1);
    }
    @Test
    public void test1831() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        int int45 = calculadora353.divInt(500, -1000);
        Assertions.assertEquals(int45, 0);
        int int550 = calculadora353.somaInt(0, 100);
        Assertions.assertEquals(int550, 100);
        int int62 = calculadora353.mulInt(0, 1000);
        Assertions.assertEquals(int62, 0);
    }
    @Test
    public void test1832() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double99 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double99, 0.029778104265402842);
        int int359 = calculadora353.divInt(-1000, 100);
        Assertions.assertEquals(int359, -10);
        boolean boolean615 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean615, true);
    }
    @Test
    public void test1833() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int278 = calculadora353.subInt(500, 500);
        Assertions.assertEquals(int278, 0);
        boolean boolean86 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean86, false);
        double double562 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double562, -1.0);
        int int908 = calculadora353.somaInt(0, -250);
        Assertions.assertEquals(int908, -250);
    }
    @Test
    public void test1835() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        java.lang.String string135 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string135, "hi");
        boolean boolean267 = calculadora353.and(boolean815, true);
        Assertions.assertEquals(boolean267, false);
        boolean boolean724 = calculadora353.menor(-1000, 1000);
        Assertions.assertEquals(boolean724, true);
    }
    @Test
    public void test1836() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        java.lang.String string695 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string695, "nice");
        boolean boolean648 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean648, false);
    }
    @Test
    public void test1837() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean843 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean843, false);
        java.lang.String string577 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string577, "hi");
        java.lang.String string231 = calculadora353.toLowCase(string577);
        Assertions.assertEquals(string231, string577);
    }
    @Test
    public void test1838() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        int int555 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int555, -1250);
        int int932 = calculadora353.divInt(500, -500);
        Assertions.assertEquals(int932, -1);
        java.lang.String string743 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string743, "NICE");
        java.lang.String string508 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string508, "valeu");
        boolean boolean256 = calculadora353.or(boolean597, true);
        Assertions.assertEquals(boolean256, true);
        double double929 = calculadora353.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double929, -14.09459);
    }
    @Test
    public void test1839() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        double double798 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double798, 94.547);
        double double381 = calculadora353.subDouble(0.55, 0.0);
        Assertions.assertEquals(double381, 0.55);
        double double917 = calculadora353.somaDouble(1.99, -105.5);
        Assertions.assertEquals(double917, -103.51);
        java.lang.String string719 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string719, "top");
    }
    @Test
    public void test1841() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        double double462 = calculadora353.subDouble(3.14159, 105.5);
        Assertions.assertEquals(double462, -102.35841);
        int int803 = calculadora353.subInt(0, -1000);
        Assertions.assertEquals(int803, 1000);
    }
    @Test
    public void test1842() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        java.lang.String string555 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string555, "TOP");
        double double571 = calculadora353.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double571, 5.13159);
        int int47 = calculadora353.mulInt(500, 500);
        Assertions.assertEquals(int47, 250000);
    }
    @Test
    public void test1843() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        java.lang.String string728 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string728, "HELLO");
        double double272 = calculadora353.somaDouble(-10.953, -10.953);
        Assertions.assertEquals(double272, -21.906);
        double double385 = calculadora353.mulDouble(105.5, 1.99);
        Assertions.assertEquals(double385, 209.945);
        boolean boolean826 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean826, false);
    }
    @Test
    public void test1844() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int795 = calculadora353.somaInt(-500, -1000);
        Assertions.assertEquals(int795, -1500);
        boolean boolean900 = calculadora353.maior(1000, -500);
        Assertions.assertEquals(boolean900, true);
        int int259 = calculadora353.divInt(0, 1000);
        Assertions.assertEquals(int259, 0);
    }
    @Test
    public void test1845() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean610 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean610, true);
    }
    @Test
    public void test1846() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean765 = calculadora353.or(true, boolean312);
        Assertions.assertEquals(boolean765, true);
        double double716 = calculadora353.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double716, 0.0);
        boolean boolean454 = calculadora353.maior(500, -250);
        Assertions.assertEquals(boolean454, true);
        boolean boolean252 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean252, false);
    }
    @Test
    public void test1847() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int684 = calculadora353.somaInt(-100, -500);
        Assertions.assertEquals(int684, -600);
        double double325 = calculadora353.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double325, 1.7278745);
    }
    @Test
    public void test1848() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double775 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double775, 6.28318);
        double double428 = calculadora353.mulDouble(-105.5, 3.14159);
        Assertions.assertEquals(double428, -331.437745);
        boolean boolean781 = calculadora353.maior(-500, 100);
        Assertions.assertEquals(boolean781, false);
    }
    @Test
    public void test1849() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean999 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean999, true);
        boolean boolean685 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean685, true);
    }
    @Test
    public void test1850() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        int int31 = calculadora353.subInt(-1000, 0);
        Assertions.assertEquals(int31, -1000);
        double double782 = calculadora353.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double782, -102.35841);
        double double242 = calculadora353.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double242, 3.14159);
    }
    @Test
    public void test1851() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        int int502 = calculadora353.mulInt(1000, 0);
        Assertions.assertEquals(int502, 0);
    }
    @Test
    public void test1852() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        int int604 = calculadora353.divInt(-250, -500);
        Assertions.assertEquals(int604, 0);
    }
    @Test
    public void test1855() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
        boolean boolean802 = calculadora353.or(boolean825, false);
        Assertions.assertEquals(boolean802, false);
        java.lang.String string699 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string699, "top");
        boolean boolean413 = calculadora353.or(false, boolean825);
        Assertions.assertEquals(boolean413, false);
        boolean boolean0 = calculadora353.maior(250, -250);
        Assertions.assertEquals(boolean0, true);
    }
    @Test
    public void test1856() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        java.lang.String string560 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string560, "TOP");
        double double974 = calculadora353.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double974, 1.5786884422110552);
        java.lang.String string949 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string949, string466);
    }
    @Test
    public void test1857() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        boolean boolean305 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean305, true);
        int int515 = calculadora353.somaInt(-1000, 250);
        Assertions.assertEquals(int515, -750);
        int int222 = calculadora353.subInt(-100, -250);
        Assertions.assertEquals(int222, 150);
        boolean boolean269 = calculadora353.and(boolean305, false);
        Assertions.assertEquals(boolean269, false);
        double double877 = calculadora353.mulDouble(-10.953, -1.55);
        Assertions.assertEquals(double877, 16.977149999999998);
    }
    @Test
    public void test1858() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        int int139 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int139, 50000);
        int int157 = calculadora353.somaInt(-1000, 500);
        Assertions.assertEquals(int157, -500);
        int int28 = calculadora353.mulInt(-1000, 1000);
        Assertions.assertEquals(int28, -1000000);
    }
    @Test
    public void test1861() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean582 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean582, true);
        double double287 = calculadora353.somaDouble(-10.953, -1.55);
        Assertions.assertEquals(double287, -12.503);
    }
    @Test
    public void test1864() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double137 = calculadora353.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double137, 1.1);
        boolean boolean585 = calculadora353.menor(500, 500);
        Assertions.assertEquals(boolean585, false);
        int int245 = calculadora353.subInt(-500, 100);
        Assertions.assertEquals(int245, -600);
    }
    @Test
    public void test1865() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean242 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean242, true);
        double double851 = calculadora353.somaDouble(10.953, 3.14159);
        Assertions.assertEquals(double851, 14.09459);
        int int600 = calculadora353.somaInt(250, 250);
        Assertions.assertEquals(int600, 500);
    }
    @Test
    public void test1866() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int684 = calculadora353.somaInt(-100, -500);
        Assertions.assertEquals(int684, -600);
        double double325 = calculadora353.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double325, 1.7278745);
        boolean boolean68 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean68, false);
    }
    @Test
    public void test1867() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int412 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int412, 2000);
        int int555 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int555, -2);
        double double510 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double510, -3.54);
        java.lang.String string37 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string37, "go");
    }
    @Test
    public void test1869() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        boolean boolean242 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean242, true);
        boolean boolean379 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean379, true);
    }
    @Test
    public void test1872() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        int int490 = calculadora353.mulInt(-1000, 500);
        Assertions.assertEquals(int490, -500000);
        double double485 = calculadora353.somaDouble(-1.55, -10.953);
        Assertions.assertEquals(double485, -12.503);
    }
    @Test
    public void test1873() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean885 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean885, true);
        boolean boolean843 = calculadora353.menor(1000, 500);
        Assertions.assertEquals(boolean843, false);
    }
    @Test
    public void test1874() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean68 = calculadora353.menor(1000, -1000);
        Assertions.assertEquals(boolean68, false);
        double double983 = calculadora353.divDouble(0.0, 0.0);
        Assertions.assertEquals(double983, NaN);
    }
    @Test
    public void test1875() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        boolean boolean558 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean558, true);
        int int618 = calculadora353.somaInt(100, -100);
        Assertions.assertEquals(int618, 0);
    }
    @Test
    public void test1876() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean222 = calculadora353.menor(-250, 0);
        Assertions.assertEquals(boolean222, true);
        boolean boolean969 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean969, true);
        boolean boolean459 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean459, false);
    }
    @Test
    public void test1877() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean950 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean950, false);
        java.lang.String string456 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string456, "hello");
        boolean boolean392 = calculadora353.maior(-100, -100);
        Assertions.assertEquals(boolean392, false);
        boolean boolean285 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean285, false);
    }
    @Test
    public void test1878() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double658 = calculadora353.divDouble(105.5, 0.55);
        Assertions.assertEquals(double658, 191.8181818181818);
        boolean boolean456 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean456, true);
    }
    @Test
    public void test1879() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        double double640 = calculadora353.mulDouble(-10.953, 3.14159);
        Assertions.assertEquals(double640, -34.409835269999995);
        int int35 = calculadora353.mulInt(-500, -1000);
        Assertions.assertEquals(int35, 500000);
    }
    @Test
    public void test1880() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        double double309 = calculadora353.mulDouble(-105.5, -105.5);
        Assertions.assertEquals(double309, 11130.25);
    }
    @Test
    public void test1881() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        boolean boolean50 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean50, true);
        boolean boolean283 = calculadora353.maior(-100, -100);
        Assertions.assertEquals(boolean283, false);
        double double674 = calculadora353.mulDouble(0.0, 3.14159);
        Assertions.assertEquals(double674, 0.0);
    }
    @Test
    public void test1882() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
        int int320 = calculadora353.subInt(100, 1000);
        Assertions.assertEquals(int320, -900);
        boolean boolean141 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean141, true);
        double double797 = calculadora353.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double797, 1155.5415);
        boolean boolean188 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean188, true);
    }
    @Test
    public void test1883() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean40 = calculadora353.menor(250, 500);
        Assertions.assertEquals(boolean40, true);
    }
    @Test
    public void test1884() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        int int154 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int154, -100000);
        int int287 = calculadora353.somaInt(-1000, 100);
        Assertions.assertEquals(int287, -900);
    }
    @Test
    public void test1885() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        boolean boolean297 = calculadora353.maior(-100, 250);
        Assertions.assertEquals(boolean297, false);
        int int849 = calculadora353.somaInt(-1000, -100);
        Assertions.assertEquals(int849, -1100);
        java.lang.String string786 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string786, "VALEU");
    }
    @Test
    public void test1886() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean494 = calculadora353.menor(250, -100);
        Assertions.assertEquals(boolean494, false);
        double double588 = calculadora353.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double588, -14.09459);
    }
    @Test
    public void test1887() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int861 = calculadora353.somaInt(0, 0);
        Assertions.assertEquals(int861, 0);
    }
    @Test
    public void test1888() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        int int926 = calculadora353.divInt(0, 1000);
        Assertions.assertEquals(int926, 0);
        boolean boolean734 = calculadora353.maior(-100, -100);
        Assertions.assertEquals(boolean734, false);
    }
    @Test
    public void test1889() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean137 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean137, false);
        boolean boolean124 = calculadora353.or(boolean906, true);
        Assertions.assertEquals(boolean124, true);
    }
    @Test
    public void test1890() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double361 = calculadora353.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double361, -102.35841);
        int int561 = calculadora353.mulInt(100, 0);
        Assertions.assertEquals(int561, 0);
        java.lang.String string701 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string701, "nice");
        boolean boolean296 = calculadora353.maior(1000, 250);
        Assertions.assertEquals(boolean296, true);
    }
    @Test
    public void test1891() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        java.lang.String string889 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string889, "VALEU");
        boolean boolean757 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean757, true);
        double double571 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double571, 103.51);
    }
    @Test
    public void test1892() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean410 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean410, true);
        double double839 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double839, 103.95);
        boolean boolean400 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean400, true);
        boolean boolean33 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean33, false);
        boolean boolean622 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean622, false);
    }
    @Test
    public void test1893() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        int int881 = calculadora353.mulInt(100, 250);
        Assertions.assertEquals(int881, 25000);
        boolean boolean686 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean686, false);
        boolean boolean315 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean315, true);
    }
    @Test
    public void test1895() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        int int666 = calculadora353.mulInt(-100, -500);
        Assertions.assertEquals(int666, 50000);
        boolean boolean29 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean29, false);
    }
    @Test
    public void test1897() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int870 = calculadora353.mulInt(250, 1000);
        Assertions.assertEquals(int870, 250000);
        double double696 = calculadora353.subDouble(10.953, 0.55);
        Assertions.assertEquals(double696, 10.402999999999999);
    }
    @Test
    public void test1898() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean735 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean735, false);
        boolean boolean408 = calculadora353.maior(-500, 250);
        Assertions.assertEquals(boolean408, false);
    }
    @Test
    public void test1899() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean779 = calculadora353.menor(-250, -1000);
        Assertions.assertEquals(boolean779, false);
        double double445 = calculadora353.mulDouble(105.5, 105.5);
        Assertions.assertEquals(double445, 11130.25);
        int int2 = calculadora353.divInt(1000, -250);
        Assertions.assertEquals(int2, -4);
    }
    @Test
    public void test1900() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        boolean boolean789 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean789, true);
        double double153 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double153, 1.0);
    }
    @Test
    public void test1901() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        java.lang.String string644 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string644, "VALEU");
        boolean boolean699 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean699, true);
    }
    @Test
    public void test1902() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        int int211 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int211, 10);
        java.lang.String string437 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string437, "IPSUM");
    }
    @Test
    public void test1905() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        java.lang.String string887 = calculadora353.toUpCase(string796);
        Assertions.assertEquals(string887, STRING796);
        boolean boolean838 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean838, true);
    }
    @Test
    public void test1907() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean700 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean700, false);
        int int58 = calculadora353.divInt(0, 500);
        Assertions.assertEquals(int58, 0);
        boolean boolean695 = calculadora353.menor(100, -1000);
        Assertions.assertEquals(boolean695, false);
        boolean boolean667 = calculadora353.menor(250, 500);
        Assertions.assertEquals(boolean667, true);
    }
    @Test
    public void test1908() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int412 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int412, 2000);
        int int555 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int555, -2);
        double double510 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double510, -3.54);
        java.lang.String string37 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string37, "go");
        int int851 = calculadora353.subInt(-250, 0);
        Assertions.assertEquals(int851, -250);
    }
    @Test
    public void test1909() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        java.lang.String string278 = calculadora353.toUpCase(string603);
        Assertions.assertEquals(string278, STRING603);
        double double627 = calculadora353.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double627, -16.977149999999998);
        double double461 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double461, 4.69159);
    }
    @Test
    public void test1910() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double364 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double364, -0.10381990521327014);
    }
    @Test
    public void test1911() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        double double663 = calculadora353.mulDouble(-10.953, -105.5);
        Assertions.assertEquals(double663, 1155.5415);
    }
    @Test
    public void test1912() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double472 = calculadora353.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double472, 163.525);
    }
    @Test
    public void test1914() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        int int30 = calculadora353.somaInt(1000, -100);
        Assertions.assertEquals(int30, 900);
        java.lang.String string596 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string596, "ipsum");
        double double697 = calculadora353.divDouble(-1.55, 1.99);
        Assertions.assertEquals(double697, -0.7788944723618091);
        int int506 = calculadora353.subInt(-500, -1000);
        Assertions.assertEquals(int506, 500);
        int int473 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int473, 250);
    }
    @Test
    public void test1915() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        boolean boolean470 = calculadora353.maior(-1000, -1000);
        Assertions.assertEquals(boolean470, false);
        double double36 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double36, Infinity);
        int int486 = calculadora353.somaInt(500, -500);
        Assertions.assertEquals(int486, 0);
    }
    @Test
    public void test1917() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        double double323 = calculadora353.subDouble(-1.55, 0.0);
        Assertions.assertEquals(double323, -1.55);
    }
    @Test
    public void test1920() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        int int412 = calculadora353.divInt(-250, -500);
        Assertions.assertEquals(int412, 0);
        boolean boolean815 = calculadora353.or(false, boolean597);
        Assertions.assertEquals(boolean815, false);
    }
    @Test
    public void test1921() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string169 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string169, "HI");
        int int251 = calculadora353.divInt(500, -100);
        Assertions.assertEquals(int251, -5);
        boolean boolean56 = calculadora353.or(false, boolean721);
        Assertions.assertEquals(boolean56, false);
        java.lang.String string963 = calculadora353.toUpCase(string67);
        Assertions.assertEquals(string963, STRING67);
    }
    @Test
    public void test1922() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean999 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean999, true);
        boolean boolean770 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean770, false);
        java.lang.String string314 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string314, "HI");
        java.lang.String string356 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string356, "GO");
        java.lang.String string232 = calculadora353.toUpCase(string314);
        Assertions.assertEquals(string232, STRING314);
    }
    @Test
    public void test1923() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int20 = calculadora353.divInt(-100, -250);
        Assertions.assertEquals(int20, 0);
    }
    @Test
    public void test1924() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        java.lang.String string590 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string590, "LOREM");
        double double54 = calculadora353.somaDouble(10.953, 3.14159);
        Assertions.assertEquals(double54, 14.09459);
        int int929 = calculadora353.mulInt(500, -500);
        Assertions.assertEquals(int929, -250000);
    }
    @Test
    public void test1926() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        java.lang.String string807 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string807, "LOREM");
        int int992 = calculadora353.subInt(-250, 1000);
        Assertions.assertEquals(int992, -1250);
        boolean boolean496 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean496, true);
        int int370 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int370, -150);
    }
    @Test
    public void test1927() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        java.lang.String string43 = calculadora353.toLowCase(string603);
        Assertions.assertEquals(string43, string603);
        boolean boolean448 = calculadora353.menor(250, -250);
        Assertions.assertEquals(boolean448, false);
        java.lang.String string871 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string871, "valeu");
    }
    @Test
    public void test1929() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean962 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean962, false);
        double double916 = calculadora353.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double916, 119.96820899999999);
        double double39 = calculadora353.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double39, -105.5);
    }
    @Test
    public void test1931() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean154 = calculadora353.menor(-250, 250);
        Assertions.assertEquals(boolean154, true);
        int int450 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int450, 50000);
        int int326 = calculadora353.mulInt(0, -250);
        Assertions.assertEquals(int326, 0);
        boolean boolean808 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean808, true);
    }
    @Test
    public void test1932() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        double double110 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double110, 0.0);
        double double955 = calculadora353.somaDouble(1.99, -105.5);
        Assertions.assertEquals(double955, -103.51);
    }
    @Test
    public void test1933() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int43 = calculadora353.mulInt(-1000, -250);
        Assertions.assertEquals(int43, 250000);
        boolean boolean145 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean145, true);
        boolean boolean761 = calculadora353.and(boolean914, boolean721);
        Assertions.assertEquals(boolean761, false);
    }
    @Test
    public void test1934() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        int int538 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int538, 600);
        double double369 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double369, 58.025000000000006);
        boolean boolean651 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean651, false);
        boolean boolean208 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean208, false);
    }
    @Test
    public void test1935() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int795 = calculadora353.somaInt(-500, -1000);
        Assertions.assertEquals(int795, -1500);
        boolean boolean900 = calculadora353.maior(1000, -500);
        Assertions.assertEquals(boolean900, true);
        int int975 = calculadora353.subInt(-100, 250);
        Assertions.assertEquals(int975, -350);
    }
    @Test
    public void test1936() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        boolean boolean950 = calculadora353.and(boolean906, false);
        Assertions.assertEquals(boolean950, false);
        double double390 = calculadora353.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double390, 1.7278745);
    }
    @Test
    public void test1937() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        int int412 = calculadora353.divInt(-250, -500);
        Assertions.assertEquals(int412, 0);
        boolean boolean815 = calculadora353.or(false, boolean597);
        Assertions.assertEquals(boolean815, false);
        java.lang.String string472 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string472, "ipsum");
    }
    @Test
    public void test1938() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean950 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean950, false);
        java.lang.String string456 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string456, "hello");
        boolean boolean392 = calculadora353.maior(-100, -100);
        Assertions.assertEquals(boolean392, false);
        int int801 = calculadora353.mulInt(-1000, -500);
        Assertions.assertEquals(int801, 500000);
        java.lang.String string137 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string137, "NICE");
    }
    @Test
    public void test1939() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean617 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean617, false);
        double double621 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double621, -8.963);
        int int836 = calculadora353.somaInt(-1000, -1000);
        Assertions.assertEquals(int836, -2000);
    }
    @Test
    public void test1940() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        int int910 = calculadora353.mulInt(-500, -100);
        Assertions.assertEquals(int910, 50000);
    }
    @Test
    public void test1941() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        boolean boolean391 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean391, false);
        double double870 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double870, 0.0);
        double double500 = calculadora353.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double500, 0.0);
        java.lang.String string911 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string911, "VALEU");
    }
    @Test
    public void test1942() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double954 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double954, 6.28318);
        double double891 = calculadora353.divDouble(0.0, -105.5);
        Assertions.assertEquals(double891, -0.0);
        double double620 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double620, -10.953);
        boolean boolean233 = calculadora353.maior(-500, -100);
        Assertions.assertEquals(boolean233, false);
        int int443 = calculadora353.divInt(250, 1000);
        Assertions.assertEquals(int443, 0);
        double double171 = calculadora353.divDouble(0.0, 0.0);
        Assertions.assertEquals(double171, NaN);
    }
    @Test
    public void test1943() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean735 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean735, false);
        boolean boolean408 = calculadora353.maior(-500, 250);
        Assertions.assertEquals(boolean408, false);
        double double397 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double397, 0.0);
    }
    @Test
    public void test1944() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean528 = calculadora353.menor(0, -500);
        Assertions.assertEquals(boolean528, false);
        java.lang.String string258 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string258, "ipsum");
        int int1 = calculadora353.subInt(250, 100);
        Assertions.assertEquals(int1, 150);
    }
    @Test
    public void test1945() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        int int790 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int790, 0);
    }
    @Test
    public void test1946() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        int int786 = calculadora353.divInt(-250, -100);
        Assertions.assertEquals(int786, 2);
        int int706 = calculadora353.somaInt(100, 500);
        Assertions.assertEquals(int706, 600);
    }
    @Test
    public void test1947() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double602 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double602, 58.025000000000006);
    }
    @Test
    public void test1948() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double903 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double903, -10.953);
        boolean boolean785 = calculadora353.menor(-250, -1000);
        Assertions.assertEquals(boolean785, false);
        boolean boolean743 = calculadora353.menor(1000, -250);
        Assertions.assertEquals(boolean743, false);
        boolean boolean706 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean706, false);
        java.lang.String string715 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string715, "lorem");
    }
    @Test
    public void test1949() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean950 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean950, false);
        java.lang.String string456 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string456, "hello");
        double double71 = calculadora353.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double71, -104.95);
    }
    @Test
    public void test1950() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        int int977 = calculadora353.subInt(100, 500);
        Assertions.assertEquals(int977, -400);
        double double423 = calculadora353.somaDouble(105.5, 0.0);
        Assertions.assertEquals(double423, 105.5);
        double double180 = calculadora353.mulDouble(-105.5, 105.5);
        Assertions.assertEquals(double180, -11130.25);
    }
    @Test
    public void test1951() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        boolean boolean750 = calculadora353.maior(1000, 500);
        Assertions.assertEquals(boolean750, true);
    }
    @Test
    public void test1952() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        double double643 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double643, -0.18168538300009132);
        double double948 = calculadora353.subDouble(0.55, 0.55);
        Assertions.assertEquals(double948, 0.0);
    }
    @Test
    public void test1953() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
        boolean boolean776 = calculadora353.menor(-250, -100);
        Assertions.assertEquals(boolean776, true);
        java.lang.String string672 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string672, "GO");
        int int887 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int887, -100000);
    }
    @Test
    public void test1956() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        int int743 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int743, 1250);
        int int311 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int311, -25000);
        java.lang.String string224 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string224, "top");
        boolean boolean592 = calculadora353.and(boolean811, false);
        Assertions.assertEquals(boolean592, false);
        int int875 = calculadora353.mulInt(100, 250);
        Assertions.assertEquals(int875, 25000);
    }
    @Test
    public void test1957() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        boolean boolean470 = calculadora353.maior(-1000, -1000);
        Assertions.assertEquals(boolean470, false);
        double double36 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double36, Infinity);
        double double414 = calculadora353.divDouble(-105.5, -1.55);
        Assertions.assertEquals(double414, 68.06451612903226);
    }
    @Test
    public void test1958() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double115 = calculadora353.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double115, 163.525);
        boolean boolean75 = calculadora353.menor(500, 0);
        Assertions.assertEquals(boolean75, false);
        java.lang.String string360 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string360, "ipsum");
        boolean boolean34 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean34, true);
    }
    @Test
    public void test1959() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        boolean boolean694 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean694, false);
        double double798 = calculadora353.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double798, -1.55);
        double double757 = calculadora353.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double757, 1.0945);
    }
    @Test
    public void test1960() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        int int926 = calculadora353.divInt(0, 1000);
        Assertions.assertEquals(int926, 0);
        int int669 = calculadora353.divInt(0, -500);
        Assertions.assertEquals(int669, 0);
        int int325 = calculadora353.subInt(-1000, 1000);
        Assertions.assertEquals(int325, -2000);
    }
    @Test
    public void test1962() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
        double double686 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double686, -104.95);
        double double711 = calculadora353.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double711, 0.55);
    }
    @Test
    public void test1963() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        int int65 = calculadora353.somaInt(100, 500);
        Assertions.assertEquals(int65, 600);
        boolean boolean983 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean983, false);
    }
    @Test
    public void test1964() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean850 = calculadora353.maior(0, 1000);
        Assertions.assertEquals(boolean850, false);
        boolean boolean117 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean117, false);
    }
    @Test
    public void test1965() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        java.lang.String string695 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string695, "nice");
        boolean boolean648 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean648, false);
        int int880 = calculadora353.divInt(-500, 500);
        Assertions.assertEquals(int880, -1);
    }
    @Test
    public void test1967() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        java.lang.String string644 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string644, "VALEU");
        double double629 = calculadora353.subDouble(-10.953, -10.953);
        Assertions.assertEquals(double629, 0.0);
    }
    @Test
    public void test1968() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int725 = calculadora353.mulInt(-1000, -250);
        Assertions.assertEquals(int725, 250000);
        double double858 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double858, 11.503);
        java.lang.String string999 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string999, "LOREM");
    }
    @Test
    public void test1969() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
        double double90 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double90, 1.0);
        java.lang.String string941 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string941, "LOREM");
    }
    @Test
    public void test1970() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int296 = calculadora353.mulInt(0, 500);
        Assertions.assertEquals(int296, 0);
        int int934 = calculadora353.mulInt(-500, 250);
        Assertions.assertEquals(int934, -125000);
    }
    @Test
    public void test1971() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        boolean boolean827 = calculadora353.menor(500, -250);
        Assertions.assertEquals(boolean827, false);
    }
    @Test
    public void test1972() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        int int837 = calculadora353.divInt(-1000, -500);
        Assertions.assertEquals(int837, 2);
        double double838 = calculadora353.divDouble(3.14159, 10.953);
        Assertions.assertEquals(double838, 0.2868246142609331);
        double double580 = calculadora353.subDouble(0.55, 3.14159);
        Assertions.assertEquals(double580, -2.59159);
        boolean boolean998 = calculadora353.menor(-500, 1000);
        Assertions.assertEquals(boolean998, true);
    }
    @Test
    public void test1973() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean528 = calculadora353.menor(0, -500);
        Assertions.assertEquals(boolean528, false);
        boolean boolean8 = calculadora353.or(false, boolean528);
        Assertions.assertEquals(boolean8, false);
        boolean boolean919 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean919, false);
        java.lang.String string789 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string789, "hello");
    }
    @Test
    public void test1976() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        boolean boolean713 = calculadora353.menor(100, 100);
        Assertions.assertEquals(boolean713, false);
        double double288 = calculadora353.subDouble(10.953, 3.14159);
        Assertions.assertEquals(double288, 7.8114099999999995);
    }
    @Test
    public void test1978() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int789 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int789, 0);
        boolean boolean753 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean753, false);
        int int261 = calculadora353.subInt(-250, 1000);
        Assertions.assertEquals(int261, -1250);
    }
    @Test
    public void test1979() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        boolean boolean359 = calculadora353.maior(-100, -500);
        Assertions.assertEquals(boolean359, true);
        double double280 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double280, -0.005213270142180095);
        double double918 = calculadora353.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double918, -105.5);
        boolean boolean90 = calculadora353.maior(0, -1000);
        Assertions.assertEquals(boolean90, true);
    }
    @Test
    public void test1980() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean765 = calculadora353.or(true, boolean312);
        Assertions.assertEquals(boolean765, true);
        boolean boolean943 = calculadora353.maior(-500, -100);
        Assertions.assertEquals(boolean943, false);
        java.lang.String string109 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string109, "hi");
    }
    @Test
    public void test1981() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        java.lang.String string634 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string634, "valeu");
        int int169 = calculadora353.mulInt(-250, 1000);
        Assertions.assertEquals(int169, -250000);
        int int308 = calculadora353.subInt(1000, 0);
        Assertions.assertEquals(int308, 1000);
    }
    @Test
    public void test1982() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        int int567 = calculadora353.mulInt(100, 100);
        Assertions.assertEquals(int567, 10000);
        double double650 = calculadora353.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double650, -104.95);
        boolean boolean823 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean823, true);
    }
    @Test
    public void test1983() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        java.lang.String string644 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string644, "VALEU");
        double double629 = calculadora353.subDouble(-10.953, -10.953);
        Assertions.assertEquals(double629, 0.0);
        double double475 = calculadora353.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double475, 0.0);
    }
    @Test
    public void test1984() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double673 = calculadora353.subDouble(-105.5, -10.953);
        Assertions.assertEquals(double673, -94.547);
        boolean boolean512 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean512, true);
        double double760 = calculadora353.subDouble(105.5, 105.5);
        Assertions.assertEquals(double760, 0.0);
        boolean boolean977 = calculadora353.or(false, boolean888);
        Assertions.assertEquals(boolean977, false);
        boolean boolean639 = calculadora353.maior(0, 100);
        Assertions.assertEquals(boolean639, false);
        java.lang.String string675 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string675, "LOREM");
    }
    @Test
    public void test1985() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean597 = calculadora353.maior(100, -100);
        Assertions.assertEquals(boolean597, true);
        double double491 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double491, -209.945);
        double double845 = calculadora353.divDouble(3.14159, -105.5);
        Assertions.assertEquals(double845, -0.029778104265402842);
        java.lang.String string693 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string693, "nice");
        java.lang.String string859 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string859, "hi");
    }
    @Test
    public void test1987() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string281 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string281, "VALEU");
    }
    @Test
    public void test1988() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        int int354 = calculadora353.divInt(-100, 1000);
        Assertions.assertEquals(int354, 0);
        java.lang.String string507 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string507, "valeu");
        double double971 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double971, 103.95);
        int int456 = calculadora353.somaInt(100, 500);
        Assertions.assertEquals(int456, 600);
    }
    @Test
    public void test1989() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        double double314 = calculadora353.somaDouble(-10.953, 105.5);
        Assertions.assertEquals(double314, 94.547);
        double double201 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double201, 6.024150000000001);
        int int936 = calculadora353.divInt(250, 250);
        Assertions.assertEquals(int936, 1);
        java.lang.String string351 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string351, "go");
    }
    @Test
    public void test1991() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean868 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean868, true);
        boolean boolean232 = calculadora353.or(boolean721, false);
        Assertions.assertEquals(boolean232, false);
    }
    @Test
    public void test1992() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        int int786 = calculadora353.divInt(-250, -100);
        Assertions.assertEquals(int786, 2);
        double double989 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double989, 0.029778104265402842);
        double double493 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double493, -1155.5415);
        double double574 = calculadora353.subDouble(0.55, -105.5);
        Assertions.assertEquals(double574, 106.05);
        java.lang.String string149 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string149, "TOP");
    }
    @Test
    public void test1993() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        int int45 = calculadora353.divInt(500, -1000);
        Assertions.assertEquals(int45, 0);
        int int550 = calculadora353.somaInt(0, 100);
        Assertions.assertEquals(int550, 100);
        int int966 = calculadora353.somaInt(1000, -250);
        Assertions.assertEquals(int966, 750);
        boolean boolean763 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean763, false);
    }
    @Test
    public void test1994() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean617 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean617, false);
        double double621 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double621, -8.963);
        int int990 = calculadora353.subInt(-100, -250);
        Assertions.assertEquals(int990, 150);
        boolean boolean206 = calculadora353.menor(-1000, 1000);
        Assertions.assertEquals(boolean206, true);
    }
    @Test
    public void test1995() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        boolean boolean380 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean380, false);
        boolean boolean135 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean135, false);
        boolean boolean962 = calculadora353.menor(0, 1000);
        Assertions.assertEquals(boolean962, true);
        double double67 = calculadora353.divDouble(3.14159, -105.5);
        Assertions.assertEquals(double67, -0.029778104265402842);
    }
    @Test
    public void test1996() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean950 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean950, false);
        java.lang.String string456 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string456, "hello");
        boolean boolean392 = calculadora353.maior(-100, -100);
        Assertions.assertEquals(boolean392, false);
        boolean boolean903 = calculadora353.or(boolean950, false);
        Assertions.assertEquals(boolean903, false);
    }
    @Test
    public void test1997() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        int int881 = calculadora353.mulInt(100, 250);
        Assertions.assertEquals(int881, 25000);
        boolean boolean686 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean686, false);
        int int83 = calculadora353.divInt(-500, -500);
        Assertions.assertEquals(int83, 1);
        java.lang.String string463 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string463, "top");
    }
    @Test
    public void test1998() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        boolean boolean688 = calculadora353.menor(-500, 0);
        Assertions.assertEquals(boolean688, true);
        int int361 = calculadora353.somaInt(-100, 100);
        Assertions.assertEquals(int361, 0);
        double double453 = calculadora353.mulDouble(-105.5, 3.14159);
        Assertions.assertEquals(double453, -331.437745);
    }
    @Test
    public void test1999() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean166 = calculadora353.and(true, boolean718);
        Assertions.assertEquals(boolean166, false);
    }
    @Test
    public void test2000() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int514 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int514, 250000);
        double double701 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double701, -104.95);
        java.lang.String string668 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string668, "VALEU");
    }
    @Test
    public void test2001() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        int int30 = calculadora353.somaInt(1000, -100);
        Assertions.assertEquals(int30, 900);
        java.lang.String string596 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string596, "ipsum");
        double double697 = calculadora353.divDouble(-1.55, 1.99);
        Assertions.assertEquals(double697, -0.7788944723618091);
        int int506 = calculadora353.subInt(-500, -1000);
        Assertions.assertEquals(int506, 500);
        boolean boolean399 = calculadora353.maior(0, 0);
        Assertions.assertEquals(boolean399, false);
    }
    @Test
    public void test2002() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        double double341 = calculadora353.mulDouble(3.14159, 105.5);
        Assertions.assertEquals(double341, 331.437745);
        java.lang.String string55 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string55, "ipsum");
        boolean boolean425 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean425, false);
    }
    @Test
    public void test2004() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean854 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean854, false);
        boolean boolean528 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean528, true);
        double double214 = calculadora353.subDouble(105.5, 3.14159);
        Assertions.assertEquals(double214, 102.35841);
        int int680 = calculadora353.subInt(250, -1000);
        Assertions.assertEquals(int680, 1250);
    }
    @Test
    public void test2005() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean610 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean610, true);
        boolean boolean128 = calculadora353.maior(1000, -1000);
        Assertions.assertEquals(boolean128, true);
    }
    @Test
    public void test2006() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
        int int451 = calculadora353.subInt(-500, 0);
        Assertions.assertEquals(int451, -500);
        double double528 = calculadora353.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double528, -0.0);
        java.lang.String string109 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string109, "lorem");
    }
    @Test
    public void test2008() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int104 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int104, -125000);
        java.lang.String string529 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string529, STRING466);
    }
    @Test
    public void test2009() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        int int30 = calculadora353.somaInt(1000, -100);
        Assertions.assertEquals(int30, 900);
        java.lang.String string596 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string596, "ipsum");
        boolean boolean300 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean300, false);
        boolean boolean347 = calculadora353.menor(100, 500);
        Assertions.assertEquals(boolean347, true);
    }
    @Test
    public void test2010() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int514 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int514, 250000);
        double double787 = calculadora353.subDouble(0.55, 0.0);
        Assertions.assertEquals(double787, 0.55);
        int int243 = calculadora353.mulInt(1000, 1000);
        Assertions.assertEquals(int243, 1000000);
    }
    @Test
    public void test2011() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double966 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double966, 0.0);
        boolean boolean588 = calculadora353.maior(100, -100);
        Assertions.assertEquals(boolean588, true);
        java.lang.String string118 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string118, "HI");
    }
    @Test
    public void test2012() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        java.lang.String string228 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string228, "HELLO");
        java.lang.String string579 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string579, "ipsum");
    }
    @Test
    public void test2013() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean970 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean970, true);
        int int564 = calculadora353.mulInt(-1000, -500);
        Assertions.assertEquals(int564, 500000);
    }
    @Test
    public void test2014() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        int int696 = calculadora353.divInt(-250, -1000);
        Assertions.assertEquals(int696, 0);
        boolean boolean688 = calculadora353.menor(100, 100);
        Assertions.assertEquals(boolean688, false);
        boolean boolean677 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean677, true);
    }
    @Test
    public void test2016() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean341 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean341, true);
        int int70 = calculadora353.somaInt(-500, 250);
        Assertions.assertEquals(int70, -250);
        boolean boolean196 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean196, true);
    }
    @Test
    public void test2017() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        int int881 = calculadora353.mulInt(100, 250);
        Assertions.assertEquals(int881, 25000);
        boolean boolean686 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean686, false);
        boolean boolean315 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean315, true);
        int int325 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int325, -25000);
    }
    @Test
    public void test2018() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean452 = calculadora353.or(true, boolean597);
        Assertions.assertEquals(boolean452, true);
        double double15 = calculadora353.divDouble(1.99, -1.55);
        Assertions.assertEquals(double15, -1.2838709677419355);
        java.lang.String string225 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string225, "hi");
    }
    @Test
    public void test2019() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        boolean boolean196 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean196, false);
        boolean boolean474 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean474, false);
    }
    @Test
    public void test2020() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        double double471 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double471, 19.91454545454545);
        double double290 = calculadora353.subDouble(1.99, 0.55);
        Assertions.assertEquals(double290, 1.44);
        int int501 = calculadora353.divInt(-250, 100);
        Assertions.assertEquals(int501, -2);
    }
    @Test
    public void test2021() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        int int756 = calculadora353.somaInt(500, -100);
        Assertions.assertEquals(int756, 400);
        boolean boolean962 = calculadora353.maior(500, 0);
        Assertions.assertEquals(boolean962, true);
    }
    @Test
    public void test2022() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int795 = calculadora353.somaInt(-500, -1000);
        Assertions.assertEquals(int795, -1500);
        boolean boolean900 = calculadora353.maior(1000, -500);
        Assertions.assertEquals(boolean900, true);
        int int975 = calculadora353.subInt(-100, 250);
        Assertions.assertEquals(int975, -350);
        double double493 = calculadora353.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double493, 3.14159);
    }
    @Test
    public void test2024() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        int int984 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int984, -750);
        java.lang.String string578 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string578, "NICE");
        int int227 = calculadora353.somaInt(-1000, 500);
        Assertions.assertEquals(int227, -500);
    }
    @Test
    public void test2026() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        boolean boolean483 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean483, true);
        boolean boolean628 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean628, true);
    }
    @Test
    public void test2027() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        double double947 = calculadora353.somaDouble(-105.5, -105.5);
        Assertions.assertEquals(double947, -211.0);
    }
    @Test
    public void test2028() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        int int940 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int940, 50000);
        double double579 = calculadora353.subDouble(1.99, -105.5);
        Assertions.assertEquals(double579, 107.49);
        java.lang.String string978 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string978, "VALEU");
    }
    @Test
    public void test2029() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        int int45 = calculadora353.divInt(500, -1000);
        Assertions.assertEquals(int45, 0);
        int int550 = calculadora353.somaInt(0, 100);
        Assertions.assertEquals(int550, 100);
        int int966 = calculadora353.somaInt(1000, -250);
        Assertions.assertEquals(int966, 750);
        boolean boolean361 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean361, false);
    }
    @Test
    public void test2030() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean726 = calculadora353.menor(-250, 500);
        Assertions.assertEquals(boolean726, true);
        boolean boolean944 = calculadora353.maior(-250, 500);
        Assertions.assertEquals(boolean944, false);
        boolean boolean766 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean766, true);
    }
    @Test
    public void test2031() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean712 = calculadora353.maior(-100, 1000);
        Assertions.assertEquals(boolean712, false);
        boolean boolean92 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean92, true);
    }
    @Test
    public void test2032() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double788 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double788, 105.5);
        double double785 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double785, 94.547);
        int int960 = calculadora353.subInt(500, -500);
        Assertions.assertEquals(int960, 1000);
    }
    @Test
    public void test2033() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int43 = calculadora353.mulInt(-1000, -250);
        Assertions.assertEquals(int43, 250000);
        int int232 = calculadora353.mulInt(100, -100);
        Assertions.assertEquals(int232, -10000);
    }
    @Test
    public void test2034() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        boolean boolean602 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean602, false);
    }
    @Test
    public void test2035() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double137 = calculadora353.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double137, 1.1);
        boolean boolean554 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean554, false);
    }
    @Test
    public void test2037() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double788 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double788, 105.5);
        double double785 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double785, 94.547);
        int int191 = calculadora353.somaInt(250, 250);
        Assertions.assertEquals(int191, 500);
        int int665 = calculadora353.mulInt(100, -100);
        Assertions.assertEquals(int665, -10000);
        double double694 = calculadora353.mulDouble(-105.5, -105.5);
        Assertions.assertEquals(double694, 11130.25);
    }
    @Test
    public void test2039() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
        java.lang.String string30 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string30, "go");
        int int338 = calculadora353.somaInt(0, 0);
        Assertions.assertEquals(int338, 0);
        int int69 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int69, 10);
        int int732 = calculadora353.subInt(-500, -500);
        Assertions.assertEquals(int732, 0);
    }
    @Test
    public void test2040() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double99 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double99, 0.029778104265402842);
        java.lang.String string377 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string377, "hello");
        java.lang.String string998 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string998, "ipsum");
    }
    @Test
    public void test2041() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int296 = calculadora353.mulInt(0, 500);
        Assertions.assertEquals(int296, 0);
        int int605 = calculadora353.subInt(500, 500);
        Assertions.assertEquals(int605, 0);
    }
    @Test
    public void test2042() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        int int209 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int209, 25000);
        boolean boolean284 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean284, true);
        int int207 = calculadora353.divInt(100, 100);
        Assertions.assertEquals(int207, 1);
    }
    @Test
    public void test2043() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        int int633 = calculadora353.subInt(1000, 1000);
        Assertions.assertEquals(int633, 0);
        boolean boolean877 = calculadora353.menor(100, -500);
        Assertions.assertEquals(boolean877, false);
    }
    @Test
    public void test2044() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        boolean boolean305 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean305, true);
        int int515 = calculadora353.somaInt(-1000, 250);
        Assertions.assertEquals(int515, -750);
        boolean boolean184 = calculadora353.and(boolean305, true);
        Assertions.assertEquals(boolean184, false);
        int int404 = calculadora353.mulInt(250, 1000);
        Assertions.assertEquals(int404, 250000);
    }
    @Test
    public void test2045() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        int int212 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int212, -100000);
        int int183 = calculadora353.subInt(1000, 1000);
        Assertions.assertEquals(int183, 0);
        double double433 = calculadora353.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double433, 6.2517641);
        boolean boolean235 = calculadora353.maior(-500, 1000);
        Assertions.assertEquals(boolean235, false);
        java.lang.String string991 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string991, string466);
    }
    @Test
    public void test2047() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        boolean boolean380 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean380, false);
        boolean boolean135 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean135, false);
        boolean boolean962 = calculadora353.menor(0, 1000);
        Assertions.assertEquals(boolean962, true);
        int int243 = calculadora353.divInt(100, -1000);
        Assertions.assertEquals(int243, 0);
    }
    @Test
    public void test2048() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
        double double96 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double96, 106.05);
        boolean boolean240 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean240, true);
        boolean boolean430 = calculadora353.and(boolean593, true);
        Assertions.assertEquals(boolean430, false);
        boolean boolean358 = calculadora353.and(boolean240, true);
        Assertions.assertEquals(boolean358, false);
    }
    @Test
    public void test2049() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        java.lang.String string136 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string136, "lorem");
        int int898 = calculadora353.subInt(-1000, -1000);
        Assertions.assertEquals(int898, 0);
        boolean boolean372 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean372, true);
    }
    @Test
    public void test2050() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double273 = calculadora353.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double273, -4.8694645);
    }
    @Test
    public void test2052() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        java.lang.String string713 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string713, "hi");
        boolean boolean755 = calculadora353.maior(-500, 500);
        Assertions.assertEquals(boolean755, false);
    }
    @Test
    public void test2053() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double351 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double351, Infinity);
        boolean boolean205 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean205, true);
    }
    @Test
    public void test2054() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        int int354 = calculadora353.divInt(-100, 1000);
        Assertions.assertEquals(int354, 0);
        java.lang.String string901 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string901, "NICE");
        double double800 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double800, Infinity);
        double double216 = calculadora353.somaDouble(-10.953, -10.953);
        Assertions.assertEquals(double216, -21.906);
    }
    @Test
    public void test2055() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int789 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int789, 0);
        boolean boolean289 = calculadora353.menor(-250, 0);
        Assertions.assertEquals(boolean289, true);
    }
    @Test
    public void test2056() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        double double309 = calculadora353.mulDouble(-105.5, -105.5);
        Assertions.assertEquals(double309, 11130.25);
        java.lang.String string65 = calculadora353.toLowCase(string526);
        Assertions.assertEquals(string65, string526);
    }
    @Test
    public void test2059() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        int int45 = calculadora353.divInt(500, -1000);
        Assertions.assertEquals(int45, 0);
        int int550 = calculadora353.somaInt(0, 100);
        Assertions.assertEquals(int550, 100);
        double double565 = calculadora353.subDouble(-1.55, -105.5);
        Assertions.assertEquals(double565, 103.95);
        boolean boolean235 = calculadora353.and(false, boolean762);
        Assertions.assertEquals(boolean235, false);
    }
    @Test
    public void test2060() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean616 = calculadora353.maior(100, 0);
        Assertions.assertEquals(boolean616, true);
        int int140 = calculadora353.subInt(-1000, -1000);
        Assertions.assertEquals(int140, 0);
        double double174 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double174, -1155.5415);
    }
    @Test
    public void test2061() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        java.lang.String string561 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string561, "top");
        boolean boolean92 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean92, false);
        boolean boolean48 = calculadora353.maior(-100, 250);
        Assertions.assertEquals(boolean48, false);
    }
    @Test
    public void test2062() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        boolean boolean278 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean278, true);
    }
    @Test
    public void test2063() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        java.lang.String string793 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string793, "TOP");
        int int212 = calculadora353.somaInt(0, -100);
        Assertions.assertEquals(int212, -100);
        boolean boolean569 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean569, false);
        java.lang.String string542 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string542, "LOREM");
    }
    @Test
    public void test2064() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        java.lang.String string310 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string310, "IPSUM");
        double double480 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double480, -0.0502145530904775);
        boolean boolean953 = calculadora353.menor(0, 250);
        Assertions.assertEquals(boolean953, true);
        double double773 = calculadora353.subDouble(0.55, 3.14159);
        Assertions.assertEquals(double773, -2.59159);
    }
    @Test
    public void test2065() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double966 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double966, 0.0);
        java.lang.String string764 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string764, "nice");
    }
    @Test
    public void test2067() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int278 = calculadora353.subInt(500, 500);
        Assertions.assertEquals(int278, 0);
        boolean boolean86 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean86, false);
        double double429 = calculadora353.somaDouble(1.99, 10.953);
        Assertions.assertEquals(double429, 12.943);
        java.lang.String string903 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string903, "lorem");
    }
    @Test
    public void test2068() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        java.lang.String string466 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string466, "VALEU");
        boolean boolean700 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean700, false);
        boolean boolean340 = calculadora353.maior(250, -1000);
        Assertions.assertEquals(boolean340, true);
        boolean boolean25 = calculadora353.or(true, boolean340);
        Assertions.assertEquals(boolean25, true);
    }
    @Test
    public void test2069() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        double double673 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double673, -1155.5415);
        boolean boolean676 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean676, true);
    }
    @Test
    public void test2070() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        double double160 = calculadora353.somaDouble(0.55, 10.953);
        Assertions.assertEquals(double160, 11.503);
    }
    @Test
    public void test2072() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double775 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double775, 6.28318);
        double double428 = calculadora353.mulDouble(-105.5, 3.14159);
        Assertions.assertEquals(double428, -331.437745);
        java.lang.String string301 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string301, "VALEU");
    }
    @Test
    public void test2074() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int86 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int86, -2);
        java.lang.String string102 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string102, "HI");
        double double220 = calculadora353.mulDouble(1.99, 10.953);
        Assertions.assertEquals(double220, 21.79647);
        java.lang.String string530 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string530, "IPSUM");
    }
    @Test
    public void test2075() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        boolean boolean827 = calculadora353.menor(500, -250);
        Assertions.assertEquals(boolean827, false);
        boolean boolean490 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean490, true);
    }
    @Test
    public void test2077() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean154 = calculadora353.menor(-250, 250);
        Assertions.assertEquals(boolean154, true);
        int int450 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int450, 50000);
        int int17 = calculadora353.subInt(-1000, 250);
        Assertions.assertEquals(int17, -1250);
        boolean boolean491 = calculadora353.menor(100, -1000);
        Assertions.assertEquals(boolean491, false);
        double double218 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double218, 2.59159);
    }
    @Test
    public void test2078() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean587 = calculadora353.menor(-250, 250);
        Assertions.assertEquals(boolean587, true);
        double double286 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double286, -104.95);
    }
    @Test
    public void test2079() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean735 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean735, false);
        java.lang.String string844 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string844, "hi");
        boolean boolean583 = calculadora353.menor(500, 100);
        Assertions.assertEquals(boolean583, false);
        boolean boolean606 = calculadora353.and(boolean597, boolean735);
        Assertions.assertEquals(boolean606, false);
        boolean boolean456 = calculadora353.maior(500, 1000);
        Assertions.assertEquals(boolean456, false);
        int int66 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int66, -100);
    }
    @Test
    public void test2080() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
        java.lang.String string30 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string30, "go");
        int int338 = calculadora353.somaInt(0, 0);
        Assertions.assertEquals(int338, 0);
        int int69 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int69, 10);
        double double85 = calculadora353.somaDouble(10.953, 1.99);
        Assertions.assertEquals(double85, 12.943);
    }
    @Test
    public void test2081() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        double double525 = calculadora353.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double525, 0.0);
        double double799 = calculadora353.somaDouble(3.14159, 10.953);
        Assertions.assertEquals(double799, 14.09459);
    }
    @Test
    public void test2082() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        int int10 = calculadora353.subInt(100, -250);
        Assertions.assertEquals(int10, 350);
    }
    @Test
    public void test2083() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        java.lang.String string854 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string854, "IPSUM");
    }
    @Test
    public void test2084() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        int int30 = calculadora353.somaInt(1000, -100);
        Assertions.assertEquals(int30, 900);
        java.lang.String string596 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string596, "ipsum");
        boolean boolean300 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean300, false);
        double double814 = calculadora353.divDouble(-10.953, 3.14159);
        Assertions.assertEquals(double814, -3.4864511282503443);
    }
    @Test
    public void test2085() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean795 = calculadora353.or(false, boolean721);
        Assertions.assertEquals(boolean795, false);
        java.lang.String string169 = calculadora353.toLowCase(string173);
        Assertions.assertEquals(string169, string173);
        int int505 = calculadora353.subInt(500, -1000);
        Assertions.assertEquals(int505, 1500);
        boolean boolean360 = calculadora353.menor(-1000, 1000);
        Assertions.assertEquals(boolean360, true);
    }
    @Test
    public void test2086() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        double double858 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double858, Infinity);
        int int886 = calculadora353.subInt(-250, 1000);
        Assertions.assertEquals(int886, -1250);
    }
    @Test
    public void test2087() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean962 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean962, false);
        double double916 = calculadora353.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double916, 119.96820899999999);
        double double39 = calculadora353.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double39, -105.5);
        int int364 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int364, -250000);
    }
    @Test
    public void test2088() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        int int852 = calculadora353.divInt(1000, 250);
        Assertions.assertEquals(int852, 4);
        int int918 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int918, 0);
    }
    @Test
    public void test2089() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        int int154 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int154, -100000);
        boolean boolean481 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean481, true);
        java.lang.String string433 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string433, "GO");
        java.lang.String string86 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string86, "GO");
    }
    @Test
    public void test2090() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean970 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean970, true);
        boolean boolean731 = calculadora353.maior(1000, 1000);
        Assertions.assertEquals(boolean731, false);
        java.lang.String string121 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string121, string466);
    }
    @Test
    public void test2091() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double961 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double961, -8.963);
        boolean boolean118 = calculadora353.or(true, boolean747);
        Assertions.assertEquals(boolean118, true);
        double double139 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double139, 6.024150000000001);
    }
    @Test
    public void test2092() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
        boolean boolean259 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean259, true);
        boolean boolean18 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean18, false);
        double double18 = calculadora353.subDouble(105.5, -1.55);
        Assertions.assertEquals(double18, 107.05);
        boolean boolean844 = calculadora353.menor(500, -1000);
        Assertions.assertEquals(boolean844, false);
        boolean boolean497 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean497, false);
    }
    @Test
    public void test2093() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double285 = calculadora353.divDouble(0.0, -10.953);
        Assertions.assertEquals(double285, -0.0);
        double double345 = calculadora353.divDouble(-105.5, -1.55);
        Assertions.assertEquals(double345, 68.06451612903226);
    }
    @Test
    public void test2095() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        boolean boolean777 = calculadora353.maior(-250, -250);
        Assertions.assertEquals(boolean777, false);
        boolean boolean412 = calculadora353.maior(-1000, 1000);
        Assertions.assertEquals(boolean412, false);
    }
    @Test
    public void test2096() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean712 = calculadora353.menor(-100, 250);
        Assertions.assertEquals(boolean712, true);
    }
    @Test
    public void test2097() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double481 = calculadora353.mulDouble(0.0, 3.14159);
        Assertions.assertEquals(double481, 0.0);
        boolean boolean2 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean2, false);
    }
    @Test
    public void test2099() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        int int940 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int940, 50000);
        double double652 = calculadora353.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double652, 0.0);
        java.lang.String string912 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string912, "go");
    }
    @Test
    public void test2100() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int856 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int856, -2);
        boolean boolean27 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean27, true);
        int int298 = calculadora353.subInt(-100, 250);
        Assertions.assertEquals(int298, -350);
        boolean boolean197 = calculadora353.or(true, boolean27);
        Assertions.assertEquals(boolean197, true);
    }
    @Test
    public void test2101() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double673 = calculadora353.subDouble(-105.5, -10.953);
        Assertions.assertEquals(double673, -94.547);
        boolean boolean512 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean512, true);
        double double306 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double306, -58.025000000000006);
        java.lang.String string40 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string40, "NICE");
        boolean boolean990 = calculadora353.or(true, boolean888);
        Assertions.assertEquals(boolean990, true);
        double double583 = calculadora353.mulDouble(-1.55, -1.55);
        Assertions.assertEquals(double583, 2.4025000000000003);
    }
    @Test
    public void test2102() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double775 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double775, 6.28318);
        double double428 = calculadora353.mulDouble(-105.5, 3.14159);
        Assertions.assertEquals(double428, -331.437745);
        boolean boolean781 = calculadora353.maior(-500, 100);
        Assertions.assertEquals(boolean781, false);
        java.lang.String string659 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string659, "hi");
    }
    @Test
    public void test2103() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        java.lang.String string728 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string728, "HELLO");
        boolean boolean853 = calculadora353.menor(0, 1000);
        Assertions.assertEquals(boolean853, true);
        int int327 = calculadora353.divInt(0, -250);
        Assertions.assertEquals(int327, 0);
        boolean boolean931 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean931, true);
    }
    @Test
    public void test2105() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int795 = calculadora353.somaInt(-500, -1000);
        Assertions.assertEquals(int795, -1500);
        boolean boolean900 = calculadora353.maior(1000, -500);
        Assertions.assertEquals(boolean900, true);
        boolean boolean970 = calculadora353.menor(-1000, 1000);
        Assertions.assertEquals(boolean970, true);
    }
    @Test
    public void test2107() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        int int926 = calculadora353.divInt(0, 1000);
        Assertions.assertEquals(int926, 0);
        boolean boolean734 = calculadora353.maior(-100, -100);
        Assertions.assertEquals(boolean734, false);
        boolean boolean610 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean610, false);
    }
    @Test
    public void test2108() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        int int940 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int940, 50000);
        double double142 = calculadora353.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double142, -1.0);
    }
    @Test
    public void test2109() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
        double double90 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double90, 1.0);
        double double349 = calculadora353.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double349, 1.1);
    }
    @Test
    public void test2110() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        boolean boolean24 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean24, true);
        int int199 = calculadora353.subInt(500, 250);
        Assertions.assertEquals(int199, 250);
        int int500 = calculadora353.mulInt(-250, -250);
        Assertions.assertEquals(int500, 62500);
    }
    @Test
    public void test2111() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean765 = calculadora353.or(true, boolean312);
        Assertions.assertEquals(boolean765, true);
        double double716 = calculadora353.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double716, 0.0);
        boolean boolean454 = calculadora353.maior(500, -250);
        Assertions.assertEquals(boolean454, true);
        boolean boolean252 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean252, false);
        int int544 = calculadora353.mulInt(-1000, 0);
        Assertions.assertEquals(int544, 0);
    }
    @Test
    public void test2112() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        double double882 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double882, 3.54);
        int int678 = calculadora353.somaInt(0, -1000);
        Assertions.assertEquals(int678, -1000);
        int int862 = calculadora353.mulInt(100, 500);
        Assertions.assertEquals(int862, 50000);
    }
    @Test
    public void test2113() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        java.lang.String string769 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string769, "ipsum");
        int int914 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int914, 0);
        boolean boolean892 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean892, false);
        boolean boolean466 = calculadora353.or(boolean747, false);
        Assertions.assertEquals(boolean466, false);
    }
    @Test
    public void test2115() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        java.lang.String string954 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string954, "nice");
        int int14 = calculadora353.mulInt(500, 250);
        Assertions.assertEquals(int14, 125000);
    }
    @Test
    public void test2116() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        java.lang.String string564 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string564, string466);
        int int659 = calculadora353.mulInt(100, -500);
        Assertions.assertEquals(int659, -50000);
        double double624 = calculadora353.somaDouble(0.0, 0.55);
        Assertions.assertEquals(double624, 0.55);
    }
    @Test
    public void test2117() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        int int283 = calculadora353.mulInt(-250, 0);
        Assertions.assertEquals(int283, 0);
        double double665 = calculadora353.mulDouble(10.953, 3.14159);
        Assertions.assertEquals(double665, 34.409835269999995);
    }
    @Test
    public void test2118() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        boolean boolean245 = calculadora353.menor(100, 100);
        Assertions.assertEquals(boolean245, false);
        boolean boolean292 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean292, false);
        boolean boolean488 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean488, true);
        java.lang.String string848 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string848, "lorem");
    }
    @Test
    public void test2119() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int795 = calculadora353.somaInt(-500, -1000);
        Assertions.assertEquals(int795, -1500);
        boolean boolean900 = calculadora353.maior(1000, -500);
        Assertions.assertEquals(boolean900, true);
        boolean boolean970 = calculadora353.menor(-1000, 1000);
        Assertions.assertEquals(boolean970, true);
        java.lang.String string249 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string249, "go");
    }
    @Test
    public void test2120() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int514 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int514, 250000);
        double double701 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double701, -104.95);
        int int974 = calculadora353.subInt(250, -500);
        Assertions.assertEquals(int974, 750);
        boolean boolean295 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean295, true);
    }
    @Test
    public void test2121() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        double double471 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double471, 19.91454545454545);
        int int299 = calculadora353.divInt(1000, 1000);
        Assertions.assertEquals(int299, 1);
    }
    @Test
    public void test2122() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double447 = calculadora353.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double447, -0.8525000000000001);
        double double496 = calculadora353.subDouble(105.5, -105.5);
        Assertions.assertEquals(double496, 211.0);
        java.lang.String string7 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string7, "LOREM");
    }
    @Test
    public void test2123() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        boolean boolean939 = calculadora353.maior(0, -1000);
        Assertions.assertEquals(boolean939, true);
        int int874 = calculadora353.somaInt(-500, 1000);
        Assertions.assertEquals(int874, 500);
        int int16 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int16, -250);
    }
    @Test
    public void test2125() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double966 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double966, 0.0);
        int int724 = calculadora353.subInt(-1000, -250);
        Assertions.assertEquals(int724, -750);
        java.lang.String string844 = calculadora353.toLowCase(string67);
        Assertions.assertEquals(string844, string67);
    }
    @Test
    public void test2128() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean970 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean970, true);
        boolean boolean731 = calculadora353.maior(1000, 1000);
        Assertions.assertEquals(boolean731, false);
        int int245 = calculadora353.divInt(250, -1000);
        Assertions.assertEquals(int245, 0);
        double double364 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double364, -10.953);
        double double202 = calculadora353.divDouble(-105.5, 3.14159);
        Assertions.assertEquals(double202, -33.58172135765648);
    }
    @Test
    public void test2129() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        int int666 = calculadora353.mulInt(-100, -500);
        Assertions.assertEquals(int666, 50000);
        boolean boolean285 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean285, true);
        int int888 = calculadora353.subInt(1000, 250);
        Assertions.assertEquals(int888, 750);
        boolean boolean224 = calculadora353.maior(-1000, -1000);
        Assertions.assertEquals(boolean224, false);
    }
    @Test
    public void test2130() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
        boolean boolean117 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean117, true);
    }
    @Test
    public void test2131() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double442 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double442, 6.024150000000001);
        int int926 = calculadora353.somaInt(-100, -250);
        Assertions.assertEquals(int926, -350);
        double double649 = calculadora353.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double649, 1155.5415);
        int int654 = calculadora353.somaInt(1000, -250);
        Assertions.assertEquals(int654, 750);
    }
    @Test
    public void test2132() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean735 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean735, false);
        java.lang.String string844 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string844, "hi");
        boolean boolean583 = calculadora353.menor(500, 100);
        Assertions.assertEquals(boolean583, false);
        boolean boolean606 = calculadora353.and(boolean597, boolean735);
        Assertions.assertEquals(boolean606, false);
        boolean boolean456 = calculadora353.maior(500, 1000);
        Assertions.assertEquals(boolean456, false);
        boolean boolean201 = calculadora353.or(boolean606, true);
        Assertions.assertEquals(boolean201, true);
    }
    @Test
    public void test2133() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double351 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double351, Infinity);
        boolean boolean205 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean205, true);
        boolean boolean858 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean858, false);
    }
    @Test
    public void test2134() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int87 = calculadora353.mulInt(0, -250);
        Assertions.assertEquals(int87, 0);
        double double436 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double436, 0.0);
        boolean boolean775 = calculadora353.maior(-500, 500);
        Assertions.assertEquals(boolean775, false);
    }
    @Test
    public void test2135() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        boolean boolean50 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean50, true);
        boolean boolean696 = calculadora353.maior(250, 0);
        Assertions.assertEquals(boolean696, true);
        boolean boolean65 = calculadora353.maior(-1000, -100);
        Assertions.assertEquals(boolean65, false);
    }
    @Test
    public void test2136() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        int int940 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int940, 50000);
        double double142 = calculadora353.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double142, -1.0);
        boolean boolean579 = calculadora353.menor(-100, -500);
        Assertions.assertEquals(boolean579, false);
    }
    @Test
    public void test2137() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int514 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int514, 250000);
        double double701 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double701, -104.95);
        java.lang.String string668 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string668, "VALEU");
        java.lang.String string202 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string202, "NICE");
    }
    @Test
    public void test2138() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        int int837 = calculadora353.divInt(-1000, -500);
        Assertions.assertEquals(int837, 2);
        boolean boolean48 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean48, false);
    }
    @Test
    public void test2140() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean166 = calculadora353.and(true, boolean718);
        Assertions.assertEquals(boolean166, false);
        boolean boolean789 = calculadora353.maior(500, -100);
        Assertions.assertEquals(boolean789, true);
    }
    @Test
    public void test2142() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double361 = calculadora353.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double361, -102.35841);
        int int561 = calculadora353.mulInt(100, 0);
        Assertions.assertEquals(int561, 0);
        boolean boolean120 = calculadora353.or(false, boolean811);
        Assertions.assertEquals(boolean120, false);
        double double823 = calculadora353.divDouble(0.0, 3.14159);
        Assertions.assertEquals(double823, 0.0);
    }
    @Test
    public void test2145() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        double double904 = calculadora353.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double904, 1155.5415);
        double double375 = calculadora353.subDouble(0.0, 10.953);
        Assertions.assertEquals(double375, -10.953);
        boolean boolean694 = calculadora353.maior(100, 1000);
        Assertions.assertEquals(boolean694, false);
    }
    @Test
    public void test2146() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        java.lang.String string807 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string807, "LOREM");
        int int992 = calculadora353.subInt(-250, 1000);
        Assertions.assertEquals(int992, -1250);
        boolean boolean773 = calculadora353.menor(100, 1000);
        Assertions.assertEquals(boolean773, true);
    }
    @Test
    public void test2148() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        java.lang.String string561 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string561, "top");
        boolean boolean92 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean92, false);
        boolean boolean48 = calculadora353.maior(-100, 250);
        Assertions.assertEquals(boolean48, false);
        double double548 = calculadora353.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double548, 0.0);
    }
    @Test
    public void test2150() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        boolean boolean50 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean50, true);
        double double566 = calculadora353.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double566, 0.0);
        int int315 = calculadora353.mulInt(-100, 100);
        Assertions.assertEquals(int315, -10000);
    }
    @Test
    public void test2151() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double671 = calculadora353.divDouble(10.953, 1.99);
        Assertions.assertEquals(double671, 5.504020100502513);
    }
    @Test
    public void test2152() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double99 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double99, 0.029778104265402842);
        java.lang.String string377 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string377, "hello");
        java.lang.String string998 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string998, "ipsum");
        java.lang.String string903 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string903, "HELLO");
    }
    @Test
    public void test2153() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        int int141 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int141, -1500);
        java.lang.String string885 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string885, "VALEU");
    }
    @Test
    public void test2154() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean885 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean885, true);
        boolean boolean843 = calculadora353.menor(1000, 500);
        Assertions.assertEquals(boolean843, false);
        int int249 = calculadora353.somaInt(-1000, -100);
        Assertions.assertEquals(int249, -1100);
    }
    @Test
    public void test2155() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean735 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean735, false);
        boolean boolean408 = calculadora353.maior(-500, 250);
        Assertions.assertEquals(boolean408, false);
        double double89 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double89, 6.28318);
    }
    @Test
    public void test2157() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        boolean boolean950 = calculadora353.and(boolean906, false);
        Assertions.assertEquals(boolean950, false);
        boolean boolean461 = calculadora353.maior(100, -250);
        Assertions.assertEquals(boolean461, true);
        int int67 = calculadora353.divInt(1000, -500);
        Assertions.assertEquals(int67, -2);
    }
    @Test
    public void test2158() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean494 = calculadora353.menor(250, -100);
        Assertions.assertEquals(boolean494, false);
        double double588 = calculadora353.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double588, -14.09459);
        int int362 = calculadora353.somaInt(0, -250);
        Assertions.assertEquals(int362, -250);
    }
    @Test
    public void test2159() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        double double471 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double471, 19.91454545454545);
        int int299 = calculadora353.divInt(1000, 1000);
        Assertions.assertEquals(int299, 1);
        boolean boolean200 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean200, false);
    }
    @Test
    public void test2160() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        double double62 = calculadora353.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double62, 108.64159);
        int int524 = calculadora353.mulInt(0, -1000);
        Assertions.assertEquals(int524, 0);
        boolean boolean29 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean29, false);
        java.lang.String string746 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string746, "LOREM");
    }
    @Test
    public void test2161() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
        boolean boolean153 = calculadora353.menor(100, 0);
        Assertions.assertEquals(boolean153, false);
        boolean boolean886 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean886, true);
    }
    @Test
    public void test2162() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        double double388 = calculadora353.mulDouble(0.0, 0.55);
        Assertions.assertEquals(double388, 0.0);
        double double797 = calculadora353.somaDouble(1.99, 1.99);
        Assertions.assertEquals(double797, 3.98);
        int int84 = calculadora353.divInt(0, 1000);
        Assertions.assertEquals(int84, 0);
    }
    @Test
    public void test2163() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        int int666 = calculadora353.mulInt(-100, -500);
        Assertions.assertEquals(int666, 50000);
        int int700 = calculadora353.subInt(500, 250);
        Assertions.assertEquals(int700, 250);
    }
    @Test
    public void test2164() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean950 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean950, false);
        java.lang.String string456 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string456, "hello");
        java.lang.String string352 = calculadora353.toUpCase(string456);
        Assertions.assertEquals(string352, STRING456);
    }
    @Test
    public void test2165() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        boolean boolean230 = calculadora353.maior(-500, 100);
        Assertions.assertEquals(boolean230, false);
        int int738 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int738, -2);
    }
    @Test
    public void test2166() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        java.lang.String string701 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string701, "LOREM");
        boolean boolean808 = calculadora353.menor(1000, 0);
        Assertions.assertEquals(boolean808, false);
        int int656 = calculadora353.subInt(-500, -1000);
        Assertions.assertEquals(int656, 500);
        java.lang.String string908 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string908, "nice");
    }
    @Test
    public void test2169() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double788 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double788, 105.5);
        double double785 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double785, 94.547);
        java.lang.String string541 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string541, "TOP");
        double double590 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double590, 0.0);
    }
    @Test
    public void test2170() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        int int786 = calculadora353.divInt(-250, -100);
        Assertions.assertEquals(int786, 2);
        double double989 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double989, 0.029778104265402842);
        boolean boolean110 = calculadora353.menor(-250, 0);
        Assertions.assertEquals(boolean110, true);
    }
    @Test
    public void test2171() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int438 = calculadora353.somaInt(-100, -500);
        Assertions.assertEquals(int438, -600);
        java.lang.String string531 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string531, "NICE");
        boolean boolean384 = calculadora353.maior(250, -250);
        Assertions.assertEquals(boolean384, true);
    }
    @Test
    public void test2172() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        java.lang.String string64 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string64, "VALEU");
        int int297 = calculadora353.divInt(-100, -500);
        Assertions.assertEquals(int297, 0);
    }
    @Test
    public void test2175() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        double double858 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double858, Infinity);
        java.lang.String string53 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string53, "hello");
        double double882 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double882, -1.0);
        int int461 = calculadora353.subInt(500, -250);
        Assertions.assertEquals(int461, 750);
        boolean boolean591 = calculadora353.menor(500, 500);
        Assertions.assertEquals(boolean591, false);
    }
    @Test
    public void test2176() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
        java.lang.String string512 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string512, "NICE");
        double double638 = calculadora353.divDouble(10.953, 1.99);
        Assertions.assertEquals(double638, 5.504020100502513);
        double double179 = calculadora353.somaDouble(0.0, 0.55);
        Assertions.assertEquals(double179, 0.55);
    }
    @Test
    public void test2177() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        int int283 = calculadora353.mulInt(-250, 0);
        Assertions.assertEquals(int283, 0);
        double double190 = calculadora353.somaDouble(105.5, 0.55);
        Assertions.assertEquals(double190, 106.05);
    }
    @Test
    public void test2178() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        boolean boolean574 = calculadora353.or(boolean319, false);
        Assertions.assertEquals(boolean574, false);
        int int919 = calculadora353.somaInt(500, -250);
        Assertions.assertEquals(int919, 250);
        int int188 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int188, -100000);
        java.lang.String string827 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string827, "top");
        double double928 = calculadora353.divDouble(0.0, 0.55);
        Assertions.assertEquals(double928, 0.0);
    }
    @Test
    public void test2179() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
        java.lang.String string512 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string512, "NICE");
        double double638 = calculadora353.divDouble(10.953, 1.99);
        Assertions.assertEquals(double638, 5.504020100502513);
        java.lang.String string837 = calculadora353.toUpCase(string512);
        Assertions.assertEquals(string837, STRING512);
    }
    @Test
    public void test2180() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        java.lang.String string205 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string205, "LOREM");
        double double480 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double480, 1.0945);
        double double454 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double454, 1.0);
        java.lang.String string75 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string75, "valeu");
    }
    @Test
    public void test2181() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
        java.lang.String string512 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string512, "NICE");
        java.lang.String string802 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string802, "IPSUM");
        int int799 = calculadora353.subInt(100, 0);
        Assertions.assertEquals(int799, 100);
    }
    @Test
    public void test2184() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        java.lang.String string136 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string136, "lorem");
        int int898 = calculadora353.subInt(-1000, -1000);
        Assertions.assertEquals(int898, 0);
        double double45 = calculadora353.somaDouble(-105.5, 10.953);
        Assertions.assertEquals(double45, -94.547);
        boolean boolean330 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean330, false);
    }
    @Test
    public void test2185() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        boolean boolean273 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean273, true);
        int int779 = calculadora353.divInt(-500, -1000);
        Assertions.assertEquals(int779, 0);
    }
    @Test
    public void test2187() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        boolean boolean289 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean289, false);
        double double114 = calculadora353.mulDouble(10.953, 105.5);
        Assertions.assertEquals(double114, 1155.5415);
    }
    @Test
    public void test2188() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean494 = calculadora353.menor(250, -100);
        Assertions.assertEquals(boolean494, false);
        double double588 = calculadora353.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double588, -14.09459);
        boolean boolean552 = calculadora353.or(boolean124, boolean124);
        Assertions.assertEquals(boolean552, false);
    }
    @Test
    public void test2189() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        double double245 = calculadora353.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double245, -211.0);
    }
    @Test
    public void test2190() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        int int837 = calculadora353.divInt(-1000, -500);
        Assertions.assertEquals(int837, 2);
        double double838 = calculadora353.divDouble(3.14159, 10.953);
        Assertions.assertEquals(double838, 0.2868246142609331);
        java.lang.String string319 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string319, "valeu");
        double double388 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double388, 11.503);
    }
    @Test
    public void test2191() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        int int982 = calculadora353.somaInt(-100, 0);
        Assertions.assertEquals(int982, -100);
        int int4 = calculadora353.mulInt(-100, -250);
        Assertions.assertEquals(int4, 25000);
    }
    @Test
    public void test2193() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        java.lang.String string695 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string695, "nice");
        double double756 = calculadora353.somaDouble(-1.55, 10.953);
        Assertions.assertEquals(double756, 9.402999999999999);
    }
    @Test
    public void test2194() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double954 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double954, 6.28318);
        double double891 = calculadora353.divDouble(0.0, -105.5);
        Assertions.assertEquals(double891, -0.0);
        double double620 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double620, -10.953);
        boolean boolean233 = calculadora353.maior(-500, -100);
        Assertions.assertEquals(boolean233, false);
        int int221 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int221, 350);
    }
    @Test
    public void test2196() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double775 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double775, 6.28318);
        double double428 = calculadora353.mulDouble(-105.5, 3.14159);
        Assertions.assertEquals(double428, -331.437745);
        boolean boolean577 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean577, true);
        double double545 = calculadora353.subDouble(-1.55, 105.5);
        Assertions.assertEquals(double545, -107.05);
    }
    @Test
    public void test2197() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        boolean boolean598 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean598, false);
    }
    @Test
    public void test2198() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean288 = calculadora353.maior(500, -1000);
        Assertions.assertEquals(boolean288, true);
        java.lang.String string391 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string391, "IPSUM");
        int int612 = calculadora353.somaInt(1000, -250);
        Assertions.assertEquals(int612, 750);
    }
    @Test
    public void test2199() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        boolean boolean789 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean789, true);
        java.lang.String string200 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string200, "HI");
        boolean boolean552 = calculadora353.maior(-500, -250);
        Assertions.assertEquals(boolean552, false);
    }
    @Test
    public void test2200() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        java.lang.String string807 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string807, "LOREM");
        int int992 = calculadora353.subInt(-250, 1000);
        Assertions.assertEquals(int992, -1250);
        boolean boolean496 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean496, true);
        int int370 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int370, -150);
        int int61 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int61, 10);
    }
    @Test
    public void test2201() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        java.lang.String string369 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string369, "top");
    }
    @Test
    public void test2202() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean962 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean962, false);
        double double916 = calculadora353.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double916, 119.96820899999999);
        double double39 = calculadora353.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double39, -105.5);
        double double494 = calculadora353.divDouble(105.5, -1.55);
        Assertions.assertEquals(double494, -68.06451612903226);
    }
    @Test
    public void test2204() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        boolean boolean625 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean625, false);
        int int511 = calculadora353.mulInt(-100, -100);
        Assertions.assertEquals(int511, 10000);
        double double323 = calculadora353.somaDouble(1.99, 3.14159);
        Assertions.assertEquals(double323, 5.13159);
        int int693 = calculadora353.divInt(250, -1000);
        Assertions.assertEquals(int693, 0);
    }
    @Test
    public void test2205() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean962 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean962, false);
        double double916 = calculadora353.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double916, 119.96820899999999);
        double double39 = calculadora353.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double39, -105.5);
        double double494 = calculadora353.divDouble(105.5, -1.55);
        Assertions.assertEquals(double494, -68.06451612903226);
        boolean boolean835 = calculadora353.and(false, boolean962);
        Assertions.assertEquals(boolean835, false);
    }
    @Test
    public void test2206() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double273 = calculadora353.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double273, -4.8694645);
        int int686 = calculadora353.mulInt(-100, 1000);
        Assertions.assertEquals(int686, -100000);
    }
    @Test
    public void test2207() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        double double110 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double110, 0.0);
        boolean boolean784 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean784, false);
        java.lang.String string114 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string114, "top");
        double double758 = calculadora353.divDouble(0.55, 10.953);
        Assertions.assertEquals(double758, 0.0502145530904775);
    }
    @Test
    public void test2209() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        java.lang.String string634 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string634, "valeu");
        int int169 = calculadora353.mulInt(-250, 1000);
        Assertions.assertEquals(int169, -250000);
        boolean boolean755 = calculadora353.maior(500, 250);
        Assertions.assertEquals(boolean755, true);
    }
    @Test
    public void test2210() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double788 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double788, 105.5);
        double double785 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double785, 94.547);
        int int191 = calculadora353.somaInt(250, 250);
        Assertions.assertEquals(int191, 500);
        double double705 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double705, -34.409835269999995);
    }
    @Test
    public void test2212() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        int int538 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int538, 600);
        java.lang.String string517 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string517, "NICE");
        int int945 = calculadora353.subInt(500, -500);
        Assertions.assertEquals(int945, 1000);
        java.lang.String string380 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string380, "valeu");
    }
    @Test
    public void test2213() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        boolean boolean574 = calculadora353.or(boolean319, false);
        Assertions.assertEquals(boolean574, false);
        int int919 = calculadora353.somaInt(500, -250);
        Assertions.assertEquals(int919, 250);
        int int188 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int188, -100000);
        int int770 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int770, 250);
        java.lang.String string189 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string189, "hello");
    }
    @Test
    public void test2214() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        int int926 = calculadora353.divInt(0, 1000);
        Assertions.assertEquals(int926, 0);
        boolean boolean734 = calculadora353.maior(-100, -100);
        Assertions.assertEquals(boolean734, false);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
    }
    @Test
    public void test2215() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean494 = calculadora353.menor(250, -100);
        Assertions.assertEquals(boolean494, false);
        double double588 = calculadora353.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double588, -14.09459);
        java.lang.String string348 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string348, "TOP");
    }
    @Test
    public void test2217() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        java.lang.String string889 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string889, "VALEU");
        boolean boolean757 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean757, true);
        boolean boolean702 = calculadora353.maior(100, 100);
        Assertions.assertEquals(boolean702, false);
        boolean boolean386 = calculadora353.menor(500, 500);
        Assertions.assertEquals(boolean386, false);
        int int331 = calculadora353.divInt(-250, -250);
        Assertions.assertEquals(int331, 1);
        java.lang.String string79 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string79, "ipsum");
    }
    @Test
    public void test2218() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        boolean boolean359 = calculadora353.maior(-100, -500);
        Assertions.assertEquals(boolean359, true);
        double double280 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double280, -0.005213270142180095);
        java.lang.String string497 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string497, "hi");
    }
    @Test
    public void test2219() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string446 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string446, "VALEU");
        java.lang.String string991 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string991, "nice");
        double double719 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double719, -0.005213270142180095);
        boolean boolean909 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean909, false);
    }
    @Test
    public void test2221() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        java.lang.String string466 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string466, "VALEU");
        boolean boolean921 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean921, false);
    }
    @Test
    public void test2222() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        int int555 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int555, -1250);
        boolean boolean13 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean13, true);
    }
    @Test
    public void test2223() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double966 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double966, 0.0);
        java.lang.String string764 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string764, "nice");
        boolean boolean360 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean360, false);
    }
    @Test
    public void test2224() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean779 = calculadora353.menor(-250, -1000);
        Assertions.assertEquals(boolean779, false);
        int int237 = calculadora353.subInt(-1000, -1000);
        Assertions.assertEquals(int237, 0);
    }
    @Test
    public void test2225() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        boolean boolean713 = calculadora353.menor(100, 100);
        Assertions.assertEquals(boolean713, false);
        double double288 = calculadora353.subDouble(10.953, 3.14159);
        Assertions.assertEquals(double288, 7.8114099999999995);
        boolean boolean472 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean472, true);
    }
    @Test
    public void test2227() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        boolean boolean694 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean694, false);
        double double798 = calculadora353.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double798, -1.55);
        boolean boolean243 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean243, false);
    }
    @Test
    public void test2229() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        java.lang.String string409 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string409, "NICE");
        boolean boolean741 = calculadora353.maior(-500, 1000);
        Assertions.assertEquals(boolean741, false);
    }
    @Test
    public void test2230() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean737 = calculadora353.and(true, boolean567);
        Assertions.assertEquals(boolean737, false);
        double double563 = calculadora353.divDouble(-1.55, 1.99);
        Assertions.assertEquals(double563, -0.7788944723618091);
    }
    @Test
    public void test2231() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        boolean boolean872 = calculadora353.or(true, boolean562);
        Assertions.assertEquals(boolean872, true);
    }
    @Test
    public void test2232() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double775 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double775, 6.28318);
        int int899 = calculadora353.somaInt(-100, 0);
        Assertions.assertEquals(int899, -100);
    }
    @Test
    public void test2233() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        double double904 = calculadora353.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double904, 1155.5415);
        double double375 = calculadora353.subDouble(0.0, 10.953);
        Assertions.assertEquals(double375, -10.953);
        boolean boolean694 = calculadora353.maior(100, 1000);
        Assertions.assertEquals(boolean694, false);
        int int408 = calculadora353.somaInt(100, 250);
        Assertions.assertEquals(int408, 350);
    }
    @Test
    public void test2234() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        double double753 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double753, 0.029778104265402842);
    }
    @Test
    public void test2235() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        boolean boolean196 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean196, false);
        java.lang.String string621 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string621, "lorem");
    }
    @Test
    public void test2236() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string446 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string446, "VALEU");
        java.lang.String string991 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string991, "nice");
        double double719 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double719, -0.005213270142180095);
        int int450 = calculadora353.divInt(100, -100);
        Assertions.assertEquals(int450, -1);
        boolean boolean102 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean102, false);
    }
    @Test
    public void test2238() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        double double294 = calculadora353.somaDouble(-1.55, 3.14159);
        Assertions.assertEquals(double294, 1.5915899999999998);
    }
    @Test
    public void test2239() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
        double double739 = calculadora353.mulDouble(-105.5, -105.5);
        Assertions.assertEquals(double739, 11130.25);
    }
    @Test
    public void test2240() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double115 = calculadora353.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double115, 163.525);
        boolean boolean75 = calculadora353.menor(500, 0);
        Assertions.assertEquals(boolean75, false);
        java.lang.String string360 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string360, "ipsum");
        boolean boolean34 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean34, true);
        double double240 = calculadora353.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double240, -119.96820899999999);
    }
    @Test
    public void test2242() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        double double163 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double163, -3.54);
        int int130 = calculadora353.mulInt(250, -1000);
        Assertions.assertEquals(int130, -250000);
    }
    @Test
    public void test2244() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        int int730 = calculadora353.mulInt(1000, 250);
        Assertions.assertEquals(int730, 250000);
        boolean boolean533 = calculadora353.menor(-250, 500);
        Assertions.assertEquals(boolean533, true);
        double double674 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double674, 2.59159);
    }
    @Test
    public void test2245() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        boolean boolean195 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean195, false);
    }
    @Test
    public void test2246() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int86 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int86, -2);
        java.lang.String string102 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string102, "HI");
        int int926 = calculadora353.somaInt(1000, -250);
        Assertions.assertEquals(int926, 750);
        double double215 = calculadora353.subDouble(-1.55, 105.5);
        Assertions.assertEquals(double215, -107.05);
    }
    @Test
    public void test2247() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        java.lang.String string634 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string634, "valeu");
        int int169 = calculadora353.mulInt(-250, 1000);
        Assertions.assertEquals(int169, -250000);
        double double343 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double343, -1155.5415);
    }
    @Test
    public void test2248() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean242 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean242, true);
        int int984 = calculadora353.somaInt(1000, 1000);
        Assertions.assertEquals(int984, 2000);
        double double864 = calculadora353.mulDouble(-10.953, -105.5);
        Assertions.assertEquals(double864, 1155.5415);
        int int424 = calculadora353.divInt(-100, -500);
        Assertions.assertEquals(int424, 0);
    }
    @Test
    public void test2250() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean827 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean827, false);
        boolean boolean522 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean522, false);
        int int108 = calculadora353.subInt(-100, 250);
        Assertions.assertEquals(int108, -350);
        java.lang.String string275 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string275, "hello");
        double double704 = calculadora353.divDouble(10.953, -10.953);
        Assertions.assertEquals(double704, -1.0);
    }
    @Test
    public void test2251() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        double double69 = calculadora353.subDouble(0.0, 0.0);
        Assertions.assertEquals(double69, 0.0);
        double double242 = calculadora353.divDouble(0.0, 0.55);
        Assertions.assertEquals(double242, 0.0);
        int int735 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int735, -150);
    }
    @Test
    public void test2252() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        double double462 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double462, -1155.5415);
        boolean boolean164 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean164, true);
        int int568 = calculadora353.mulInt(250, -500);
        Assertions.assertEquals(int568, -125000);
    }
    @Test
    public void test2253() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double658 = calculadora353.divDouble(105.5, 0.55);
        Assertions.assertEquals(double658, 191.8181818181818);
        boolean boolean880 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean880, true);
        int int265 = calculadora353.somaInt(1000, -250);
        Assertions.assertEquals(int265, 750);
    }
    @Test
    public void test2254() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean222 = calculadora353.menor(-250, 0);
        Assertions.assertEquals(boolean222, true);
        boolean boolean969 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean969, true);
        java.lang.String string285 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string285, "lorem");
        boolean boolean631 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean631, true);
    }
    @Test
    public void test2255() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        boolean boolean440 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean440, true);
        double double653 = calculadora353.mulDouble(-1.55, -10.953);
        Assertions.assertEquals(double653, 16.977149999999998);
        boolean boolean343 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean343, false);
    }
    @Test
    public void test2257() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        int int468 = calculadora353.somaInt(-100, 250);
        Assertions.assertEquals(int468, 150);
        int int309 = calculadora353.subInt(-1000, 100);
        Assertions.assertEquals(int309, -1100);
        int int179 = calculadora353.somaInt(-1000, 250);
        Assertions.assertEquals(int179, -750);
    }
    @Test
    public void test2260() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        boolean boolean289 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean289, false);
        double double508 = calculadora353.subDouble(0.0, 1.99);
        Assertions.assertEquals(double508, -1.99);
    }
    @Test
    public void test2261() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        double double525 = calculadora353.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double525, 0.0);
        double double61 = calculadora353.divDouble(-10.953, -105.5);
        Assertions.assertEquals(double61, 0.10381990521327014);
        int int112 = calculadora353.subInt(-1000, -1000);
        Assertions.assertEquals(int112, 0);
    }
    @Test
    public void test2262() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
        boolean boolean802 = calculadora353.or(boolean825, false);
        Assertions.assertEquals(boolean802, false);
        java.lang.String string699 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string699, "top");
        boolean boolean839 = calculadora353.maior(500, 0);
        Assertions.assertEquals(boolean839, true);
        int int296 = calculadora353.somaInt(500, 100);
        Assertions.assertEquals(int296, 600);
    }
    @Test
    public void test2263() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        double double462 = calculadora353.subDouble(3.14159, 105.5);
        Assertions.assertEquals(double462, -102.35841);
        int int803 = calculadora353.subInt(0, -1000);
        Assertions.assertEquals(int803, 1000);
        double double254 = calculadora353.divDouble(105.5, 1.99);
        Assertions.assertEquals(double254, 53.015075376884425);
    }
    @Test
    public void test2264() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        int int696 = calculadora353.divInt(-250, -1000);
        Assertions.assertEquals(int696, 0);
        double double430 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double430, -58.025000000000006);
        double double948 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double948, -6.024150000000001);
    }
    @Test
    public void test2265() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
        boolean boolean911 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean911, false);
        double double782 = calculadora353.subDouble(1.99, 1.99);
        Assertions.assertEquals(double782, 0.0);
        double double822 = calculadora353.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double822, 0.0);
    }
    @Test
    public void test2266() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double658 = calculadora353.divDouble(105.5, 0.55);
        Assertions.assertEquals(double658, 191.8181818181818);
        boolean boolean880 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean880, true);
        boolean boolean809 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean809, true);
    }
    @Test
    public void test2267() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
        int int718 = calculadora353.mulInt(0, -1000);
        Assertions.assertEquals(int718, 0);
    }
    @Test
    public void test2268() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean242 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean242, true);
        int int984 = calculadora353.somaInt(1000, 1000);
        Assertions.assertEquals(int984, 2000);
        double double864 = calculadora353.mulDouble(-10.953, -105.5);
        Assertions.assertEquals(double864, 1155.5415);
        java.lang.String string344 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string344, "top");
    }
    @Test
    public void test2269() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        java.lang.String string793 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string793, "TOP");
        int int212 = calculadora353.somaInt(0, -100);
        Assertions.assertEquals(int212, -100);
        double double56 = calculadora353.divDouble(-10.953, 0.0);
        Assertions.assertEquals(double56, -Infinity);
    }
    @Test
    public void test2270() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        int int311 = calculadora353.somaInt(500, 0);
        Assertions.assertEquals(int311, 500);
        boolean boolean259 = calculadora353.and(boolean597, true);
        Assertions.assertEquals(boolean259, false);
        boolean boolean170 = calculadora353.and(boolean718, true);
        Assertions.assertEquals(boolean170, false);
    }
    @Test
    public void test2271() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
        double double96 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double96, 106.05);
        boolean boolean240 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean240, true);
        int int617 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int617, -2);
        double double25 = calculadora353.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double25, -0.8525000000000001);
    }
    @Test
    public void test2272() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        int int115 = calculadora353.mulInt(250, -1000);
        Assertions.assertEquals(int115, -250000);
        double double373 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double373, -104.95);
        boolean boolean65 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean65, false);
    }
    @Test
    public void test2273() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double285 = calculadora353.divDouble(0.0, -10.953);
        Assertions.assertEquals(double285, -0.0);
        double double951 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double951, 2.59159);
    }
    @Test
    public void test2274() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        double double858 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double858, Infinity);
        int int292 = calculadora353.subInt(-100, 250);
        Assertions.assertEquals(int292, -350);
    }
    @Test
    public void test2275() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        java.lang.String string768 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string768, "valeu");
        double double687 = calculadora353.somaDouble(-105.5, -105.5);
        Assertions.assertEquals(double687, -211.0);
    }
    @Test
    public void test2276() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        boolean boolean251 = calculadora353.menor(-100, 100);
        Assertions.assertEquals(boolean251, true);
        int int436 = calculadora353.subInt(500, 1000);
        Assertions.assertEquals(int436, -500);
        boolean boolean525 = calculadora353.and(boolean60, false);
        Assertions.assertEquals(boolean525, false);
        int int221 = calculadora353.mulInt(250, -1000);
        Assertions.assertEquals(int221, -250000);
    }
    @Test
    public void test2277() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double351 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double351, Infinity);
        boolean boolean205 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean205, true);
        double double860 = calculadora353.somaDouble(10.953, 10.953);
        Assertions.assertEquals(double860, 21.906);
    }
    @Test
    public void test2279() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
        java.lang.String string149 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string149, "go");
        int int137 = calculadora353.subInt(-1000, 0);
        Assertions.assertEquals(int137, -1000);
        boolean boolean318 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean318, false);
    }
    @Test
    public void test2280() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        boolean boolean296 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean296, false);
    }
    @Test
    public void test2281() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        int int538 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int538, 600);
        double double369 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double369, 58.025000000000006);
        boolean boolean651 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean651, false);
        java.lang.String string413 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string413, "VALEU");
    }
    @Test
    public void test2283() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
        int int320 = calculadora353.subInt(100, 1000);
        Assertions.assertEquals(int320, -900);
        boolean boolean141 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean141, true);
        double double797 = calculadora353.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double797, 1155.5415);
        boolean boolean516 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean516, true);
        double double883 = calculadora353.divDouble(105.5, 0.55);
        Assertions.assertEquals(double883, 191.8181818181818);
    }
    @Test
    public void test2284() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        int int910 = calculadora353.mulInt(-500, -100);
        Assertions.assertEquals(int910, 50000);
        double double418 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double418, 58.025000000000006);
    }
    @Test
    public void test2285() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        double double648 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double648, -58.025000000000006);
    }
    @Test
    public void test2286() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        boolean boolean954 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean954, true);
    }
    @Test
    public void test2287() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double961 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double961, -8.963);
        java.lang.String string355 = calculadora353.toUpCase(string604);
        Assertions.assertEquals(string355, STRING604);
        double double873 = calculadora353.subDouble(0.55, 0.55);
        Assertions.assertEquals(double873, 0.0);
    }
    @Test
    public void test2289() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        int int881 = calculadora353.mulInt(100, 250);
        Assertions.assertEquals(int881, 25000);
        double double225 = calculadora353.subDouble(10.953, 0.0);
        Assertions.assertEquals(double225, 10.953);
    }
    @Test
    public void test2290() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        java.lang.String string560 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string560, "TOP");
        double double974 = calculadora353.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double974, 1.5786884422110552);
        boolean boolean145 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean145, true);
        double double708 = calculadora353.somaDouble(-1.55, 105.5);
        Assertions.assertEquals(double708, 103.95);
    }
    @Test
    public void test2291() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean726 = calculadora353.menor(-250, 500);
        Assertions.assertEquals(boolean726, true);
        double double621 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double621, 103.51);
    }
    @Test
    public void test2292() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double438 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double438, 0.0);
    }
    @Test
    public void test2293() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        double double705 = calculadora353.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double705, 0.43999999999999995);
    }
    @Test
    public void test2295() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int642 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int642, -100000);
        java.lang.String string123 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string123, "TOP");
        int int400 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int400, -1000);
    }
    @Test
    public void test2296() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean712 = calculadora353.maior(-100, 1000);
        Assertions.assertEquals(boolean712, false);
        boolean boolean6 = calculadora353.maior(1000, 1000);
        Assertions.assertEquals(boolean6, false);
    }
    @Test
    public void test2297() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        boolean boolean391 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean391, false);
        double double870 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double870, 0.0);
        java.lang.String string120 = calculadora353.toLowCase(string603);
        Assertions.assertEquals(string120, string603);
    }
    @Test
    public void test2298() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        boolean boolean50 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean50, true);
        boolean boolean696 = calculadora353.maior(250, 0);
        Assertions.assertEquals(boolean696, true);
        boolean boolean65 = calculadora353.maior(-1000, -100);
        Assertions.assertEquals(boolean65, false);
        double double207 = calculadora353.somaDouble(1.99, 0.55);
        Assertions.assertEquals(double207, 2.54);
    }
    @Test
    public void test2299() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        int int860 = calculadora353.subInt(-500, -100);
        Assertions.assertEquals(int860, -400);
        boolean boolean775 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean775, false);
    }
    @Test
    public void test2300() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
        int int717 = calculadora353.divInt(500, 100);
        Assertions.assertEquals(int717, 5);
        int int6 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int6, 0);
        boolean boolean937 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean937, true);
    }
    @Test
    public void test2301() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int519 = calculadora353.divInt(250, 1000);
        Assertions.assertEquals(int519, 0);
        double double540 = calculadora353.divDouble(-1.55, 0.0);
        Assertions.assertEquals(double540, -Infinity);
        int int239 = calculadora353.subInt(250, 100);
        Assertions.assertEquals(int239, 150);
        double double631 = calculadora353.divDouble(-105.5, 3.14159);
        Assertions.assertEquals(double631, -33.58172135765648);
    }
    @Test
    public void test2302() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        double double471 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double471, 19.91454545454545);
        int int299 = calculadora353.divInt(1000, 1000);
        Assertions.assertEquals(int299, 1);
        boolean boolean200 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean200, false);
        double double52 = calculadora353.subDouble(-1.55, 105.5);
        Assertions.assertEquals(double52, -107.05);
    }
    @Test
    public void test2303() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean850 = calculadora353.menor(250, 100);
        Assertions.assertEquals(boolean850, false);
        boolean boolean289 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean289, true);
        double double54 = calculadora353.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double54, -1.55);
    }
    @Test
    public void test2304() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean970 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean970, true);
        double double204 = calculadora353.subDouble(10.953, 10.953);
        Assertions.assertEquals(double204, 0.0);
    }
    @Test
    public void test2305() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        boolean boolean872 = calculadora353.or(true, boolean562);
        Assertions.assertEquals(boolean872, true);
        int int783 = calculadora353.mulInt(-1000, 0);
        Assertions.assertEquals(int783, 0);
    }
    @Test
    public void test2307() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
        boolean boolean277 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean277, false);
        int int383 = calculadora353.mulInt(-500, 0);
        Assertions.assertEquals(int383, 0);
    }
    @Test
    public void test2308() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        int int730 = calculadora353.mulInt(1000, 250);
        Assertions.assertEquals(int730, 250000);
        boolean boolean946 = calculadora353.menor(500, 0);
        Assertions.assertEquals(boolean946, false);
    }
    @Test
    public void test2309() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        java.lang.String string954 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string954, "nice");
        double double30 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double30, -1.44);
        boolean boolean573 = calculadora353.maior(500, 1000);
        Assertions.assertEquals(boolean573, false);
    }
    @Test
    public void test2310() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        double double778 = calculadora353.subDouble(0.55, 0.0);
        Assertions.assertEquals(double778, 0.55);
    }
    @Test
    public void test2312() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        double double298 = calculadora353.divDouble(-1.55, 3.14159);
        Assertions.assertEquals(double298, -0.4933807403257586);
        double double732 = calculadora353.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double732, -0.0);
        int int466 = calculadora353.somaInt(0, 100);
        Assertions.assertEquals(int466, 100);
    }
    @Test
    public void test2313() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double903 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double903, -10.953);
        boolean boolean785 = calculadora353.menor(-250, -1000);
        Assertions.assertEquals(boolean785, false);
        boolean boolean743 = calculadora353.menor(1000, -250);
        Assertions.assertEquals(boolean743, false);
        boolean boolean706 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean706, false);
        java.lang.String string715 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string715, "lorem");
        boolean boolean81 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean81, false);
    }
    @Test
    public void test2314() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        int int659 = calculadora353.divInt(-250, 100);
        Assertions.assertEquals(int659, -2);
    }
    @Test
    public void test2315() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean597 = calculadora353.maior(100, -100);
        Assertions.assertEquals(boolean597, true);
        double double491 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double491, -209.945);
        double double845 = calculadora353.divDouble(3.14159, -105.5);
        Assertions.assertEquals(double845, -0.029778104265402842);
        java.lang.String string693 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string693, "nice");
        java.lang.String string859 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string859, "hi");
        boolean boolean674 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean674, false);
    }
    @Test
    public void test2316() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        int int837 = calculadora353.divInt(-1000, -500);
        Assertions.assertEquals(int837, 2);
        double double838 = calculadora353.divDouble(3.14159, 10.953);
        Assertions.assertEquals(double838, 0.2868246142609331);
        boolean boolean291 = calculadora353.menor(0, 100);
        Assertions.assertEquals(boolean291, true);
    }
    @Test
    public void test2317() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        java.lang.String string954 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string954, "nice");
        double double30 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double30, -1.44);
        boolean boolean573 = calculadora353.maior(500, 1000);
        Assertions.assertEquals(boolean573, false);
        boolean boolean702 = calculadora353.menor(-1000, -500);
        Assertions.assertEquals(boolean702, true);
    }
    @Test
    public void test2318() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        double double583 = calculadora353.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double583, 0.6334372085472643);
        double double760 = calculadora353.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double760, -9.632064274627956);
    }
    @Test
    public void test2319() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        double double686 = calculadora353.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double686, 119.96820899999999);
    }
    @Test
    public void test2320() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double961 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double961, -8.963);
        boolean boolean118 = calculadora353.or(true, boolean747);
        Assertions.assertEquals(boolean118, true);
        double double139 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double139, 6.024150000000001);
        boolean boolean140 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean140, true);
    }
    @Test
    public void test2322() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        int int141 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int141, -1500);
        java.lang.String string885 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string885, "VALEU");
        double double600 = calculadora353.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double600, -14.09459);
    }
    @Test
    public void test2324() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        int int209 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int209, 25000);
        boolean boolean284 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean284, true);
        double double486 = calculadora353.somaDouble(-105.5, 10.953);
        Assertions.assertEquals(double486, -94.547);
        double double805 = calculadora353.subDouble(3.14159, 10.953);
        Assertions.assertEquals(double805, -7.8114099999999995);
    }
    @Test
    public void test2325() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        int int391 = calculadora353.subInt(500, 250);
        Assertions.assertEquals(int391, 250);
    }
    @Test
    public void test2326() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        double double761 = calculadora353.divDouble(10.953, 0.0);
        Assertions.assertEquals(double761, Infinity);
        java.lang.String string472 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string472, "valeu");
    }
    @Test
    public void test2327() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        int int786 = calculadora353.divInt(-250, -100);
        Assertions.assertEquals(int786, 2);
        int int706 = calculadora353.somaInt(100, 500);
        Assertions.assertEquals(int706, 600);
        boolean boolean802 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean802, true);
    }
    @Test
    public void test2328() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean410 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean410, true);
        double double914 = calculadora353.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double914, 0.0);
        boolean boolean521 = calculadora353.or(false, boolean815);
        Assertions.assertEquals(boolean521, false);
    }
    @Test
    public void test2329() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double351 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double351, Infinity);
        java.lang.String string770 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string770, "lorem");
        boolean boolean644 = calculadora353.maior(-1000, 500);
        Assertions.assertEquals(boolean644, false);
    }
    @Test
    public void test2330() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean962 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean962, false);
        double double916 = calculadora353.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double916, 119.96820899999999);
        double double39 = calculadora353.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double39, -105.5);
        int int364 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int364, -250000);
        int int472 = calculadora353.subInt(250, 1000);
        Assertions.assertEquals(int472, -750);
    }
    @Test
    public void test2331() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
        java.lang.String string2 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string2, "hello");
        java.lang.String string160 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string160, "GO");
        java.lang.String string61 = calculadora353.toLowCase(string160);
        Assertions.assertEquals(string61, string160);
    }
    @Test
    public void test2332() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        java.lang.String string564 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string564, string466);
        java.lang.String string236 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string236, "top");
        boolean boolean862 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean862, false);
    }
    @Test
    public void test2333() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        java.lang.String string560 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string560, "TOP");
        double double974 = calculadora353.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double974, 1.5786884422110552);
        java.lang.String string949 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string949, string466);
        int int682 = calculadora353.subInt(-100, 500);
        Assertions.assertEquals(int682, -600);
    }
    @Test
    public void test2334() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        boolean boolean440 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean440, true);
        double double653 = calculadora353.mulDouble(-1.55, -10.953);
        Assertions.assertEquals(double653, 16.977149999999998);
        double double76 = calculadora353.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double76, 6.2517641);
    }
    @Test
    public void test2335() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        int int468 = calculadora353.somaInt(-100, 250);
        Assertions.assertEquals(int468, 150);
        int int309 = calculadora353.subInt(-1000, 100);
        Assertions.assertEquals(int309, -1100);
        int int179 = calculadora353.somaInt(-1000, 250);
        Assertions.assertEquals(int179, -750);
        double double84 = calculadora353.mulDouble(10.953, 1.99);
        Assertions.assertEquals(double84, 21.79647);
    }
    @Test
    public void test2336() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        double double69 = calculadora353.subDouble(0.0, 0.0);
        Assertions.assertEquals(double69, 0.0);
        double double110 = calculadora353.mulDouble(-1.55, -1.55);
        Assertions.assertEquals(double110, 2.4025000000000003);
        int int671 = calculadora353.mulInt(-1000, -1000);
        Assertions.assertEquals(int671, 1000000);
    }
    @Test
    public void test2337() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        java.lang.String string254 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string254, "IPSUM");
    }
    @Test
    public void test2338() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean700 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean700, false);
        int int58 = calculadora353.divInt(0, 500);
        Assertions.assertEquals(int58, 0);
        boolean boolean660 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean660, true);
    }
    @Test
    public void test2342() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        java.lang.String string793 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string793, "TOP");
        int int212 = calculadora353.somaInt(0, -100);
        Assertions.assertEquals(int212, -100);
        boolean boolean569 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean569, false);
        java.lang.String string542 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string542, "LOREM");
        boolean boolean31 = calculadora353.or(boolean569, true);
        Assertions.assertEquals(boolean31, true);
    }
    @Test
    public void test2343() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean137 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean137, false);
        java.lang.String string432 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string432, "HI");
        int int926 = calculadora353.mulInt(-1000, -500);
        Assertions.assertEquals(int926, 500000);
    }
    @Test
    public void test2344() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        boolean boolean499 = calculadora353.menor(250, 500);
        Assertions.assertEquals(boolean499, true);
        double double654 = calculadora353.somaDouble(3.14159, 10.953);
        Assertions.assertEquals(double654, 14.09459);
    }
    @Test
    public void test2345() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean222 = calculadora353.menor(-250, 0);
        Assertions.assertEquals(boolean222, true);
        boolean boolean969 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean969, true);
        boolean boolean459 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean459, false);
        java.lang.String string127 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string127, "VALEU");
    }
    @Test
    public void test2346() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean68 = calculadora353.menor(1000, -1000);
        Assertions.assertEquals(boolean68, false);
        double double983 = calculadora353.divDouble(0.0, 0.0);
        Assertions.assertEquals(double983, NaN);
        int int835 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int835, -1250);
    }
    @Test
    public void test2347() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
        boolean boolean259 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean259, true);
        boolean boolean18 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean18, false);
        java.lang.String string904 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string904, "nice");
        boolean boolean921 = calculadora353.maior(-1000, -500);
        Assertions.assertEquals(boolean921, false);
    }
    @Test
    public void test2348() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean270 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean270, false);
    }
    @Test
    public void test2349() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        int int786 = calculadora353.divInt(-250, -100);
        Assertions.assertEquals(int786, 2);
        int int828 = calculadora353.mulInt(0, 250);
        Assertions.assertEquals(int828, 0);
        java.lang.String string382 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string382, "TOP");
    }
    @Test
    public void test2351() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        double double866 = calculadora353.subDouble(3.14159, 105.5);
        Assertions.assertEquals(double866, -102.35841);
        int int972 = calculadora353.somaInt(250, -1000);
        Assertions.assertEquals(int972, -750);
    }
    @Test
    public void test2352() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int104 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int104, -125000);
        int int150 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int150, -25000);
        java.lang.String string426 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string426, "valeu");
        double double506 = calculadora353.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double506, 1.7278745);
        int int321 = calculadora353.divInt(-500, 1000);
        Assertions.assertEquals(int321, 0);
    }
    @Test
    public void test2353() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        boolean boolean137 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean137, false);
        boolean boolean527 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean527, false);
        boolean boolean274 = calculadora353.menor(100, -500);
        Assertions.assertEquals(boolean274, false);
    }
    @Test
    public void test2354() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        double double375 = calculadora353.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double375, 0.0);
        boolean boolean913 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean913, false);
    }
    @Test
    public void test2355() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        boolean boolean478 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean478, false);
        double double593 = calculadora353.somaDouble(10.953, 105.5);
        Assertions.assertEquals(double593, 116.453);
    }
    @Test
    public void test2356() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        int int666 = calculadora353.mulInt(-100, -500);
        Assertions.assertEquals(int666, 50000);
        boolean boolean285 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean285, true);
        int int933 = calculadora353.divInt(250, 100);
        Assertions.assertEquals(int933, 2);
    }
    @Test
    public void test2357() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        int int212 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int212, -100000);
        int int183 = calculadora353.subInt(1000, 1000);
        Assertions.assertEquals(int183, 0);
        double double433 = calculadora353.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double433, 6.2517641);
        int int197 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int197, -750);
    }
    @Test
    public void test2358() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean516 = calculadora353.maior(-1000, -1000);
        Assertions.assertEquals(boolean516, false);
        java.lang.String string581 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string581, "hello");
    }
    @Test
    public void test2359() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double638 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double638, -1.44);
        int int994 = calculadora353.mulInt(500, -100);
        Assertions.assertEquals(int994, -50000);
    }
    @Test
    public void test2360() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean513 = calculadora353.maior(-500, -250);
        Assertions.assertEquals(boolean513, false);
        boolean boolean296 = calculadora353.menor(1000, 0);
        Assertions.assertEquals(boolean296, false);
    }
    @Test
    public void test2362() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        boolean boolean625 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean625, false);
        java.lang.String string112 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string112, "IPSUM");
    }
    @Test
    public void test2363() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double788 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double788, 105.5);
        double double785 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double785, 94.547);
        int int960 = calculadora353.subInt(500, -500);
        Assertions.assertEquals(int960, 1000);
        int int253 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int253, -100000);
    }
    @Test
    public void test2364() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int278 = calculadora353.subInt(500, 500);
        Assertions.assertEquals(int278, 0);
        boolean boolean86 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean86, false);
        double double562 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double562, -1.0);
        double double925 = calculadora353.somaDouble(0.55, 1.99);
        Assertions.assertEquals(double925, 2.54);
    }
    @Test
    public void test2365() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double638 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double638, -1.44);
        boolean boolean582 = calculadora353.maior(-250, -100);
        Assertions.assertEquals(boolean582, false);
        int int813 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int813, -2);
        int int682 = calculadora353.subInt(0, -100);
        Assertions.assertEquals(int682, 100);
    }
    @Test
    public void test2366() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean999 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean999, true);
        boolean boolean770 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean770, false);
        java.lang.String string314 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string314, "HI");
        java.lang.String string356 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string356, "GO");
        java.lang.String string232 = calculadora353.toUpCase(string314);
        Assertions.assertEquals(string232, STRING314);
        double double152 = calculadora353.somaDouble(-10.953, 3.14159);
        Assertions.assertEquals(double152, -7.8114099999999995);
    }
    @Test
    public void test2368() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean341 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean341, true);
        int int70 = calculadora353.somaInt(-500, 250);
        Assertions.assertEquals(int70, -250);
        boolean boolean196 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean196, true);
        int int345 = calculadora353.somaInt(-1000, 500);
        Assertions.assertEquals(int345, -500);
    }
    @Test
    public void test2370() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        boolean boolean24 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean24, true);
        double double825 = calculadora353.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double825, 108.64159);
        boolean boolean341 = calculadora353.maior(-1000, -1000);
        Assertions.assertEquals(boolean341, false);
    }
    @Test
    public void test2371() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        java.lang.String string728 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string728, "HELLO");
        boolean boolean853 = calculadora353.menor(0, 1000);
        Assertions.assertEquals(boolean853, true);
        int int366 = calculadora353.divInt(100, 100);
        Assertions.assertEquals(int366, 1);
    }
    @Test
    public void test2372() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        int int600 = calculadora353.mulInt(-100, -250);
        Assertions.assertEquals(int600, 25000);
    }
    @Test
    public void test2373() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double325 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double325, -3.54);
        double double759 = calculadora353.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double759, -0.8525000000000001);
    }
    @Test
    public void test2374() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean999 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean999, true);
        java.lang.String string530 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string530, "TOP");
    }
    @Test
    public void test2376() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean140 = calculadora353.menor(-250, 500);
        Assertions.assertEquals(boolean140, true);
        int int251 = calculadora353.mulInt(-100, 1000);
        Assertions.assertEquals(int251, -100000);
    }
    @Test
    public void test2377() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int278 = calculadora353.subInt(500, 500);
        Assertions.assertEquals(int278, 0);
        int int711 = calculadora353.mulInt(-500, -250);
        Assertions.assertEquals(int711, 125000);
        int int737 = calculadora353.somaInt(-100, 250);
        Assertions.assertEquals(int737, 150);
    }
    @Test
    public void test2378() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        boolean boolean359 = calculadora353.maior(-100, -500);
        Assertions.assertEquals(boolean359, true);
        boolean boolean198 = calculadora353.maior(0, 0);
        Assertions.assertEquals(boolean198, false);
        int int410 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int410, -150);
        boolean boolean433 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean433, false);
    }
    @Test
    public void test2381() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double683 = calculadora353.divDouble(0.55, 10.953);
        Assertions.assertEquals(double683, 0.0502145530904775);
        int int310 = calculadora353.somaInt(-1000, 500);
        Assertions.assertEquals(int310, -500);
    }
    @Test
    public void test2382() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int87 = calculadora353.mulInt(0, -250);
        Assertions.assertEquals(int87, 0);
        int int694 = calculadora353.mulInt(-1000, -1000);
        Assertions.assertEquals(int694, 1000000);
    }
    @Test
    public void test2383() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double447 = calculadora353.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double447, -0.8525000000000001);
        double double496 = calculadora353.subDouble(105.5, -105.5);
        Assertions.assertEquals(double496, 211.0);
        double double69 = calculadora353.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double69, 1155.5415);
    }
    @Test
    public void test2386() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        boolean boolean620 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean620, false);
        boolean boolean544 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean544, true);
        int int903 = calculadora353.somaInt(1000, 0);
        Assertions.assertEquals(int903, 1000);
        java.lang.String string556 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string556, "hello");
    }
    @Test
    public void test2387() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int412 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int412, 2000);
        int int555 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int555, -2);
        double double510 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double510, -3.54);
        java.lang.String string37 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string37, "go");
        boolean boolean615 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean615, false);
    }
    @Test
    public void test2388() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        java.lang.String string310 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string310, "IPSUM");
        double double480 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double480, -0.0502145530904775);
        boolean boolean953 = calculadora353.menor(0, 250);
        Assertions.assertEquals(boolean953, true);
        boolean boolean51 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean51, false);
    }
    @Test
    public void test2389() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        int int30 = calculadora353.somaInt(1000, -100);
        Assertions.assertEquals(int30, 900);
        java.lang.String string596 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string596, "ipsum");
        double double697 = calculadora353.divDouble(-1.55, 1.99);
        Assertions.assertEquals(double697, -0.7788944723618091);
        boolean boolean818 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean818, true);
    }
    @Test
    public void test2390() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean617 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean617, false);
        double double621 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double621, -8.963);
        int int836 = calculadora353.somaInt(-1000, -1000);
        Assertions.assertEquals(int836, -2000);
        double double810 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double810, 58.025000000000006);
    }
    @Test
    public void test2392() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        java.lang.String string136 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string136, "lorem");
        int int898 = calculadora353.subInt(-1000, -1000);
        Assertions.assertEquals(int898, 0);
        boolean boolean372 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean372, true);
        java.lang.String string803 = calculadora353.toLowCase(string603);
        Assertions.assertEquals(string803, string603);
    }
    @Test
    public void test2393() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double485 = calculadora353.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double485, -211.0);
        java.lang.String string797 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string797, "go");
    }
    @Test
    public void test2394() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        double double33 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double33, -0.01886255924170616);
        int int451 = calculadora353.subInt(-500, 0);
        Assertions.assertEquals(int451, -500);
        double double528 = calculadora353.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double528, -0.0);
        double double677 = calculadora353.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double677, -105.5);
    }
    @Test
    public void test2395() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean765 = calculadora353.or(true, boolean312);
        Assertions.assertEquals(boolean765, true);
        boolean boolean943 = calculadora353.maior(-500, -100);
        Assertions.assertEquals(boolean943, false);
        java.lang.String string109 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string109, "hi");
        double double382 = calculadora353.mulDouble(10.953, -1.55);
        Assertions.assertEquals(double382, -16.977149999999998);
    }
    @Test
    public void test2396() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean854 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean854, false);
        boolean boolean797 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean797, true);
    }
    @Test
    public void test2397() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double890 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double890, 103.95);
        int int838 = calculadora353.somaInt(-250, -500);
        Assertions.assertEquals(int838, -750);
    }
    @Test
    public void test2398() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
        java.lang.String string512 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string512, "NICE");
        boolean boolean765 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean765, true);
    }
    @Test
    public void test2399() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean617 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean617, false);
        double double621 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double621, -8.963);
        int int990 = calculadora353.subInt(-100, -250);
        Assertions.assertEquals(int990, 150);
        boolean boolean207 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean207, false);
    }
    @Test
    public void test2400() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        java.lang.String string136 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string136, "lorem");
        boolean boolean674 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean674, false);
        java.lang.String string345 = calculadora353.toLowCase(string707);
        Assertions.assertEquals(string345, string707);
    }
    @Test
    public void test2401() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean439 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean439, true);
        java.lang.String string506 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string506, "go");
    }
    @Test
    public void test2402() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        java.lang.String string887 = calculadora353.toUpCase(string796);
        Assertions.assertEquals(string887, STRING796);
        boolean boolean764 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean764, true);
    }
    @Test
    public void test2404() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int146 = calculadora353.mulInt(-100, -100);
        Assertions.assertEquals(int146, 10000);
    }
    @Test
    public void test2406() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        int int830 = calculadora353.subInt(250, 250);
        Assertions.assertEquals(int830, 0);
        double double507 = calculadora353.subDouble(1.99, 0.55);
        Assertions.assertEquals(double507, 1.44);
        double double272 = calculadora353.subDouble(0.0, 105.5);
        Assertions.assertEquals(double272, -105.5);
    }
    @Test
    public void test2407() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double363 = calculadora353.mulDouble(1.99, -10.953);
        Assertions.assertEquals(double363, -21.79647);
        java.lang.String string214 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string214, "ipsum");
        double double582 = calculadora353.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double582, 0.0);
        boolean boolean603 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean603, false);
        int int10 = calculadora353.mulInt(500, -1000);
        Assertions.assertEquals(int10, -500000);
    }
    @Test
    public void test2408() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        double double697 = calculadora353.somaDouble(0.55, -10.953);
        Assertions.assertEquals(double697, -10.402999999999999);
    }
    @Test
    public void test2409() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        java.lang.String string449 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string449, "TOP");
        java.lang.String string332 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string332, "HELLO");
        boolean boolean679 = calculadora353.maior(100, 1000);
        Assertions.assertEquals(boolean679, false);
    }
    @Test
    public void test2410() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        double double211 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double211, -34.409835269999995);
        double double705 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double705, 58.025000000000006);
    }
    @Test
    public void test2411() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean410 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean410, true);
        double double914 = calculadora353.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double914, 0.0);
        boolean boolean521 = calculadora353.or(false, boolean815);
        Assertions.assertEquals(boolean521, false);
        boolean boolean736 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean736, false);
    }
    @Test
    public void test2412() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int514 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int514, 250000);
        double double701 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double701, -104.95);
        double double649 = calculadora353.divDouble(1.99, 105.5);
        Assertions.assertEquals(double649, 0.01886255924170616);
        double double410 = calculadora353.mulDouble(10.953, -1.55);
        Assertions.assertEquals(double410, -16.977149999999998);
    }
    @Test
    public void test2413() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        boolean boolean574 = calculadora353.or(boolean319, false);
        Assertions.assertEquals(boolean574, false);
        int int919 = calculadora353.somaInt(500, -250);
        Assertions.assertEquals(int919, 250);
        int int188 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int188, -100000);
        java.lang.String string827 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string827, "top");
        double double70 = calculadora353.mulDouble(-105.5, 0.55);
        Assertions.assertEquals(double70, -58.025000000000006);
    }
    @Test
    public void test2414() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        boolean boolean146 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean146, false);
        java.lang.String string882 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string882, "GO");
        java.lang.String string506 = calculadora353.toLowCase(string882);
        Assertions.assertEquals(string506, string882);
        double double59 = calculadora353.mulDouble(-1.55, 0.55);
        Assertions.assertEquals(double59, -0.8525000000000001);
        double double315 = calculadora353.subDouble(-10.953, -1.55);
        Assertions.assertEquals(double315, -9.402999999999999);
    }
    @Test
    public void test2415() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        java.lang.String string409 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string409, "NICE");
        double double643 = calculadora353.somaDouble(105.5, 10.953);
        Assertions.assertEquals(double643, 116.453);
        java.lang.String string290 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string290, "VALEU");
    }
    @Test
    public void test2417() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double548 = calculadora353.mulDouble(105.5, 105.5);
        Assertions.assertEquals(double548, 11130.25);
        double double218 = calculadora353.subDouble(-105.5, 0.55);
        Assertions.assertEquals(double218, -106.05);
        int int175 = calculadora353.mulInt(250, 250);
        Assertions.assertEquals(int175, 62500);
    }
    @Test
    public void test2418() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        int int786 = calculadora353.divInt(-250, -100);
        Assertions.assertEquals(int786, 2);
        double double989 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double989, 0.029778104265402842);
        double double493 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double493, -1155.5415);
        double double574 = calculadora353.subDouble(0.55, -105.5);
        Assertions.assertEquals(double574, 106.05);
        java.lang.String string149 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string149, "TOP");
        boolean boolean583 = calculadora353.or(false, boolean906);
        Assertions.assertEquals(boolean583, false);
    }
    @Test
    public void test2419() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        boolean boolean625 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean625, false);
        boolean boolean924 = calculadora353.menor(-1000, -500);
        Assertions.assertEquals(boolean924, true);
    }
    @Test
    public void test2420() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        boolean boolean278 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean278, true);
        boolean boolean175 = calculadora353.menor(-1000, -1000);
        Assertions.assertEquals(boolean175, false);
    }
    @Test
    public void test2421() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int642 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int642, -100000);
        java.lang.String string123 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string123, "TOP");
        boolean boolean943 = calculadora353.maior(-250, -250);
        Assertions.assertEquals(boolean943, false);
    }
    @Test
    public void test2422() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        boolean boolean251 = calculadora353.menor(-100, 100);
        Assertions.assertEquals(boolean251, true);
        double double449 = calculadora353.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double449, -104.95);
        boolean boolean498 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean498, false);
    }
    @Test
    public void test2423() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        double double161 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double161, 0.0);
        int int473 = calculadora353.mulInt(500, 1000);
        Assertions.assertEquals(int473, 500000);
    }
    @Test
    public void test2424() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean513 = calculadora353.maior(-500, -250);
        Assertions.assertEquals(boolean513, false);
        boolean boolean296 = calculadora353.menor(1000, 0);
        Assertions.assertEquals(boolean296, false);
        double double52 = calculadora353.mulDouble(105.5, -105.5);
        Assertions.assertEquals(double52, -11130.25);
    }
    @Test
    public void test2425() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean765 = calculadora353.or(true, boolean312);
        Assertions.assertEquals(boolean765, true);
        boolean boolean324 = calculadora353.or(boolean765, false);
        Assertions.assertEquals(boolean324, false);
    }
    @Test
    public void test2426() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
        int int320 = calculadora353.subInt(100, 1000);
        Assertions.assertEquals(int320, -900);
        boolean boolean141 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean141, true);
        double double797 = calculadora353.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double797, 1155.5415);
        boolean boolean687 = calculadora353.menor(1000, 250);
        Assertions.assertEquals(boolean687, false);
    }
    @Test
    public void test2427() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double254 = calculadora353.somaDouble(1.99, -105.5);
        Assertions.assertEquals(double254, -103.51);
        double double247 = calculadora353.mulDouble(10.953, -105.5);
        Assertions.assertEquals(double247, -1155.5415);
    }
    @Test
    public void test2428() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        java.lang.String string451 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string451, "NICE");
        boolean boolean698 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean698, false);
    }
    @Test
    public void test2429() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        int int474 = calculadora353.somaInt(100, 1000);
        Assertions.assertEquals(int474, 1100);
    }
    @Test
    public void test2430() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string446 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string446, "VALEU");
        java.lang.String string991 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string991, "nice");
        java.lang.String string932 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string932, "LOREM");
    }
    @Test
    public void test2432() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        int int135 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int135, 25000);
        java.lang.String string172 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string172, "nice");
    }
    @Test
    public void test2433() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean610 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean610, true);
        boolean boolean128 = calculadora353.maior(1000, -1000);
        Assertions.assertEquals(boolean128, true);
        java.lang.String string100 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string100, "nice");
    }
    @Test
    public void test2434() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean357 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean357, false);
        int int461 = calculadora353.mulInt(500, 250);
        Assertions.assertEquals(int461, 125000);
        java.lang.String string253 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string253, "hello");
        int int121 = calculadora353.mulInt(-100, -100);
        Assertions.assertEquals(int121, 10000);
        double double190 = calculadora353.divDouble(-10.953, 105.5);
        Assertions.assertEquals(double190, -0.10381990521327014);
    }
    @Test
    public void test2435() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int425 = calculadora353.divInt(1000, 100);
        Assertions.assertEquals(int425, 10);
        java.lang.String string583 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string583, "top");
        int int245 = calculadora353.divInt(-100, 100);
        Assertions.assertEquals(int245, -1);
        int int951 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int951, 1);
        java.lang.String string820 = calculadora353.toLowCase(string583);
        Assertions.assertEquals(string820, string583);
        java.lang.String string283 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string283, "IPSUM");
    }
    @Test
    public void test2437() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double831 = calculadora353.subDouble(10.953, 3.14159);
        Assertions.assertEquals(double831, 7.8114099999999995);
    }
    @Test
    public void test2438() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int460 = calculadora353.mulInt(-100, -250);
        Assertions.assertEquals(int460, 25000);
        double double971 = calculadora353.subDouble(-105.5, 10.953);
        Assertions.assertEquals(double971, -116.453);
    }
    @Test
    public void test2439() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        double double858 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double858, Infinity);
        java.lang.String string53 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string53, "hello");
        double double882 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double882, -1.0);
        int int461 = calculadora353.subInt(500, -250);
        Assertions.assertEquals(int461, 750);
        boolean boolean591 = calculadora353.menor(500, 500);
        Assertions.assertEquals(boolean591, false);
        boolean boolean818 = calculadora353.menor(500, -500);
        Assertions.assertEquals(boolean818, false);
    }
    @Test
    public void test2440() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string446 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string446, "VALEU");
        int int567 = calculadora353.subInt(-500, -250);
        Assertions.assertEquals(int567, -250);
    }
    @Test
    public void test2442() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        java.lang.String string560 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string560, "TOP");
        double double974 = calculadora353.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double974, 1.5786884422110552);
        boolean boolean839 = calculadora353.menor(250, -100);
        Assertions.assertEquals(boolean839, false);
    }
    @Test
    public void test2444() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        java.lang.String string954 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string954, "nice");
        int int14 = calculadora353.mulInt(500, 250);
        Assertions.assertEquals(int14, 125000);
        boolean boolean972 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean972, false);
    }
    @Test
    public void test2445() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        boolean boolean359 = calculadora353.maior(-100, -500);
        Assertions.assertEquals(boolean359, true);
        double double280 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double280, -0.005213270142180095);
        double double918 = calculadora353.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double918, -105.5);
        boolean boolean90 = calculadora353.maior(0, -1000);
        Assertions.assertEquals(boolean90, true);
        double double515 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double515, -10.953);
    }
    @Test
    public void test2446() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
        java.lang.String string512 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string512, "NICE");
        java.lang.String string802 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string802, "IPSUM");
        double double339 = calculadora353.subDouble(3.14159, 105.5);
        Assertions.assertEquals(double339, -102.35841);
    }
    @Test
    public void test2447() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        double double462 = calculadora353.subDouble(3.14159, 105.5);
        Assertions.assertEquals(double462, -102.35841);
        int int469 = calculadora353.subInt(500, 250);
        Assertions.assertEquals(int469, 250);
        java.lang.String string316 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string316, "NICE");
    }
    @Test
    public void test2448() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        double double298 = calculadora353.divDouble(-1.55, 3.14159);
        Assertions.assertEquals(double298, -0.4933807403257586);
        double double732 = calculadora353.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double732, -0.0);
        int int466 = calculadora353.somaInt(0, 100);
        Assertions.assertEquals(int466, 100);
        java.lang.String string197 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string197, "hi");
    }
    @Test
    public void test2449() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        java.lang.String string889 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string889, "VALEU");
        boolean boolean757 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean757, true);
        boolean boolean702 = calculadora353.maior(100, 100);
        Assertions.assertEquals(boolean702, false);
        boolean boolean386 = calculadora353.menor(500, 500);
        Assertions.assertEquals(boolean386, false);
        boolean boolean923 = calculadora353.and(true, boolean815);
        Assertions.assertEquals(boolean923, false);
    }
    @Test
    public void test2451() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        int int696 = calculadora353.divInt(-250, -1000);
        Assertions.assertEquals(int696, 0);
        boolean boolean688 = calculadora353.menor(100, 100);
        Assertions.assertEquals(boolean688, false);
        int int816 = calculadora353.mulInt(-1000, -1000);
        Assertions.assertEquals(int816, 1000000);
    }
    @Test
    public void test2452() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean458 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean458, false);
    }
    @Test
    public void test2453() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
        java.lang.String string2 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string2, "hello");
        java.lang.String string160 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string160, "GO");
        boolean boolean282 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean282, true);
    }
    @Test
    public void test2454() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
        double double739 = calculadora353.mulDouble(-105.5, -105.5);
        Assertions.assertEquals(double739, 11130.25);
        boolean boolean541 = calculadora353.maior(1000, -500);
        Assertions.assertEquals(boolean541, true);
    }
    @Test
    public void test2455() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int885 = calculadora353.mulInt(-500, -100);
        Assertions.assertEquals(int885, 50000);
        java.lang.String string289 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string289, "HELLO");
        double double388 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double388, 7.066451612903225);
    }
    @Test
    public void test2456() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        int int567 = calculadora353.mulInt(100, 100);
        Assertions.assertEquals(int567, 10000);
        double double753 = calculadora353.divDouble(0.0, 10.953);
        Assertions.assertEquals(double753, 0.0);
    }
    @Test
    public void test2457() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        double double314 = calculadora353.somaDouble(-10.953, 105.5);
        Assertions.assertEquals(double314, 94.547);
        double double201 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double201, 6.024150000000001);
        boolean boolean957 = calculadora353.menor(-500, 1000);
        Assertions.assertEquals(boolean957, true);
    }
    @Test
    public void test2458() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int789 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int789, 0);
        boolean boolean781 = calculadora353.menor(-250, 100);
        Assertions.assertEquals(boolean781, true);
        java.lang.String string108 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string108, "hello");
        double double530 = calculadora353.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double530, -119.96820899999999);
    }
    @Test
    public void test2460() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        boolean boolean230 = calculadora353.maior(-500, 100);
        Assertions.assertEquals(boolean230, false);
        int int738 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int738, -2);
        double double656 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double656, 4.69159);
    }
    @Test
    public void test2461() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int87 = calculadora353.mulInt(0, -250);
        Assertions.assertEquals(int87, 0);
        double double436 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double436, 0.0);
        boolean boolean582 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean582, false);
        java.lang.String string101 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string101, "TOP");
    }
    @Test
    public void test2462() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int87 = calculadora353.mulInt(0, -250);
        Assertions.assertEquals(int87, 0);
        double double436 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double436, 0.0);
        boolean boolean582 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean582, false);
        java.lang.String string101 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string101, "TOP");
        int int876 = calculadora353.divInt(500, -500);
        Assertions.assertEquals(int876, -1);
    }
    @Test
    public void test2463() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double363 = calculadora353.mulDouble(1.99, -10.953);
        Assertions.assertEquals(double363, -21.79647);
        java.lang.String string214 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string214, "ipsum");
        double double582 = calculadora353.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double582, 0.0);
        boolean boolean603 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean603, false);
        double double201 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double201, 1.0);
    }
    @Test
    public void test2464() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int43 = calculadora353.mulInt(-1000, -250);
        Assertions.assertEquals(int43, 250000);
        boolean boolean145 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean145, true);
        boolean boolean761 = calculadora353.and(boolean914, boolean721);
        Assertions.assertEquals(boolean761, false);
        boolean boolean650 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean650, true);
    }
    @Test
    public void test2465() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        java.lang.String string738 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string738, "NICE");
        boolean boolean915 = calculadora353.menor(-1000, -100);
        Assertions.assertEquals(boolean915, true);
        int int828 = calculadora353.subInt(100, 0);
        Assertions.assertEquals(int828, 100);
    }
    @Test
    public void test2466() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double961 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double961, -8.963);
        boolean boolean118 = calculadora353.or(true, boolean747);
        Assertions.assertEquals(boolean118, true);
        double double139 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double139, 6.024150000000001);
        boolean boolean140 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean140, true);
        int int908 = calculadora353.mulInt(-500, 100);
        Assertions.assertEquals(int908, -50000);
    }
    @Test
    public void test2468() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        boolean boolean278 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean278, true);
        boolean boolean175 = calculadora353.menor(-1000, -1000);
        Assertions.assertEquals(boolean175, false);
        double double447 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double447, -0.005213270142180095);
    }
    @Test
    public void test2469() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean341 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean341, true);
        int int70 = calculadora353.somaInt(-500, 250);
        Assertions.assertEquals(int70, -250);
        boolean boolean196 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean196, true);
        int int345 = calculadora353.somaInt(-1000, 500);
        Assertions.assertEquals(int345, -500);
        boolean boolean428 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean428, true);
    }
    @Test
    public void test2470() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean321 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean321, true);
        double double467 = calculadora353.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double467, 0.0);
    }
    @Test
    public void test2471() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean850 = calculadora353.or(boolean116, false);
        Assertions.assertEquals(boolean850, false);
    }
    @Test
    public void test2472() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        java.lang.String string807 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string807, "LOREM");
        java.lang.String string850 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string850, "ipsum");
    }
    @Test
    public void test2473() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        int int329 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int329, 0);
        boolean boolean461 = calculadora353.maior(100, -1000);
        Assertions.assertEquals(boolean461, true);
        java.lang.String string748 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string748, "go");
    }
    @Test
    public void test2474() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean222 = calculadora353.menor(-250, 0);
        Assertions.assertEquals(boolean222, true);
        boolean boolean969 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean969, true);
        java.lang.String string285 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string285, "lorem");
        boolean boolean631 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean631, true);
        double double139 = calculadora353.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double139, -0.0);
    }
    @Test
    public void test2475() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean556 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean556, true);
        java.lang.String string409 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string409, "NICE");
        double double643 = calculadora353.somaDouble(105.5, 10.953);
        Assertions.assertEquals(double643, 116.453);
        java.lang.String string628 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string628, "hi");
    }
    @Test
    public void test2476() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int856 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int856, -2);
        double double310 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double310, -58.025000000000006);
        int int260 = calculadora353.subInt(-1000, -100);
        Assertions.assertEquals(int260, -900);
        double double101 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double101, -34.409835269999995);
    }
    @Test
    public void test2477() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        boolean boolean380 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean380, false);
        boolean boolean919 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean919, true);
        double double495 = calculadora353.subDouble(105.5, 0.55);
        Assertions.assertEquals(double495, 104.95);
    }
    @Test
    public void test2480() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        int int30 = calculadora353.somaInt(1000, -100);
        Assertions.assertEquals(int30, 900);
        java.lang.String string596 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string596, "ipsum");
        double double697 = calculadora353.divDouble(-1.55, 1.99);
        Assertions.assertEquals(double697, -0.7788944723618091);
        int int506 = calculadora353.subInt(-500, -1000);
        Assertions.assertEquals(int506, 500);
        int int473 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int473, 250);
        double double26 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double26, 0.18168538300009132);
    }
    @Test
    public void test2481() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        double double268 = calculadora353.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double268, 1.5786884422110552);
        java.lang.String string156 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string156, "GO");
    }
    @Test
    public void test2482() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int438 = calculadora353.somaInt(-100, -500);
        Assertions.assertEquals(int438, -600);
        java.lang.String string531 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string531, "NICE");
        boolean boolean508 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean508, true);
    }
    @Test
    public void test2483() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        boolean boolean440 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean440, true);
        double double653 = calculadora353.mulDouble(-1.55, -10.953);
        Assertions.assertEquals(double653, 16.977149999999998);
        boolean boolean343 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean343, false);
        boolean boolean108 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean108, false);
    }
    @Test
    public void test2484() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double137 = calculadora353.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double137, 1.1);
        boolean boolean264 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean264, false);
        int int965 = calculadora353.mulInt(-250, 100);
        Assertions.assertEquals(int965, -25000);
    }
    @Test
    public void test2485() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
        double double331 = calculadora353.mulDouble(0.0, 3.14159);
        Assertions.assertEquals(double331, 0.0);
        boolean boolean815 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean815, false);
        int int117 = calculadora353.divInt(0, 100);
        Assertions.assertEquals(int117, 0);
    }
    @Test
    public void test2486() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        java.lang.String string728 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string728, "HELLO");
        int int987 = calculadora353.somaInt(500, -250);
        Assertions.assertEquals(int987, 250);
        double double235 = calculadora353.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double235, 1.5786884422110552);
    }
    @Test
    public void test2487() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        boolean boolean433 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean433, false);
        double double739 = calculadora353.mulDouble(-105.5, -105.5);
        Assertions.assertEquals(double739, 11130.25);
        boolean boolean541 = calculadora353.maior(1000, -500);
        Assertions.assertEquals(boolean541, true);
        boolean boolean186 = calculadora353.menor(-250, -100);
        Assertions.assertEquals(boolean186, true);
    }
    @Test
    public void test2488() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
        double double686 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double686, -104.95);
        boolean boolean428 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean428, false);
        boolean boolean82 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean82, true);
        int int73 = calculadora353.somaInt(0, 0);
        Assertions.assertEquals(int73, 0);
    }
    @Test
    public void test2489() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        java.lang.String string273 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string273, "hi");
    }
    @Test
    public void test2490() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean973 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean973, false);
        java.lang.String string592 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string592, "valeu");
    }
    @Test
    public void test2491() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string268 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string268, "valeu");
    }
    @Test
    public void test2494() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int87 = calculadora353.mulInt(0, -250);
        Assertions.assertEquals(int87, 0);
        double double436 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double436, 0.0);
        boolean boolean775 = calculadora353.maior(-500, 500);
        Assertions.assertEquals(boolean775, false);
        boolean boolean316 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean316, true);
    }
    @Test
    public void test2495() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean828 = calculadora353.menor(250, 100);
        Assertions.assertEquals(boolean828, false);
        java.lang.String string628 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string628, "lorem");
    }
    @Test
    public void test2496() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double961 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double961, -8.963);
        java.lang.String string355 = calculadora353.toUpCase(string604);
        Assertions.assertEquals(string355, STRING604);
        java.lang.String string289 = calculadora353.toLowCase(string604);
        Assertions.assertEquals(string289, string604);
    }
    @Test
    public void test2497() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        java.lang.String string49 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string49, "lorem");
        boolean boolean28 = calculadora353.menor(250, -250);
        Assertions.assertEquals(boolean28, false);
    }
    @Test
    public void test2498() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        java.lang.String string744 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string744, "HELLO");
        boolean boolean659 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean659, true);
    }
    @Test
    public void test2499() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean708 = calculadora353.menor(1000, 250);
        Assertions.assertEquals(boolean708, false);
        java.lang.String string319 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string319, "valeu");
    }
    @Test
    public void test2500() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        int int276 = calculadora353.mulInt(0, -1000);
        Assertions.assertEquals(int276, 0);
    }
    @Test
    public void test2501() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        double double798 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double798, 94.547);
        double double381 = calculadora353.subDouble(0.55, 0.0);
        Assertions.assertEquals(double381, 0.55);
        boolean boolean314 = calculadora353.maior(-100, -100);
        Assertions.assertEquals(boolean314, false);
    }
    @Test
    public void test2502() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        int int115 = calculadora353.mulInt(250, -1000);
        Assertions.assertEquals(int115, -250000);
        double double915 = calculadora353.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double915, -104.95);
        int int324 = calculadora353.subInt(500, 1000);
        Assertions.assertEquals(int324, -500);
    }
    @Test
    public void test2503() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        double double415 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double415, -0.01886255924170616);
        int int80 = calculadora353.somaInt(100, 100);
        Assertions.assertEquals(int80, 200);
        java.lang.String string852 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string852, "go");
    }
    @Test
    public void test2504() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean410 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean410, true);
        double double839 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double839, 103.95);
        boolean boolean400 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean400, true);
        boolean boolean214 = calculadora353.maior(250, 0);
        Assertions.assertEquals(boolean214, true);
    }
    @Test
    public void test2506() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        double double858 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double858, Infinity);
        java.lang.String string53 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string53, "hello");
        double double882 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double882, -1.0);
        int int461 = calculadora353.subInt(500, -250);
        Assertions.assertEquals(int461, 750);
        double double328 = calculadora353.subDouble(10.953, 1.99);
        Assertions.assertEquals(double328, 8.963);
    }
    @Test
    public void test2507() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        java.lang.String string135 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string135, "hi");
        java.lang.String string853 = calculadora353.toUpCase(string135);
        Assertions.assertEquals(string853, STRING135);
        boolean boolean478 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean478, true);
        java.lang.String string837 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string837, "IPSUM");
    }
    @Test
    public void test2508() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        java.lang.String string310 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string310, "IPSUM");
        double double899 = calculadora353.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double899, -105.5);
        boolean boolean915 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean915, false);
        int int357 = calculadora353.subInt(-100, 0);
        Assertions.assertEquals(int357, -100);
        int int926 = calculadora353.mulInt(250, 250);
        Assertions.assertEquals(int926, 62500);
    }
    @Test
    public void test2509() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double638 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double638, -1.44);
        boolean boolean582 = calculadora353.maior(-250, -100);
        Assertions.assertEquals(boolean582, false);
        double double599 = calculadora353.mulDouble(-105.5, 105.5);
        Assertions.assertEquals(double599, -11130.25);
    }
    @Test
    public void test2510() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        double double866 = calculadora353.subDouble(3.14159, 105.5);
        Assertions.assertEquals(double866, -102.35841);
        int int249 = calculadora353.subInt(250, 0);
        Assertions.assertEquals(int249, 250);
        double double986 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double986, -0.01886255924170616);
    }
    @Test
    public void test2511() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        boolean boolean251 = calculadora353.menor(-100, 100);
        Assertions.assertEquals(boolean251, true);
        double double449 = calculadora353.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double449, -104.95);
        boolean boolean833 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean833, false);
    }
    @Test
    public void test2513() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        double double375 = calculadora353.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double375, 0.0);
        java.lang.String string556 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string556, "valeu");
    }
    @Test
    public void test2514() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        double double36 = calculadora353.somaDouble(105.5, 3.14159);
        Assertions.assertEquals(double36, 108.64159);
        java.lang.String string111 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string111, "top");
    }
    @Test
    public void test2516() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
        boolean boolean259 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean259, true);
        boolean boolean18 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean18, false);
        java.lang.String string904 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string904, "nice");
        boolean boolean921 = calculadora353.maior(-1000, -500);
        Assertions.assertEquals(boolean921, false);
        boolean boolean945 = calculadora353.menor(-500, 1000);
        Assertions.assertEquals(boolean945, true);
    }
    @Test
    public void test2517() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        int int209 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int209, 25000);
        boolean boolean284 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean284, true);
        int int207 = calculadora353.divInt(100, 100);
        Assertions.assertEquals(int207, 1);
        java.lang.String string530 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string530, "HELLO");
    }
    @Test
    public void test2519() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        java.lang.String string310 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string310, "IPSUM");
        double double480 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double480, -0.0502145530904775);
        boolean boolean953 = calculadora353.menor(0, 250);
        Assertions.assertEquals(boolean953, true);
        int int374 = calculadora353.subInt(250, -500);
        Assertions.assertEquals(int374, 750);
    }
    @Test
    public void test2520() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double890 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double890, 103.95);
        int int838 = calculadora353.somaInt(-250, -500);
        Assertions.assertEquals(int838, -750);
        java.lang.String string637 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string637, "VALEU");
    }
    @Test
    public void test2521() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        double double64 = calculadora353.mulDouble(-1.55, 1.99);
        Assertions.assertEquals(double64, -3.0845000000000002);
        int int65 = calculadora353.subInt(100, -100);
        Assertions.assertEquals(int65, 200);
        java.lang.String string843 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string843, "ipsum");
    }
    @Test
    public void test2523() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int856 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int856, -2);
        boolean boolean688 = calculadora353.maior(-100, 500);
        Assertions.assertEquals(boolean688, false);
        boolean boolean480 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean480, true);
    }
    @Test
    public void test2524() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        double double471 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double471, 19.91454545454545);
        double double290 = calculadora353.subDouble(1.99, 0.55);
        Assertions.assertEquals(double290, 1.44);
        int int501 = calculadora353.divInt(-250, 100);
        Assertions.assertEquals(int501, -2);
        java.lang.String string327 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string327, "VALEU");
    }
    @Test
    public void test2525() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int412 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int412, 2000);
        int int41 = calculadora353.somaInt(250, 0);
        Assertions.assertEquals(int41, 250);
        double double503 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double503, 0.0);
        boolean boolean154 = calculadora353.and(true, boolean747);
        Assertions.assertEquals(boolean154, false);
    }
    @Test
    public void test2526() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        int int115 = calculadora353.mulInt(250, -1000);
        Assertions.assertEquals(int115, -250000);
        double double373 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double373, -104.95);
        int int311 = calculadora353.somaInt(1000, 100);
        Assertions.assertEquals(int311, 1100);
    }
    @Test
    public void test2527() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        double double516 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double516, 3.54);
    }
    @Test
    public void test2528() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double325 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double325, -3.54);
        java.lang.String string492 = calculadora353.toUpCase(string418);
        Assertions.assertEquals(string492, STRING418);
        int int875 = calculadora353.mulInt(-1000, 500);
        Assertions.assertEquals(int875, -500000);
    }
    @Test
    public void test2529() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        boolean boolean620 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean620, false);
        java.lang.String string126 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string126, "HI");
    }
    @Test
    public void test2530() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        int int139 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int139, 50000);
        double double89 = calculadora353.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double89, -4.8694645);
    }
    @Test
    public void test2531() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double775 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double775, 6.28318);
        double double428 = calculadora353.mulDouble(-105.5, 3.14159);
        Assertions.assertEquals(double428, -331.437745);
        boolean boolean781 = calculadora353.maior(-500, 100);
        Assertions.assertEquals(boolean781, false);
        java.lang.String string659 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string659, "hi");
        java.lang.String string537 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string537, "VALEU");
    }
    @Test
    public void test2532() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        java.lang.String string807 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string807, "LOREM");
        int int992 = calculadora353.subInt(-250, 1000);
        Assertions.assertEquals(int992, -1250);
        boolean boolean496 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean496, true);
        double double179 = calculadora353.divDouble(-105.5, -105.5);
        Assertions.assertEquals(double179, 1.0);
    }
    @Test
    public void test2533() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        boolean boolean766 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean766, true);
        int int606 = calculadora353.subInt(-1000, 1000);
        Assertions.assertEquals(int606, -2000);
    }
    @Test
    public void test2534() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
        java.lang.String string2 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string2, "hello");
        java.lang.String string160 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string160, "GO");
        double double951 = calculadora353.subDouble(0.55, 0.0);
        Assertions.assertEquals(double951, 0.55);
    }
    @Test
    public void test2535() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double268 = calculadora353.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double268, 5.13159);
        java.lang.String string492 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string492, "IPSUM");
    }
    @Test
    public void test2536() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean452 = calculadora353.or(true, boolean597);
        Assertions.assertEquals(boolean452, true);
        double double15 = calculadora353.divDouble(1.99, -1.55);
        Assertions.assertEquals(double15, -1.2838709677419355);
        boolean boolean577 = calculadora353.and(boolean597, true);
        Assertions.assertEquals(boolean577, false);
        boolean boolean547 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean547, true);
    }
    @Test
    public void test2537() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
        int int320 = calculadora353.subInt(100, 1000);
        Assertions.assertEquals(int320, -900);
        boolean boolean422 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean422, false);
        double double371 = calculadora353.subDouble(1.99, 0.55);
        Assertions.assertEquals(double371, 1.44);
    }
    @Test
    public void test2538() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        int int602 = calculadora353.somaInt(-250, 500);
        Assertions.assertEquals(int602, 250);
    }
    @Test
    public void test2540() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        int int555 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int555, -1250);
        int int549 = calculadora353.mulInt(0, -1000);
        Assertions.assertEquals(int549, 0);
    }
    @Test
    public void test2541() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        double double163 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double163, -3.54);
        int int130 = calculadora353.mulInt(250, -1000);
        Assertions.assertEquals(int130, -250000);
        double double843 = calculadora353.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double843, 6.2517641);
    }
    @Test
    public void test2543() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        double double110 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double110, 0.0);
        boolean boolean784 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean784, false);
        java.lang.String string114 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string114, "top");
        java.lang.String string999 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string999, "go");
    }
    @Test
    public void test2544() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double961 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double961, -8.963);
        boolean boolean118 = calculadora353.or(true, boolean747);
        Assertions.assertEquals(boolean118, true);
        double double139 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double139, 6.024150000000001);
        boolean boolean140 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean140, true);
        int int123 = calculadora353.mulInt(1000, 500);
        Assertions.assertEquals(int123, 500000);
    }
    @Test
    public void test2545() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double137 = calculadora353.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double137, 1.1);
        boolean boolean264 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean264, false);
        int int965 = calculadora353.mulInt(-250, 100);
        Assertions.assertEquals(int965, -25000);
        java.lang.String string772 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string772, "LOREM");
    }
    @Test
    public void test2546() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        int int940 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int940, 50000);
        double double142 = calculadora353.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double142, -1.0);
        boolean boolean579 = calculadora353.menor(-100, -500);
        Assertions.assertEquals(boolean579, false);
        boolean boolean561 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean561, false);
    }
    @Test
    public void test2547() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int519 = calculadora353.divInt(250, 1000);
        Assertions.assertEquals(int519, 0);
        double double540 = calculadora353.divDouble(-1.55, 0.0);
        Assertions.assertEquals(double540, -Infinity);
        int int239 = calculadora353.subInt(250, 100);
        Assertions.assertEquals(int239, 150);
        double double631 = calculadora353.divDouble(-105.5, 3.14159);
        Assertions.assertEquals(double631, -33.58172135765648);
        double double990 = calculadora353.somaDouble(-1.55, 0.55);
        Assertions.assertEquals(double990, -1.0);
    }
    @Test
    public void test2548() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int412 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int412, 2000);
        int int555 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int555, -2);
        double double510 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double510, -3.54);
        java.lang.String string37 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string37, "go");
        double double156 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double156, -3.54);
    }
    @Test
    public void test2549() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int104 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int104, -125000);
        java.lang.String string529 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string529, STRING466);
        boolean boolean192 = calculadora353.maior(-500, 1000);
        Assertions.assertEquals(boolean192, false);
    }
    @Test
    public void test2550() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        double double121 = calculadora353.mulDouble(3.14159, 105.5);
        Assertions.assertEquals(double121, 331.437745);
        int int416 = calculadora353.mulInt(250, 1000);
        Assertions.assertEquals(int416, 250000);
    }
    @Test
    public void test2551() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        double double643 = calculadora353.divDouble(1.99, -10.953);
        Assertions.assertEquals(double643, -0.18168538300009132);
        double double948 = calculadora353.subDouble(0.55, 0.55);
        Assertions.assertEquals(double948, 0.0);
        int int63 = calculadora353.mulInt(-1000, -250);
        Assertions.assertEquals(int63, 250000);
    }
    @Test
    public void test2552() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        double double731 = calculadora353.divDouble(-1.55, 0.0);
        Assertions.assertEquals(double731, -Infinity);
        boolean boolean202 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean202, false);
    }
    @Test
    public void test2553() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        boolean boolean359 = calculadora353.maior(-100, -500);
        Assertions.assertEquals(boolean359, true);
        double double280 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double280, -0.005213270142180095);
        java.lang.String string497 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string497, "hi");
        java.lang.String string466 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string466, "TOP");
    }
    @Test
    public void test2554() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        java.lang.String string778 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string778, "go");
        java.lang.String string825 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string825, "valeu");
    }
    @Test
    public void test2555() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        boolean boolean297 = calculadora353.maior(-100, 250);
        Assertions.assertEquals(boolean297, false);
        int int849 = calculadora353.somaInt(-1000, -100);
        Assertions.assertEquals(int849, -1100);
        java.lang.String string786 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string786, "VALEU");
        int int978 = calculadora353.subInt(-100, 250);
        Assertions.assertEquals(int978, -350);
    }
    @Test
    public void test2557() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean617 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean617, false);
        double double621 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double621, -8.963);
        int int990 = calculadora353.subInt(-100, -250);
        Assertions.assertEquals(int990, 150);
        boolean boolean207 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean207, false);
        java.lang.String string833 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string833, "go");
    }
    @Test
    public void test2559() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        boolean boolean50 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean50, true);
        boolean boolean696 = calculadora353.maior(250, 0);
        Assertions.assertEquals(boolean696, true);
        java.lang.String string318 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string318, "lorem");
    }
    @Test
    public void test2560() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        double double143 = calculadora353.divDouble(0.0, -1.55);
        Assertions.assertEquals(double143, -0.0);
    }
    @Test
    public void test2561() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        java.lang.String string807 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string807, "LOREM");
        double double339 = calculadora353.mulDouble(-10.953, 1.99);
        Assertions.assertEquals(double339, -21.79647);
    }
    @Test
    public void test2562() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        int int538 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int538, 600);
        double double369 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double369, 58.025000000000006);
        boolean boolean651 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean651, false);
        java.lang.String string573 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string573, "ipsum");
    }
    @Test
    public void test2563() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean950 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean950, false);
        java.lang.String string456 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string456, "hello");
        double double71 = calculadora353.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double71, -104.95);
        boolean boolean919 = calculadora353.menor(100, -500);
        Assertions.assertEquals(boolean919, false);
    }
    @Test
    public void test2564() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        java.lang.String string744 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string744, "HELLO");
        java.lang.String string213 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string213, "top");
        java.lang.String string351 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string351, "hello");
    }
    @Test
    public void test2565() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int412 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int412, 2000);
        int int555 = calculadora353.divInt(-500, 250);
        Assertions.assertEquals(int555, -2);
        double double510 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double510, -3.54);
        java.lang.String string37 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string37, "go");
        boolean boolean615 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean615, false);
        int int24 = calculadora353.divInt(-250, -500);
        Assertions.assertEquals(int24, 0);
    }
    @Test
    public void test2567() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        boolean boolean747 = calculadora353.maior(100, -250);
        Assertions.assertEquals(boolean747, true);
    }
    @Test
    public void test2568() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int86 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int86, -2);
        java.lang.String string626 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string626, "nice");
        boolean boolean496 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean496, true);
    }
    @Test
    public void test2569() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean389 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean389, false);
        boolean boolean864 = calculadora353.menor(100, 0);
        Assertions.assertEquals(boolean864, false);
    }
    @Test
    public void test2571() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean999 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean999, true);
        double double429 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double429, -3.54);
        java.lang.String string133 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string133, "LOREM");
    }
    @Test
    public void test2572() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        int int984 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int984, -750);
        java.lang.String string578 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string578, "NICE");
        int int227 = calculadora353.somaInt(-1000, 500);
        Assertions.assertEquals(int227, -500);
        int int425 = calculadora353.subInt(1000, -500);
        Assertions.assertEquals(int425, 1500);
    }
    @Test
    public void test2573() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        java.lang.String string631 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string631, "top");
        boolean boolean140 = calculadora353.menor(-500, -250);
        Assertions.assertEquals(boolean140, true);
        int int573 = calculadora353.subInt(0, -100);
        Assertions.assertEquals(int573, 100);
    }
    @Test
    public void test2574() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean999 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean999, true);
        double double429 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double429, -3.54);
        java.lang.String string133 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string133, "LOREM");
        java.lang.String string529 = calculadora353.toLowCase(string133);
        Assertions.assertEquals(string529, string133);
    }
    @Test
    public void test2576() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        double double201 = calculadora353.subDouble(0.0, -10.953);
        Assertions.assertEquals(double201, 10.953);
    }
    @Test
    public void test2577() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean452 = calculadora353.or(true, boolean597);
        Assertions.assertEquals(boolean452, true);
        double double15 = calculadora353.divDouble(1.99, -1.55);
        Assertions.assertEquals(double15, -1.2838709677419355);
        java.lang.String string682 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string682, "TOP");
        boolean boolean116 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean116, false);
    }
    @Test
    public void test2578() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int296 = calculadora353.mulInt(0, 500);
        Assertions.assertEquals(int296, 0);
        int int803 = calculadora353.mulInt(-1000, -1000);
        Assertions.assertEquals(int803, 1000000);
        boolean boolean836 = calculadora353.menor(-1000, 0);
        Assertions.assertEquals(boolean836, true);
    }
    @Test
    public void test2579() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        int int711 = calculadora353.divInt(500, 1000);
        Assertions.assertEquals(int711, 0);
        int int661 = calculadora353.divInt(-250, 100);
        Assertions.assertEquals(int661, -2);
    }
    @Test
    public void test2581() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        boolean boolean777 = calculadora353.maior(-250, -250);
        Assertions.assertEquals(boolean777, false);
        double double988 = calculadora353.divDouble(-10.953, 0.55);
        Assertions.assertEquals(double988, -19.91454545454545);
    }
    @Test
    public void test2582() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double954 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double954, 6.28318);
        double double891 = calculadora353.divDouble(0.0, -105.5);
        Assertions.assertEquals(double891, -0.0);
        double double620 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double620, -10.953);
        boolean boolean233 = calculadora353.maior(-500, -100);
        Assertions.assertEquals(boolean233, false);
        int int221 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int221, 350);
        double double112 = calculadora353.mulDouble(-10.953, 1.99);
        Assertions.assertEquals(double112, -21.79647);
    }
    @Test
    public void test2583() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean528 = calculadora353.menor(0, -500);
        Assertions.assertEquals(boolean528, false);
        java.lang.String string792 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string792, "hi");
    }
    @Test
    public void test2584() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean458 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean458, false);
        boolean boolean893 = calculadora353.maior(-500, -250);
        Assertions.assertEquals(boolean893, false);
    }
    @Test
    public void test2585() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double115 = calculadora353.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double115, 163.525);
        boolean boolean75 = calculadora353.menor(500, 0);
        Assertions.assertEquals(boolean75, false);
        java.lang.String string360 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string360, "ipsum");
        int int430 = calculadora353.mulInt(500, -100);
        Assertions.assertEquals(int430, -50000);
    }
    @Test
    public void test2588() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
        int int116 = calculadora353.mulInt(-100, 0);
        Assertions.assertEquals(int116, 0);
        double double37 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double37, 0.0);
    }
    @Test
    public void test2589() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int519 = calculadora353.divInt(250, 1000);
        Assertions.assertEquals(int519, 0);
        double double540 = calculadora353.divDouble(-1.55, 0.0);
        Assertions.assertEquals(double540, -Infinity);
        int int239 = calculadora353.subInt(250, 100);
        Assertions.assertEquals(int239, 150);
        double double631 = calculadora353.divDouble(-105.5, 3.14159);
        Assertions.assertEquals(double631, -33.58172135765648);
        double double990 = calculadora353.somaDouble(-1.55, 0.55);
        Assertions.assertEquals(double990, -1.0);
        int int192 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int192, -1250);
    }
    @Test
    public void test2590() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean765 = calculadora353.or(true, boolean312);
        Assertions.assertEquals(boolean765, true);
        boolean boolean324 = calculadora353.or(boolean765, false);
        Assertions.assertEquals(boolean324, false);
        java.lang.String string62 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string62, "TOP");
    }
    @Test
    public void test2591() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string169 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string169, "HI");
        int int251 = calculadora353.divInt(500, -100);
        Assertions.assertEquals(int251, -5);
        boolean boolean56 = calculadora353.or(false, boolean721);
        Assertions.assertEquals(boolean56, false);
        double double126 = calculadora353.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double126, 5.13159);
    }
    @Test
    public void test2593() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double325 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double325, -3.54);
        double double759 = calculadora353.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double759, -0.8525000000000001);
        java.lang.String string351 = calculadora353.toLowCase(string418);
        Assertions.assertEquals(string351, string418);
    }
    @Test
    public void test2594() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double99 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double99, 0.029778104265402842);
        int int359 = calculadora353.divInt(-1000, 100);
        Assertions.assertEquals(int359, -10);
        boolean boolean615 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean615, true);
        java.lang.String string779 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string779, "HI");
    }
    @Test
    public void test2595() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        boolean boolean251 = calculadora353.menor(-100, 100);
        Assertions.assertEquals(boolean251, true);
        int int531 = calculadora353.mulInt(1000, 1000);
        Assertions.assertEquals(int531, 1000000);
        boolean boolean696 = calculadora353.menor(-500, 500);
        Assertions.assertEquals(boolean696, true);
        boolean boolean856 = calculadora353.or(boolean696, false);
        Assertions.assertEquals(boolean856, false);
    }
    @Test
    public void test2596() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        int int940 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int940, 50000);
        java.lang.String string932 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string932, "lorem");
    }
    @Test
    public void test2598() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        double double866 = calculadora353.subDouble(3.14159, 105.5);
        Assertions.assertEquals(double866, -102.35841);
        double double194 = calculadora353.mulDouble(-1.55, 105.5);
        Assertions.assertEquals(double194, -163.525);
    }
    @Test
    public void test2599() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double903 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double903, -10.953);
        int int154 = calculadora353.somaInt(-250, 250);
        Assertions.assertEquals(int154, 0);
        java.lang.String string21 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string21, "ipsum");
    }
    @Test
    public void test2600() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        java.lang.String string807 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string807, "LOREM");
        int int992 = calculadora353.subInt(-250, 1000);
        Assertions.assertEquals(int992, -1250);
        boolean boolean773 = calculadora353.menor(100, 1000);
        Assertions.assertEquals(boolean773, true);
        double double266 = calculadora353.divDouble(1.99, -1.55);
        Assertions.assertEquals(double266, -1.2838709677419355);
    }
    @Test
    public void test2601() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean779 = calculadora353.menor(-250, -1000);
        Assertions.assertEquals(boolean779, false);
        int int237 = calculadora353.subInt(-1000, -1000);
        Assertions.assertEquals(int237, 0);
        double double773 = calculadora353.divDouble(0.55, 10.953);
        Assertions.assertEquals(double773, 0.0502145530904775);
    }
    @Test
    public void test2602() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        int int725 = calculadora353.mulInt(-1000, -250);
        Assertions.assertEquals(int725, 250000);
        double double858 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double858, 11.503);
        java.lang.String string999 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string999, "LOREM");
        double double337 = calculadora353.divDouble(1.99, -105.5);
        Assertions.assertEquals(double337, -0.01886255924170616);
    }
    @Test
    public void test2603() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double137 = calculadora353.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double137, 1.1);
        boolean boolean554 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean554, false);
        int int231 = calculadora353.subInt(-250, -100);
        Assertions.assertEquals(int231, -150);
    }
    @Test
    public void test2604() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        int int984 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int984, -750);
        java.lang.String string369 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string369, "hi");
        double double613 = calculadora353.somaDouble(-105.5, 10.953);
        Assertions.assertEquals(double613, -94.547);
    }
    @Test
    public void test2605() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        boolean boolean483 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean483, true);
        double double186 = calculadora353.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double186, 9.402999999999999);
        java.lang.String string664 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string664, "VALEU");
    }
    @Test
    public void test2606() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double602 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double602, 58.025000000000006);
        boolean boolean975 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean975, false);
    }
    @Test
    public void test2607() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        int int154 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int154, -100000);
        boolean boolean481 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean481, true);
        double double866 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double866, -58.025000000000006);
    }
    @Test
    public void test2608() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean789 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean789, true);
    }
    @Test
    public void test2610() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        int int30 = calculadora353.somaInt(1000, -100);
        Assertions.assertEquals(int30, 900);
        java.lang.String string596 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string596, "ipsum");
        boolean boolean108 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean108, false);
        double double156 = calculadora353.subDouble(-10.953, 0.0);
        Assertions.assertEquals(double156, -10.953);
    }
    @Test
    public void test2611() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        int int730 = calculadora353.mulInt(1000, 250);
        Assertions.assertEquals(int730, 250000);
        int int981 = calculadora353.subInt(0, 500);
        Assertions.assertEquals(int981, -500);
        double double455 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double455, -1155.5415);
    }
    @Test
    public void test2612() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        double double471 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double471, 19.91454545454545);
        double double290 = calculadora353.subDouble(1.99, 0.55);
        Assertions.assertEquals(double290, 1.44);
        int int501 = calculadora353.divInt(-250, 100);
        Assertions.assertEquals(int501, -2);
        java.lang.String string327 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string327, "VALEU");
        double double42 = calculadora353.divDouble(0.0, -10.953);
        Assertions.assertEquals(double42, -0.0);
    }
    @Test
    public void test2613() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        boolean boolean380 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean380, false);
        boolean boolean135 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean135, false);
        boolean boolean714 = calculadora353.menor(-1000, 100);
        Assertions.assertEquals(boolean714, true);
        java.lang.String string297 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string297, "IPSUM");
        double double300 = calculadora353.subDouble(-105.5, 3.14159);
        Assertions.assertEquals(double300, -108.64159);
    }
    @Test
    public void test2614() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        int int512 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int512, -150);
        java.lang.String string366 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string366, "VALEU");
    }
    @Test
    public void test2616() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean854 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean854, false);
        int int275 = calculadora353.somaInt(0, -100);
        Assertions.assertEquals(int275, -100);
    }
    @Test
    public void test2617() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean610 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean610, true);
        boolean boolean128 = calculadora353.maior(1000, -1000);
        Assertions.assertEquals(boolean128, true);
        java.lang.String string100 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string100, "nice");
        int int412 = calculadora353.mulInt(0, 100);
        Assertions.assertEquals(int412, 0);
    }
    @Test
    public void test2618() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int514 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int514, 250000);
        double double701 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double701, -104.95);
        double double649 = calculadora353.divDouble(1.99, 105.5);
        Assertions.assertEquals(double649, 0.01886255924170616);
        int int525 = calculadora353.subInt(100, -500);
        Assertions.assertEquals(int525, 600);
    }
    @Test
    public void test2620() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        boolean boolean519 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean519, true);
    }
    @Test
    public void test2621() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        boolean boolean952 = calculadora353.or(boolean762, false);
        Assertions.assertEquals(boolean952, false);
    }
    @Test
    public void test2622() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean950 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean950, false);
        java.lang.String string456 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string456, "hello");
        double double71 = calculadora353.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double71, -104.95);
        boolean boolean17 = calculadora353.maior(-500, 0);
        Assertions.assertEquals(boolean17, false);
    }
    @Test
    public void test2623() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        java.lang.String string887 = calculadora353.toUpCase(string796);
        Assertions.assertEquals(string887, STRING796);
        boolean boolean838 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean838, true);
        int int19 = calculadora353.mulInt(250, 250);
        Assertions.assertEquals(int19, 62500);
    }
    @Test
    public void test2624() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        int int853 = calculadora353.somaInt(500, 250);
        Assertions.assertEquals(int853, 750);
        int int528 = calculadora353.mulInt(-500, -250);
        Assertions.assertEquals(int528, 125000);
    }
    @Test
    public void test2626() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        int int154 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int154, -100000);
        boolean boolean481 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean481, true);
        double double866 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double866, -58.025000000000006);
        java.lang.String string508 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string508, "top");
    }
    @Test
    public void test2627() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        boolean boolean93 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean93, false);
        double double160 = calculadora353.divDouble(-10.953, -10.953);
        Assertions.assertEquals(double160, 1.0);
        boolean boolean351 = calculadora353.menor(100, -250);
        Assertions.assertEquals(boolean351, false);
        boolean boolean166 = calculadora353.and(false, boolean351);
        Assertions.assertEquals(boolean166, false);
        double double363 = calculadora353.mulDouble(1.99, 1.99);
        Assertions.assertEquals(double363, 3.9601);
    }
    @Test
    public void test2629() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        double double201 = calculadora353.subDouble(0.0, -10.953);
        Assertions.assertEquals(double201, 10.953);
        int int803 = calculadora353.subInt(250, 100);
        Assertions.assertEquals(int803, 150);
    }
    @Test
    public void test2630() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean154 = calculadora353.menor(-250, 250);
        Assertions.assertEquals(boolean154, true);
        java.lang.String string17 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string17, "ipsum");
        boolean boolean976 = calculadora353.and(boolean154, true);
        Assertions.assertEquals(boolean976, false);
    }
    @Test
    public void test2631() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean322 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean322, false);
        boolean boolean582 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean582, true);
        boolean boolean791 = calculadora353.and(true, boolean721);
        Assertions.assertEquals(boolean791, false);
        boolean boolean689 = calculadora353.maior(500, 0);
        Assertions.assertEquals(boolean689, true);
        boolean boolean385 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean385, false);
    }
    @Test
    public void test2632() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        boolean boolean645 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean645, true);
    }
    @Test
    public void test2633() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        int int114 = calculadora353.divInt(-500, 1000);
        Assertions.assertEquals(int114, 0);
        boolean boolean827 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean827, false);
        java.lang.String string143 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string143, "HI");
    }
    @Test
    public void test2634() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean439 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean439, true);
        boolean boolean704 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean704, false);
        java.lang.String string123 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string123, "GO");
        int int702 = calculadora353.mulInt(-100, 500);
        Assertions.assertEquals(int702, -50000);
        double double106 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double106, 3.54);
    }
    @Test
    public void test2635() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        double double398 = calculadora353.subDouble(0.0, 0.55);
        Assertions.assertEquals(double398, -0.55);
        boolean boolean221 = calculadora353.maior(250, 100);
        Assertions.assertEquals(boolean221, true);
        java.lang.String string957 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string957, "NICE");
        boolean boolean192 = calculadora353.menor(-500, -100);
        Assertions.assertEquals(boolean192, true);
        int int962 = calculadora353.subInt(-100, 1000);
        Assertions.assertEquals(int962, -1100);
    }
    @Test
    public void test2636() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        int int789 = calculadora353.divInt(-100, 500);
        Assertions.assertEquals(int789, 0);
        boolean boolean781 = calculadora353.menor(-250, 100);
        Assertions.assertEquals(boolean781, true);
        java.lang.String string108 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string108, "hello");
        int int964 = calculadora353.somaInt(-1000, 0);
        Assertions.assertEquals(int964, -1000);
    }
    @Test
    public void test2637() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        boolean boolean694 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean694, false);
        double double798 = calculadora353.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double798, -1.55);
        boolean boolean243 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean243, false);
        boolean boolean363 = calculadora353.maior(0, 1000);
        Assertions.assertEquals(boolean363, false);
    }
    @Test
    public void test2638() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double775 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double775, 6.28318);
        double double428 = calculadora353.mulDouble(-105.5, 3.14159);
        Assertions.assertEquals(double428, -331.437745);
        boolean boolean577 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean577, true);
        boolean boolean271 = calculadora353.and(boolean577, true);
        Assertions.assertEquals(boolean271, false);
    }
    @Test
    public void test2639() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        int int37 = calculadora353.somaInt(250, 100);
        Assertions.assertEquals(int37, 350);
        int int660 = calculadora353.somaInt(-500, 0);
        Assertions.assertEquals(int660, -500);
        int int435 = calculadora353.somaInt(100, -500);
        Assertions.assertEquals(int435, -400);
    }
    @Test
    public void test2640() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int856 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int856, -2);
        boolean boolean27 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean27, true);
        double double680 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double680, 58.025000000000006);
    }
    @Test
    public void test2641() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        int int473 = calculadora353.divInt(-1000, -100);
        Assertions.assertEquals(int473, 10);
        boolean boolean255 = calculadora353.menor(250, 1000);
        Assertions.assertEquals(boolean255, true);
        double double503 = calculadora353.mulDouble(105.5, -105.5);
        Assertions.assertEquals(double503, -11130.25);
    }
    @Test
    public void test2642() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double139 = calculadora353.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double139, 6.2517641);
    }
    @Test
    public void test2643() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        boolean boolean808 = calculadora353.menor(100, 1000);
        Assertions.assertEquals(boolean808, true);
        double double173 = calculadora353.subDouble(0.0, 1.99);
        Assertions.assertEquals(double173, -1.99);
        double double152 = calculadora353.divDouble(0.0, 105.5);
        Assertions.assertEquals(double152, 0.0);
    }
    @Test
    public void test2644() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string446 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string446, "VALEU");
        java.lang.String string991 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string991, "nice");
        double double719 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double719, -0.005213270142180095);
        boolean boolean909 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean909, false);
        int int739 = calculadora353.subInt(100, 500);
        Assertions.assertEquals(int739, -400);
    }
    @Test
    public void test2646() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int795 = calculadora353.somaInt(-500, -1000);
        Assertions.assertEquals(int795, -1500);
        boolean boolean0 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean0, false);
        int int906 = calculadora353.divInt(1000, 1000);
        Assertions.assertEquals(int906, 1);
    }
    @Test
    public void test2647() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double658 = calculadora353.divDouble(105.5, 0.55);
        Assertions.assertEquals(double658, 191.8181818181818);
        boolean boolean880 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean880, true);
        boolean boolean727 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean727, true);
    }
    @Test
    public void test2648() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        int int696 = calculadora353.divInt(-250, -1000);
        Assertions.assertEquals(int696, 0);
        java.lang.String string605 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string605, "top");
    }
    @Test
    public void test2649() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        double double798 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double798, 94.547);
        double double381 = calculadora353.subDouble(0.55, 0.0);
        Assertions.assertEquals(double381, 0.55);
        boolean boolean314 = calculadora353.maior(-100, -100);
        Assertions.assertEquals(boolean314, false);
        double double157 = calculadora353.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double157, -14.09459);
    }
    @Test
    public void test2650() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        double double638 = calculadora353.subDouble(-1.55, 10.953);
        Assertions.assertEquals(double638, -12.503);
    }
    @Test
    public void test2652() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        java.lang.String string561 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string561, "top");
        boolean boolean993 = calculadora353.maior(0, 500);
        Assertions.assertEquals(boolean993, false);
        java.lang.String string670 = calculadora353.toUpCase(string263);
        Assertions.assertEquals(string670, STRING263);
    }
    @Test
    public void test2653() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        boolean boolean620 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean620, false);
        java.lang.String string126 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string126, "HI");
        double double593 = calculadora353.mulDouble(-105.5, 0.55);
        Assertions.assertEquals(double593, -58.025000000000006);
    }
    @Test
    public void test2654() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean597 = calculadora353.maior(100, -100);
        Assertions.assertEquals(boolean597, true);
        double double491 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double491, -209.945);
        double double845 = calculadora353.divDouble(3.14159, -105.5);
        Assertions.assertEquals(double845, -0.029778104265402842);
        java.lang.String string693 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string693, "nice");
        java.lang.String string859 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string859, "hi");
        boolean boolean674 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean674, false);
        boolean boolean210 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean210, false);
    }
    @Test
    public void test2655() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        boolean boolean237 = calculadora353.and(false, boolean815);
        Assertions.assertEquals(boolean237, false);
        double double853 = calculadora353.somaDouble(1.99, 10.953);
        Assertions.assertEquals(double853, 12.943);
        boolean boolean861 = calculadora353.menor(250, 0);
        Assertions.assertEquals(boolean861, false);
    }
    @Test
    public void test2656() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int986 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int986, -1500);
        boolean boolean777 = calculadora353.maior(-250, -250);
        Assertions.assertEquals(boolean777, false);
        double double25 = calculadora353.somaDouble(-1.55, 0.55);
        Assertions.assertEquals(double25, -1.0);
    }
    @Test
    public void test2657() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double447 = calculadora353.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double447, -0.8525000000000001);
        double double496 = calculadora353.subDouble(105.5, -105.5);
        Assertions.assertEquals(double496, 211.0);
        java.lang.String string7 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string7, "LOREM");
        java.lang.String string20 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string20, "VALEU");
    }
    @Test
    public void test2658() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string281 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string281, "VALEU");
        boolean boolean856 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean856, true);
    }
    @Test
    public void test2659() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        double double761 = calculadora353.divDouble(10.953, 0.0);
        Assertions.assertEquals(double761, Infinity);
        java.lang.String string472 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string472, "valeu");
        boolean boolean764 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean764, false);
    }
    @Test
    public void test2661() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        boolean boolean380 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean380, false);
        boolean boolean135 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean135, false);
        boolean boolean962 = calculadora353.menor(0, 1000);
        Assertions.assertEquals(boolean962, true);
        int int243 = calculadora353.divInt(100, -1000);
        Assertions.assertEquals(int243, 0);
        int int543 = calculadora353.divInt(-500, 500);
        Assertions.assertEquals(int543, -1);
    }
    @Test
    public void test2662() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        boolean boolean625 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean625, false);
        java.lang.String string112 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string112, "IPSUM");
        java.lang.String string992 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string992, "lorem");
    }
    @Test
    public void test2663() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean410 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean410, true);
        double double839 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double839, 103.95);
        java.lang.String string3 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string3, "hello");
    }
    @Test
    public void test2664() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean452 = calculadora353.or(true, boolean597);
        Assertions.assertEquals(boolean452, true);
        int int514 = calculadora353.divInt(500, 250);
        Assertions.assertEquals(int514, 2);
    }
    @Test
    public void test2665() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double763 = calculadora353.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double763, 1.0945);
        double double757 = calculadora353.mulDouble(3.14159, 0.0);
        Assertions.assertEquals(double757, 0.0);
        boolean boolean899 = calculadora353.and(boolean811, false);
        Assertions.assertEquals(boolean899, false);
    }
    @Test
    public void test2666() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        double double471 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double471, 19.91454545454545);
        double double290 = calculadora353.subDouble(1.99, 0.55);
        Assertions.assertEquals(double290, 1.44);
        boolean boolean673 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean673, false);
    }
    @Test
    public void test2667() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        java.lang.String string604 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string604, "LOREM");
        int int156 = calculadora353.somaInt(250, 500);
        Assertions.assertEquals(int156, 750);
        double double961 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double961, -8.963);
        boolean boolean854 = calculadora353.menor(-100, -500);
        Assertions.assertEquals(boolean854, false);
    }
    @Test
    public void test2668() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        java.lang.String string695 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string695, "nice");
        int int593 = calculadora353.somaInt(500, -100);
        Assertions.assertEquals(int593, 400);
        boolean boolean702 = calculadora353.or(boolean497, true);
        Assertions.assertEquals(boolean702, true);
    }
    @Test
    public void test2669() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        double double110 = calculadora353.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double110, 0.0);
        boolean boolean82 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean82, false);
        double double428 = calculadora353.subDouble(0.0, 105.5);
        Assertions.assertEquals(double428, -105.5);
        java.lang.String string274 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string274, "nice");
    }
    @Test
    public void test2670() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        int int352 = calculadora353.divInt(1000, -1000);
        Assertions.assertEquals(int352, -1);
        boolean boolean769 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean769, true);
    }
    @Test
    public void test2671() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        int int853 = calculadora353.somaInt(500, 250);
        Assertions.assertEquals(int853, 750);
        int int528 = calculadora353.mulInt(-500, -250);
        Assertions.assertEquals(int528, 125000);
        boolean boolean162 = calculadora353.or(boolean940, true);
        Assertions.assertEquals(boolean162, true);
    }
    @Test
    public void test2672() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int748 = calculadora353.subInt(-250, -250);
        Assertions.assertEquals(int748, 0);
        boolean boolean305 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean305, true);
        int int515 = calculadora353.somaInt(-1000, 250);
        Assertions.assertEquals(int515, -750);
        boolean boolean184 = calculadora353.and(boolean305, true);
        Assertions.assertEquals(boolean184, false);
        int int404 = calculadora353.mulInt(250, 1000);
        Assertions.assertEquals(int404, 250000);
        int int710 = calculadora353.subInt(100, -250);
        Assertions.assertEquals(int710, 350);
    }
    @Test
    public void test2673() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean999 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean999, true);
        boolean boolean770 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean770, false);
        java.lang.String string314 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string314, "HI");
        java.lang.String string356 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string356, "GO");
        boolean boolean820 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean820, true);
    }
    @Test
    public void test2674() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        boolean boolean691 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean691, false);
        double double74 = calculadora353.divDouble(0.55, -10.953);
        Assertions.assertEquals(double74, -0.0502145530904775);
        boolean boolean830 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean830, true);
        boolean boolean775 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean775, true);
        int int624 = calculadora353.somaInt(-250, 1000);
        Assertions.assertEquals(int624, 750);
    }
    @Test
    public void test2675() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        int int648 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int648, -1250);
        boolean boolean849 = calculadora353.and(boolean825, true);
        Assertions.assertEquals(boolean849, false);
    }
    @Test
    public void test2676() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int425 = calculadora353.divInt(1000, 100);
        Assertions.assertEquals(int425, 10);
        boolean boolean165 = calculadora353.and(true, boolean906);
        Assertions.assertEquals(boolean165, false);
        java.lang.String string978 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string978, "LOREM");
        double double502 = calculadora353.subDouble(0.55, 0.55);
        Assertions.assertEquals(double502, 0.0);
    }
    @Test
    public void test2677() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
        boolean boolean911 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean911, false);
        double double661 = calculadora353.divDouble(1.99, 0.55);
        Assertions.assertEquals(double661, 3.6181818181818177);
    }
    @Test
    public void test2678() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        boolean boolean359 = calculadora353.maior(-100, -500);
        Assertions.assertEquals(boolean359, true);
        double double280 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double280, -0.005213270142180095);
        double double873 = calculadora353.mulDouble(105.5, 105.5);
        Assertions.assertEquals(double873, 11130.25);
    }
    @Test
    public void test2679() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        java.lang.String string310 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string310, "IPSUM");
        double double899 = calculadora353.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double899, -105.5);
        boolean boolean922 = calculadora353.maior(-500, -250);
        Assertions.assertEquals(boolean922, false);
        java.lang.String string750 = calculadora353.toUpCase(string310);
        Assertions.assertEquals(string750, STRING310);
    }
    @Test
    public void test2680() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean122 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean122, false);
        boolean boolean297 = calculadora353.maior(-100, 250);
        Assertions.assertEquals(boolean297, false);
        int int849 = calculadora353.somaInt(-1000, -100);
        Assertions.assertEquals(int849, -1100);
        java.lang.String string786 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string786, "VALEU");
        int int978 = calculadora353.subInt(-100, 250);
        Assertions.assertEquals(int978, -350);
        double double365 = calculadora353.somaDouble(105.5, 105.5);
        Assertions.assertEquals(double365, 211.0);
    }
    @Test
    public void test2681() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
        boolean boolean802 = calculadora353.or(boolean825, false);
        Assertions.assertEquals(boolean802, false);
        java.lang.String string699 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string699, "top");
        boolean boolean413 = calculadora353.or(false, boolean825);
        Assertions.assertEquals(boolean413, false);
        boolean boolean0 = calculadora353.maior(250, -250);
        Assertions.assertEquals(boolean0, true);
        int int252 = calculadora353.somaInt(-100, -500);
        Assertions.assertEquals(int252, -600);
    }
    @Test
    public void test2682() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int104 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int104, -125000);
        int int150 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int150, -25000);
        java.lang.String string426 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string426, "valeu");
        java.lang.String string121 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string121, "go");
        boolean boolean915 = calculadora353.menor(-250, -250);
        Assertions.assertEquals(boolean915, false);
    }
    @Test
    public void test2683() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        boolean boolean888 = calculadora353.or(false, boolean561);
        Assertions.assertEquals(boolean888, false);
    }
    @Test
    public void test2684() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
        boolean boolean802 = calculadora353.or(boolean825, false);
        Assertions.assertEquals(boolean802, false);
        double double141 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double141, 0.0);
    }
    @Test
    public void test2685() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        int int192 = calculadora353.subInt(0, 250);
        Assertions.assertEquals(int192, -250);
        double double515 = calculadora353.divDouble(-105.5, -105.5);
        Assertions.assertEquals(double515, 1.0);
        java.lang.String string350 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string350, "GO");
        double double788 = calculadora353.divDouble(0.0, 10.953);
        Assertions.assertEquals(double788, 0.0);
    }
    @Test
    public void test2686() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        double double775 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double775, 6.28318);
        double double428 = calculadora353.mulDouble(-105.5, 3.14159);
        Assertions.assertEquals(double428, -331.437745);
        boolean boolean577 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean577, true);
        java.lang.String string420 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string420, "VALEU");
    }
    @Test
    public void test2687() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        double double119 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double119, 2.59159);
        java.lang.String string238 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string238, "GO");
    }
    @Test
    public void test2688() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean593 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean593, false);
        boolean boolean228 = calculadora353.and(boolean593, false);
        Assertions.assertEquals(boolean228, false);
        boolean boolean250 = calculadora353.menor(100, 250);
        Assertions.assertEquals(boolean250, true);
        double double95 = calculadora353.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double95, -1155.5415);
        double double96 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double96, 106.05);
        boolean boolean240 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean240, true);
        java.lang.String string552 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string552, "hello");
    }
    @Test
    public void test2689() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean597 = calculadora353.maior(100, -100);
        Assertions.assertEquals(boolean597, true);
        int int745 = calculadora353.subInt(500, -250);
        Assertions.assertEquals(int745, 750);
    }
    @Test
    public void test2691() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean246 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean246, false);
        boolean boolean478 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean478, false);
        boolean boolean284 = calculadora353.menor(500, -500);
        Assertions.assertEquals(boolean284, false);
        double double961 = calculadora353.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double961, -0.0);
    }
    @Test
    public void test2693() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        double double673 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double673, -1155.5415);
        boolean boolean676 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean676, true);
        double double8 = calculadora353.somaDouble(-1.55, 10.953);
        Assertions.assertEquals(double8, 9.402999999999999);
    }
    @Test
    public void test2694() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        int int386 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int386, 350);
        boolean boolean245 = calculadora353.menor(100, 100);
        Assertions.assertEquals(boolean245, false);
        boolean boolean292 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean292, false);
        int int125 = calculadora353.divInt(1000, -250);
        Assertions.assertEquals(int125, -4);
    }
    @Test
    public void test2695() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        int int863 = calculadora353.somaInt(-250, -500);
        Assertions.assertEquals(int863, -750);
        double double50 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double50, 103.51);
        int int242 = calculadora353.subInt(-100, -100);
        Assertions.assertEquals(int242, 0);
    }
    @Test
    public void test2696() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        java.lang.String string278 = calculadora353.toUpCase(string603);
        Assertions.assertEquals(string278, STRING603);
        double double627 = calculadora353.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double627, -16.977149999999998);
        boolean boolean800 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean800, true);
    }
    @Test
    public void test2697() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean576 = calculadora353.menor(0, -1000);
        Assertions.assertEquals(boolean576, false);
        boolean boolean13 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean13, false);
        boolean boolean497 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean497, true);
        java.lang.String string695 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string695, "nice");
        double double133 = calculadora353.somaDouble(-10.953, -1.55);
        Assertions.assertEquals(double133, -12.503);
    }
    @Test
    public void test2698() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int104 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int104, -125000);
        int int150 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int150, -25000);
        java.lang.String string426 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string426, "valeu");
        double double506 = calculadora353.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double506, 1.7278745);
        int int321 = calculadora353.divInt(-500, 1000);
        Assertions.assertEquals(int321, 0);
        boolean boolean98 = calculadora353.and(boolean380, false);
        Assertions.assertEquals(boolean98, false);
    }
    @Test
    public void test2699() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean68 = calculadora353.menor(1000, -1000);
        Assertions.assertEquals(boolean68, false);
        int int69 = calculadora353.subInt(-500, -250);
        Assertions.assertEquals(int69, -250);
    }
    @Test
    public void test2700() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
        java.lang.String string62 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string62, "nice");
    }
    @Test
    public void test2701() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        int int555 = calculadora353.somaInt(-1000, -250);
        Assertions.assertEquals(int555, -1250);
        boolean boolean13 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean13, true);
        java.lang.String string344 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string344, "VALEU");
    }
    @Test
    public void test2702() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        java.lang.String string43 = calculadora353.toLowCase(string603);
        Assertions.assertEquals(string43, string603);
        boolean boolean448 = calculadora353.menor(250, -250);
        Assertions.assertEquals(boolean448, false);
        java.lang.String string871 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string871, "valeu");
        double double673 = calculadora353.mulDouble(-1.55, -105.5);
        Assertions.assertEquals(double673, 163.525);
    }
    @Test
    public void test2703() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        boolean boolean625 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean625, false);
        int int511 = calculadora353.mulInt(-100, -100);
        Assertions.assertEquals(int511, 10000);
        boolean boolean763 = calculadora353.or(false, boolean988);
        Assertions.assertEquals(boolean763, false);
    }
    @Test
    public void test2707() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        double double4 = calculadora353.subDouble(10.953, 1.99);
        Assertions.assertEquals(double4, 8.963);
        boolean boolean740 = calculadora353.maior(-100, 500);
        Assertions.assertEquals(boolean740, false);
    }
    @Test
    public void test2709() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        double double398 = calculadora353.subDouble(0.0, 0.55);
        Assertions.assertEquals(double398, -0.55);
        boolean boolean221 = calculadora353.maior(250, 100);
        Assertions.assertEquals(boolean221, true);
        java.lang.String string957 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string957, "NICE");
        boolean boolean27 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean27, true);
    }
    @Test
    public void test2710() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        int int135 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int135, 25000);
        java.lang.String string172 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string172, "nice");
        double double770 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double770, -8.963);
    }
    @Test
    public void test2711() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int885 = calculadora353.mulInt(-500, -100);
        Assertions.assertEquals(int885, 50000);
        double double333 = calculadora353.subDouble(1.99, -10.953);
        Assertions.assertEquals(double333, 12.943);
    }
    @Test
    public void test2712() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean617 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean617, false);
        double double621 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double621, -8.963);
        int int990 = calculadora353.subInt(-100, -250);
        Assertions.assertEquals(int990, 150);
        boolean boolean301 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean301, true);
        int int291 = calculadora353.somaInt(-250, -1000);
        Assertions.assertEquals(int291, -1250);
    }
    @Test
    public void test2713() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
        double double686 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double686, -104.95);
        boolean boolean428 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean428, false);
        boolean boolean86 = calculadora353.menor(1000, -500);
        Assertions.assertEquals(boolean86, false);
    }
    @Test
    public void test2714() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        boolean boolean440 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean440, true);
        int int607 = calculadora353.somaInt(-250, 0);
        Assertions.assertEquals(int607, -250);
    }
    @Test
    public void test2715() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        java.lang.String string278 = calculadora353.toUpCase(string603);
        Assertions.assertEquals(string278, STRING603);
        boolean boolean453 = calculadora353.maior(0, 1000);
        Assertions.assertEquals(boolean453, false);
    }
    @Test
    public void test2716() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean887 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean887, false);
        double double838 = calculadora353.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double838, 0.0);
        java.lang.String string710 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string710, "lorem");
    }
    @Test
    public void test2717() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        int int491 = calculadora353.mulInt(1000, -500);
        Assertions.assertEquals(int491, -500000);
        double double698 = calculadora353.somaDouble(3.14159, -1.55);
        Assertions.assertEquals(double698, 1.5915899999999998);
    }
    @Test
    public void test2718() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        double double341 = calculadora353.mulDouble(3.14159, 105.5);
        Assertions.assertEquals(double341, 331.437745);
        java.lang.String string55 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string55, "ipsum");
        double double926 = calculadora353.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double926, 0.0);
        double double879 = calculadora353.divDouble(-10.953, 10.953);
        Assertions.assertEquals(double879, -1.0);
        java.lang.String string61 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string61, "TOP");
    }
    @Test
    public void test2719() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        boolean boolean558 = calculadora353.maior(1000, 250);
        Assertions.assertEquals(boolean558, true);
        boolean boolean133 = calculadora353.maior(500, 500);
        Assertions.assertEquals(boolean133, false);
        boolean boolean729 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean729, true);
        double double216 = calculadora353.subDouble(-10.953, 0.0);
        Assertions.assertEquals(double216, -10.953);
        java.lang.String string890 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string890, "hello");
    }
    @Test
    public void test2720() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        int int329 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int329, 0);
        boolean boolean461 = calculadora353.maior(100, -1000);
        Assertions.assertEquals(boolean461, true);
        java.lang.String string693 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string693, "go");
    }
    @Test
    public void test2721() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        int int940 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int940, 50000);
        double double652 = calculadora353.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double652, 0.0);
        java.lang.String string912 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string912, "go");
        boolean boolean371 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean371, true);
    }
    @Test
    public void test2723() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        double double268 = calculadora353.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double268, 5.13159);
        double double171 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double171, -1.0);
    }
    @Test
    public void test2724() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean410 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean410, true);
        double double839 = calculadora353.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double839, 103.95);
        boolean boolean400 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean400, true);
        boolean boolean33 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean33, false);
        boolean boolean958 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean958, true);
    }
    @Test
    public void test2725() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string446 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string446, "VALEU");
        java.lang.String string991 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string991, "nice");
        boolean boolean447 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean447, true);
        double double238 = calculadora353.subDouble(105.5, -105.5);
        Assertions.assertEquals(double238, 211.0);
    }
    @Test
    public void test2726() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string980 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string980, "IPSUM");
        int int806 = calculadora353.mulInt(-500, -500);
        Assertions.assertEquals(int806, 250000);
        boolean boolean380 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean380, false);
        boolean boolean919 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean919, true);
        boolean boolean968 = calculadora353.menor(0, 100);
        Assertions.assertEquals(boolean968, true);
        int int446 = calculadora353.somaInt(-100, 1000);
        Assertions.assertEquals(int446, 900);
    }
    @Test
    public void test2727() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        java.lang.String string506 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string506, "nice");
    }
    @Test
    public void test2728() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        boolean boolean388 = calculadora353.and(boolean58, true);
        Assertions.assertEquals(boolean388, false);
        double double4 = calculadora353.subDouble(10.953, 1.99);
        Assertions.assertEquals(double4, 8.963);
        boolean boolean375 = calculadora353.and(true, boolean58);
        Assertions.assertEquals(boolean375, false);
        boolean boolean431 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean431, false);
    }
    @Test
    public void test2729() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        boolean boolean278 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean278, true);
        boolean boolean175 = calculadora353.menor(-1000, -1000);
        Assertions.assertEquals(boolean175, false);
        double double447 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double447, -0.005213270142180095);
        int int793 = calculadora353.divInt(-500, 500);
        Assertions.assertEquals(int793, -1);
    }
    @Test
    public void test2730() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
        java.lang.String string30 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string30, "go");
        int int338 = calculadora353.somaInt(0, 0);
        Assertions.assertEquals(int338, 0);
        boolean boolean505 = calculadora353.maior(0, 1000);
        Assertions.assertEquals(boolean505, false);
        boolean boolean88 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean88, false);
    }
    @Test
    public void test2731() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean887 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean887, false);
        double double838 = calculadora353.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double838, 0.0);
        double double480 = calculadora353.somaDouble(1.99, -105.5);
        Assertions.assertEquals(double480, -103.51);
    }
    @Test
    public void test2733() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        java.lang.String string173 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string173, "valeu");
        boolean boolean523 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean523, false);
        boolean boolean383 = calculadora353.maior(500, -250);
        Assertions.assertEquals(boolean383, true);
    }
    @Test
    public void test2734() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
        boolean boolean259 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean259, true);
        boolean boolean18 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean18, false);
        double double18 = calculadora353.subDouble(105.5, -1.55);
        Assertions.assertEquals(double18, 107.05);
        java.lang.String string767 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string767, "NICE");
        boolean boolean137 = calculadora353.menor(0, 1000);
        Assertions.assertEquals(boolean137, true);
    }
    @Test
    public void test2735() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        java.lang.String string854 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string854, "HI");
        java.lang.String string707 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string707, "hi");
        java.lang.String string222 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string222, "valeu");
    }
    @Test
    public void test2736() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        java.lang.String string64 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string64, "VALEU");
        int int388 = calculadora353.subInt(250, 500);
        Assertions.assertEquals(int388, -250);
    }
    @Test
    public void test2737() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        boolean boolean359 = calculadora353.maior(-100, -500);
        Assertions.assertEquals(boolean359, true);
        double double280 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double280, -0.005213270142180095);
        double double918 = calculadora353.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double918, -105.5);
        boolean boolean90 = calculadora353.maior(0, -1000);
        Assertions.assertEquals(boolean90, true);
        boolean boolean182 = calculadora353.maior(-250, -100);
        Assertions.assertEquals(boolean182, false);
    }
    @Test
    public void test2738() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        int int45 = calculadora353.divInt(500, -1000);
        Assertions.assertEquals(int45, 0);
        int int550 = calculadora353.somaInt(0, 100);
        Assertions.assertEquals(int550, 100);
        double double565 = calculadora353.subDouble(-1.55, -105.5);
        Assertions.assertEquals(double565, 103.95);
        double double185 = calculadora353.mulDouble(1.99, -1.55);
        Assertions.assertEquals(double185, -3.0845000000000002);
    }
    @Test
    public void test2739() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean166 = calculadora353.and(true, boolean718);
        Assertions.assertEquals(boolean166, false);
        boolean boolean789 = calculadora353.maior(500, -100);
        Assertions.assertEquals(boolean789, true);
        int int369 = calculadora353.mulInt(250, -100);
        Assertions.assertEquals(int369, -25000);
    }
    @Test
    public void test2740() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double954 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double954, 6.28318);
        double double891 = calculadora353.divDouble(0.0, -105.5);
        Assertions.assertEquals(double891, -0.0);
        double double620 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double620, -10.953);
        boolean boolean233 = calculadora353.maior(-500, -100);
        Assertions.assertEquals(boolean233, false);
        java.lang.String string84 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string84, "IPSUM");
        java.lang.String string780 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string780, "nice");
    }
    @Test
    public void test2741() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        double double858 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double858, Infinity);
        java.lang.String string53 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string53, "hello");
        double double882 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double882, -1.0);
        int int461 = calculadora353.subInt(500, -250);
        Assertions.assertEquals(int461, 750);
        boolean boolean591 = calculadora353.menor(500, 500);
        Assertions.assertEquals(boolean591, false);
        boolean boolean818 = calculadora353.menor(500, -500);
        Assertions.assertEquals(boolean818, false);
        boolean boolean943 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean943, false);
    }
    @Test
    public void test2742() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        boolean boolean359 = calculadora353.maior(-100, -500);
        Assertions.assertEquals(boolean359, true);
        double double280 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double280, -0.005213270142180095);
        java.lang.String string497 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string497, "hi");
        java.lang.String string466 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string466, "TOP");
        double double835 = calculadora353.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double835, 0.0);
    }
    @Test
    public void test2743() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        double double673 = calculadora353.subDouble(-105.5, -10.953);
        Assertions.assertEquals(double673, -94.547);
        boolean boolean512 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean512, true);
        double double760 = calculadora353.subDouble(105.5, 105.5);
        Assertions.assertEquals(double760, 0.0);
        double double157 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double157, -1.55);
    }
    @Test
    public void test2744() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int336 = calculadora353.divInt(0, 250);
        Assertions.assertEquals(int336, 0);
        boolean boolean759 = calculadora353.or(false, boolean597);
        Assertions.assertEquals(boolean759, false);
        java.lang.String string445 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string445, "IPSUM");
    }
    @Test
    public void test2745() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        int int940 = calculadora353.mulInt(500, 100);
        Assertions.assertEquals(int940, 50000);
        double double579 = calculadora353.subDouble(1.99, -105.5);
        Assertions.assertEquals(double579, 107.49);
        java.lang.String string948 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string948, "hello");
    }
    @Test
    public void test2746() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean411 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean411, true);
    }
    @Test
    public void test2747() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        java.lang.String string402 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string402, "IPSUM");
        boolean boolean612 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean612, true);
        int int141 = calculadora353.somaInt(-1000, -500);
        Assertions.assertEquals(int141, -1500);
        java.lang.String string885 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string885, "VALEU");
        double double600 = calculadora353.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double600, -14.09459);
        boolean boolean389 = calculadora353.menor(-1000, 1000);
        Assertions.assertEquals(boolean389, true);
    }
    @Test
    public void test2748() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        double double396 = calculadora353.somaDouble(-10.953, 0.55);
        Assertions.assertEquals(double396, -10.402999999999999);
        boolean boolean536 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean536, true);
        int int865 = calculadora353.somaInt(-100, 250);
        Assertions.assertEquals(int865, 150);
    }
    @Test
    public void test2749() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        int int744 = calculadora353.mulInt(500, -1000);
        Assertions.assertEquals(int744, -500000);
    }
    @Test
    public void test2750() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        double double477 = calculadora353.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double477, 1.0945);
        double double411 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double411, -1.55);
        boolean boolean126 = calculadora353.menor(100, 1000);
        Assertions.assertEquals(boolean126, true);
    }
    @Test
    public void test2751() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        double double604 = calculadora353.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double604, 5.711981818181817);
        int int932 = calculadora353.mulInt(250, 100);
        Assertions.assertEquals(int932, 25000);
        boolean boolean251 = calculadora353.maior(500, 500);
        Assertions.assertEquals(boolean251, false);
    }
    @Test
    public void test2753() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        int int445 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int445, 250);
        boolean boolean888 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean888, false);
        boolean boolean808 = calculadora353.menor(100, 1000);
        Assertions.assertEquals(boolean808, true);
        double double173 = calculadora353.subDouble(0.0, 1.99);
        Assertions.assertEquals(double173, -1.99);
        double double152 = calculadora353.divDouble(0.0, 105.5);
        Assertions.assertEquals(double152, 0.0);
        double double796 = calculadora353.mulDouble(-10.953, 3.14159);
        Assertions.assertEquals(double796, -34.409835269999995);
    }
    @Test
    public void test2755() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        double double756 = calculadora353.subDouble(105.5, 10.953);
        Assertions.assertEquals(double756, 94.547);
        boolean boolean802 = calculadora353.or(boolean825, false);
        Assertions.assertEquals(boolean802, false);
        java.lang.String string699 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string699, "top");
        boolean boolean413 = calculadora353.or(false, boolean825);
        Assertions.assertEquals(boolean413, false);
        boolean boolean0 = calculadora353.maior(250, -250);
        Assertions.assertEquals(boolean0, true);
        boolean boolean542 = calculadora353.maior(500, 1000);
        Assertions.assertEquals(boolean542, false);
    }
    @Test
    public void test2758() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        double double471 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double471, 19.91454545454545);
        int int299 = calculadora353.divInt(1000, 1000);
        Assertions.assertEquals(int299, 1);
        boolean boolean200 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean200, false);
        boolean boolean766 = calculadora353.menor(100, -1000);
        Assertions.assertEquals(boolean766, false);
    }
    @Test
    public void test2759() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double325 = calculadora353.subDouble(-1.55, 1.99);
        Assertions.assertEquals(double325, -3.54);
        int int281 = calculadora353.divInt(-100, -100);
        Assertions.assertEquals(int281, 1);
        int int60 = calculadora353.mulInt(1000, 250);
        Assertions.assertEquals(int60, 250000);
    }
    @Test
    public void test2760() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        int int65 = calculadora353.somaInt(100, 500);
        Assertions.assertEquals(int65, 600);
        int int808 = calculadora353.mulInt(-250, -250);
        Assertions.assertEquals(int808, 62500);
        int int211 = calculadora353.somaInt(500, 0);
        Assertions.assertEquals(int211, 500);
        double double244 = calculadora353.subDouble(-10.953, 0.55);
        Assertions.assertEquals(double244, -11.503);
        boolean boolean371 = calculadora353.maior(500, 100);
        Assertions.assertEquals(boolean371, true);
    }
    @Test
    public void test2761() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean394 = calculadora353.maior(250, 250);
        Assertions.assertEquals(boolean394, false);
        boolean boolean970 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean970, true);
        boolean boolean731 = calculadora353.maior(1000, 1000);
        Assertions.assertEquals(boolean731, false);
        boolean boolean443 = calculadora353.menor(-500, 500);
        Assertions.assertEquals(boolean443, true);
    }
    @Test
    public void test2762() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean999 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean999, true);
        boolean boolean770 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean770, false);
        java.lang.String string314 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string314, "HI");
        java.lang.String string356 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string356, "GO");
        boolean boolean820 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean820, true);
        java.lang.String string403 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string403, "LOREM");
    }
    @Test
    public void test2763() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        boolean boolean560 = calculadora353.or(true, boolean906);
        Assertions.assertEquals(boolean560, true);
        int int953 = calculadora353.divInt(250, 100);
        Assertions.assertEquals(int953, 2);
        java.lang.String string906 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string906, "HELLO");
        boolean boolean842 = calculadora353.maior(1000, -250);
        Assertions.assertEquals(boolean842, true);
        boolean boolean248 = calculadora353.maior(500, 500);
        Assertions.assertEquals(boolean248, false);
    }
    @Test
    public void test2764() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        double double398 = calculadora353.subDouble(0.0, 0.55);
        Assertions.assertEquals(double398, -0.55);
        boolean boolean221 = calculadora353.maior(250, 100);
        Assertions.assertEquals(boolean221, true);
        java.lang.String string957 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string957, "NICE");
        boolean boolean192 = calculadora353.menor(-500, -100);
        Assertions.assertEquals(boolean192, true);
        boolean boolean146 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean146, false);
    }
    @Test
    public void test2766() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int438 = calculadora353.somaInt(-100, -500);
        Assertions.assertEquals(int438, -600);
        java.lang.String string531 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string531, "NICE");
        boolean boolean384 = calculadora353.maior(250, -250);
        Assertions.assertEquals(boolean384, true);
        int int631 = calculadora353.somaInt(1000, -1000);
        Assertions.assertEquals(int631, 0);
    }
    @Test
    public void test2767() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        int int495 = calculadora353.somaInt(1000, 250);
        Assertions.assertEquals(int495, 1250);
        boolean boolean561 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean561, true);
        int int212 = calculadora353.mulInt(-1000, 100);
        Assertions.assertEquals(int212, -100000);
        int int183 = calculadora353.subInt(1000, 1000);
        Assertions.assertEquals(int183, 0);
        double double475 = calculadora353.subDouble(10.953, -1.55);
        Assertions.assertEquals(double475, 12.503);
    }
    @Test
    public void test2768() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        int int711 = calculadora353.divInt(500, 1000);
        Assertions.assertEquals(int711, 0);
        boolean boolean39 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean39, true);
        double double414 = calculadora353.subDouble(0.55, 0.55);
        Assertions.assertEquals(double414, 0.0);
    }
    @Test
    public void test2769() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean597 = calculadora353.maior(100, -100);
        Assertions.assertEquals(boolean597, true);
        double double491 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double491, -209.945);
        int int778 = calculadora353.subInt(0, -250);
        Assertions.assertEquals(int778, 250);
    }
    @Test
    public void test2770() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double351 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double351, Infinity);
        java.lang.String string770 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string770, "lorem");
        double double150 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double150, -0.0);
        boolean boolean530 = calculadora353.menor(-500, 100);
        Assertions.assertEquals(boolean530, true);
    }
    @Test
    public void test2771() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double508 = calculadora353.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double508, -0.2868246142609331);
        double double218 = calculadora353.somaDouble(0.0, 105.5);
        Assertions.assertEquals(double218, 105.5);
    }
    @Test
    public void test2772() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        java.lang.String string794 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string794, "IPSUM");
    }
    @Test
    public void test2773() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        boolean boolean597 = calculadora353.maior(100, -100);
        Assertions.assertEquals(boolean597, true);
        double double491 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double491, -209.945);
        double double845 = calculadora353.divDouble(3.14159, -105.5);
        Assertions.assertEquals(double845, -0.029778104265402842);
        java.lang.String string693 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string693, "nice");
        java.lang.String string859 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string859, "hi");
        boolean boolean674 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean674, false);
        boolean boolean210 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean210, false);
        boolean boolean680 = calculadora353.maior(-250, 250);
        Assertions.assertEquals(boolean680, false);
    }
    @Test
    public void test2774() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        boolean boolean811 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean811, true);
        double double361 = calculadora353.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double361, -102.35841);
        int int561 = calculadora353.mulInt(100, 0);
        Assertions.assertEquals(int561, 0);
        boolean boolean120 = calculadora353.or(false, boolean811);
        Assertions.assertEquals(boolean120, false);
        double double823 = calculadora353.divDouble(0.0, 3.14159);
        Assertions.assertEquals(double823, 0.0);
        boolean boolean351 = calculadora353.menor(500, -250);
        Assertions.assertEquals(boolean351, false);
    }
    @Test
    public void test2775() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double68 = calculadora353.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double68, 11.503);
        double double845 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double845, 103.51);
        double double471 = calculadora353.divDouble(10.953, 0.55);
        Assertions.assertEquals(double471, 19.91454545454545);
        double double290 = calculadora353.subDouble(1.99, 0.55);
        Assertions.assertEquals(double290, 1.44);
        boolean boolean673 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean673, false);
        double double169 = calculadora353.subDouble(0.55, 0.0);
        Assertions.assertEquals(double169, 0.55);
    }
    @Test
    public void test2776() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double602 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double602, 58.025000000000006);
        boolean boolean975 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean975, false);
        double double474 = calculadora353.mulDouble(10.953, 105.5);
        Assertions.assertEquals(double474, 1155.5415);
    }
    @Test
    public void test2777() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        java.lang.String string954 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string954, "nice");
        double double30 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double30, -1.44);
        boolean boolean573 = calculadora353.maior(500, 1000);
        Assertions.assertEquals(boolean573, false);
        boolean boolean702 = calculadora353.menor(-1000, -500);
        Assertions.assertEquals(boolean702, true);
        double double991 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double991, 0.014691943127962086);
    }
    @Test
    public void test2778() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        boolean boolean939 = calculadora353.maior(0, -1000);
        Assertions.assertEquals(boolean939, true);
        int int874 = calculadora353.somaInt(-500, 1000);
        Assertions.assertEquals(int874, 500);
        boolean boolean56 = calculadora353.maior(500, 250);
        Assertions.assertEquals(boolean56, true);
        double double441 = calculadora353.somaDouble(-105.5, 10.953);
        Assertions.assertEquals(double441, -94.547);
    }
    @Test
    public void test2779() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
        java.lang.String string149 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string149, "go");
        int int366 = calculadora353.subInt(-250, 1000);
        Assertions.assertEquals(int366, -1250);
        int int804 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int804, -2);
    }
    @Test
    public void test2782() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        double double304 = calculadora353.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double304, 3.14159);
        java.lang.String string660 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string660, "lorem");
        int int863 = calculadora353.mulInt(-1000, 250);
        Assertions.assertEquals(int863, -250000);
        java.lang.String string564 = calculadora353.toLowCase(string466);
        Assertions.assertEquals(string564, string466);
        int int659 = calculadora353.mulInt(100, -500);
        Assertions.assertEquals(int659, -50000);
        double double495 = calculadora353.mulDouble(1.99, -10.953);
        Assertions.assertEquals(double495, -21.79647);
    }
    @Test
    public void test2783() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double137 = calculadora353.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double137, 1.1);
        boolean boolean585 = calculadora353.menor(500, 500);
        Assertions.assertEquals(boolean585, false);
        int int245 = calculadora353.subInt(-500, 100);
        Assertions.assertEquals(int245, -600);
        double double608 = calculadora353.divDouble(0.0, 1.99);
        Assertions.assertEquals(double608, 0.0);
    }
    @Test
    public void test2784() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        boolean boolean675 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean675, true);
        double double115 = calculadora353.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double115, 163.525);
        boolean boolean75 = calculadora353.menor(500, 0);
        Assertions.assertEquals(boolean75, false);
        java.lang.String string360 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string360, "ipsum");
        int int430 = calculadora353.mulInt(500, -100);
        Assertions.assertEquals(int430, -50000);
        boolean boolean43 = calculadora353.and(false, boolean675);
        Assertions.assertEquals(boolean43, false);
    }
    @Test
    public void test2785() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double442 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double442, 6.024150000000001);
        int int926 = calculadora353.somaInt(-100, -250);
        Assertions.assertEquals(int926, -350);
        double double623 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double623, 58.025000000000006);
        int int530 = calculadora353.subInt(250, 1000);
        Assertions.assertEquals(int530, -750);
    }
    @Test
    public void test2788() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        double double904 = calculadora353.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double904, 1155.5415);
        double double375 = calculadora353.subDouble(0.0, 10.953);
        Assertions.assertEquals(double375, -10.953);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
    }
    @Test
    public void test2789() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double372 = calculadora353.divDouble(10.953, -105.5);
        Assertions.assertEquals(double372, -0.10381990521327014);
        double double551 = calculadora353.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double551, 0.6334372085472643);
        java.lang.String string507 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string507, "nice");
        boolean boolean423 = calculadora353.and(boolean906, false);
        Assertions.assertEquals(boolean423, false);
        boolean boolean297 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean297, false);
    }
    @Test
    public void test2790() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        double double234 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double234, 7.066451612903225);
        int int320 = calculadora353.subInt(100, 1000);
        Assertions.assertEquals(int320, -900);
        boolean boolean141 = calculadora353.maior(250, -100);
        Assertions.assertEquals(boolean141, true);
        double double797 = calculadora353.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double797, 1155.5415);
        double double358 = calculadora353.subDouble(-1.55, 0.0);
        Assertions.assertEquals(double358, -1.55);
        java.lang.String string819 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string819, "HI");
    }
    @Test
    public void test2791() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double454 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double454, 0.0);
        boolean boolean237 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean237, false);
        double double256 = calculadora353.somaDouble(10.953, 3.14159);
        Assertions.assertEquals(double256, 14.09459);
        boolean boolean276 = calculadora353.and(true, boolean237);
        Assertions.assertEquals(boolean276, false);
    }
    @Test
    public void test2792() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        boolean boolean60 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean60, true);
        boolean boolean251 = calculadora353.menor(-100, 100);
        Assertions.assertEquals(boolean251, true);
        int int531 = calculadora353.mulInt(1000, 1000);
        Assertions.assertEquals(int531, 1000000);
        boolean boolean579 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean579, false);
        boolean boolean99 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean99, true);
    }
    @Test
    public void test2793() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean562 = calculadora353.menor(1000, 100);
        Assertions.assertEquals(boolean562, false);
        int int104 = calculadora353.mulInt(500, -250);
        Assertions.assertEquals(int104, -125000);
        int int150 = calculadora353.mulInt(100, -250);
        Assertions.assertEquals(int150, -25000);
        java.lang.String string426 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string426, "valeu");
        double double506 = calculadora353.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double506, 1.7278745);
        int int916 = calculadora353.divInt(500, 250);
        Assertions.assertEquals(int916, 2);
    }
    @Test
    public void test2794() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        java.lang.String string569 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string569, "IPSUM");
        int int863 = calculadora353.somaInt(-250, -500);
        Assertions.assertEquals(int863, -750);
        double double94 = calculadora353.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double94, -211.0);
    }
    @Test
    public void test2795() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        boolean boolean795 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean795, true);
    }
    @Test
    public void test2796() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        double double97 = calculadora353.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double97, -209.945);
        boolean boolean376 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean376, false);
        java.lang.String string793 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string793, "TOP");
        int int658 = calculadora353.divInt(-1000, -500);
        Assertions.assertEquals(int658, 2);
    }
    @Test
    public void test2797() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        int int161 = calculadora353.mulInt(-250, 500);
        Assertions.assertEquals(int161, -125000);
        boolean boolean69 = calculadora353.or(boolean848, false);
        Assertions.assertEquals(boolean69, false);
        java.lang.String string130 = calculadora353.toLowCase(string67);
        Assertions.assertEquals(string130, string67);
    }
    @Test
    public void test2798() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string526 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string526, "valeu");
        boolean boolean380 = calculadora353.maior(1000, 0);
        Assertions.assertEquals(boolean380, true);
        boolean boolean988 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean988, true);
        boolean boolean63 = calculadora353.and(boolean380, boolean721);
        Assertions.assertEquals(boolean63, false);
        boolean boolean905 = calculadora353.and(boolean721, boolean988);
        Assertions.assertEquals(boolean905, false);
        boolean boolean625 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean625, false);
        int int511 = calculadora353.mulInt(-100, -100);
        Assertions.assertEquals(int511, 10000);
        double double323 = calculadora353.somaDouble(1.99, 3.14159);
        Assertions.assertEquals(double323, 5.13159);
        int int693 = calculadora353.divInt(250, -1000);
        Assertions.assertEquals(int693, 0);
        double double237 = calculadora353.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double237, 119.96820899999999);
    }
    @Test
    public void test2799() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
        java.lang.String string62 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string62, "nice");
        double double890 = calculadora353.mulDouble(3.14159, 1.99);
        Assertions.assertEquals(double890, 6.2517641);
    }
    @Test
    public void test2800() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean854 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean854, false);
        boolean boolean528 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean528, true);
        double double214 = calculadora353.subDouble(105.5, 3.14159);
        Assertions.assertEquals(double214, 102.35841);
        int int680 = calculadora353.subInt(250, -1000);
        Assertions.assertEquals(int680, 1250);
        java.lang.String string124 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string124, "top");
    }
    @Test
    public void test2801() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean940 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean940, false);
        boolean boolean825 = calculadora353.or(boolean940, false);
        Assertions.assertEquals(boolean825, false);
        java.lang.String string228 = calculadora353.toUpCase("HelLo");
        Assertions.assertEquals(string228, "HELLO");
        int int615 = calculadora353.subInt(-100, 500);
        Assertions.assertEquals(int615, -600);
    }
    @Test
    public void test2802() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        double double875 = calculadora353.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double875, 0.014691943127962086);
        boolean boolean928 = calculadora353.maior(500, -500);
        Assertions.assertEquals(boolean928, true);
        boolean boolean373 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean373, true);
    }
    @Test
    public void test2803() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        java.lang.String string887 = calculadora353.toUpCase(string796);
        Assertions.assertEquals(string887, STRING796);
        boolean boolean838 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean838, true);
        int int19 = calculadora353.mulInt(250, 250);
        Assertions.assertEquals(int19, 62500);
        double double949 = calculadora353.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double949, -107.05);
    }
    @Test
    public void test2804() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string796 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string796, "LOREM");
        boolean boolean54 = calculadora353.maior(-100, 0);
        Assertions.assertEquals(boolean54, false);
        boolean boolean321 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean321, true);
        java.lang.String string638 = calculadora353.toUpCase("IpsUm");
        Assertions.assertEquals(string638, "IPSUM");
        double double982 = calculadora353.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double982, -1155.5415);
        java.lang.String string887 = calculadora353.toUpCase(string796);
        Assertions.assertEquals(string887, STRING796);
        boolean boolean838 = calculadora353.or(true, boolean54);
        Assertions.assertEquals(boolean838, true);
        int int19 = calculadora353.mulInt(250, 250);
        Assertions.assertEquals(int19, 62500);
        boolean boolean881 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean881, false);
    }
    @Test
    public void test2805() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        double double762 = calculadora353.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double762, 0.029778104265402842);
        double double404 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double404, 1.0);
        double double283 = calculadora353.subDouble(0.55, 105.5);
        Assertions.assertEquals(double283, -104.95);
        int int711 = calculadora353.divInt(500, 1000);
        Assertions.assertEquals(int711, 0);
        int int690 = calculadora353.mulInt(1000, 250);
        Assertions.assertEquals(int690, 250000);
        double double832 = calculadora353.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double832, 34.409835269999995);
    }
    @Test
    public void test2806() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        java.lang.String string810 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string810, "LOREM");
        double double706 = calculadora353.somaDouble(-10.953, 105.5);
        Assertions.assertEquals(double706, 94.547);
    }
    @Test
    public void test2807() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        boolean boolean863 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean863, false);
        java.lang.String string489 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string489, "LOREM");
        int int703 = calculadora353.divInt(0, -1000);
        Assertions.assertEquals(int703, 0);
        boolean boolean853 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean853, true);
        double double578 = calculadora353.subDouble(0.0, 0.55);
        Assertions.assertEquals(double578, -0.55);
        boolean boolean512 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean512, true);
    }
    @Test
    public void test2809() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean854 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean854, false);
        boolean boolean528 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean528, true);
        boolean boolean655 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean655, false);
        java.lang.String string291 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string291, "NICE");
    }
    @Test
    public void test2810() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        boolean boolean440 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean440, true);
        double double653 = calculadora353.mulDouble(-1.55, -10.953);
        Assertions.assertEquals(double653, 16.977149999999998);
        boolean boolean226 = calculadora353.maior(500, -1000);
        Assertions.assertEquals(boolean226, true);
    }
    @Test
    public void test2811() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double719 = calculadora353.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double719, 4.69159);
        int int569 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int569, 600);
        java.lang.String string418 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string418, "lorem");
        double double89 = calculadora353.subDouble(1.99, -1.55);
        Assertions.assertEquals(double89, 3.54);
        boolean boolean950 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean950, false);
        java.lang.String string456 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string456, "hello");
        java.lang.String string352 = calculadora353.toUpCase(string456);
        Assertions.assertEquals(string352, STRING456);
        boolean boolean604 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean604, true);
    }
    @Test
    public void test2812() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        boolean boolean735 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean735, false);
        boolean boolean408 = calculadora353.maior(-500, 250);
        Assertions.assertEquals(boolean408, false);
        double double397 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double397, 0.0);
        java.lang.String string450 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string450, "ipsum");
    }
    @Test
    public void test2813() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        double double858 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double858, Infinity);
        java.lang.String string53 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string53, "hello");
        double double882 = calculadora353.divDouble(105.5, -105.5);
        Assertions.assertEquals(double882, -1.0);
        int int461 = calculadora353.subInt(500, -250);
        Assertions.assertEquals(int461, 750);
        int int551 = calculadora353.somaInt(-100, -500);
        Assertions.assertEquals(int551, -600);
    }
    @Test
    public void test2814() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean276 = calculadora353.menor(-100, 1000);
        Assertions.assertEquals(boolean276, true);
        java.lang.String string807 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string807, "LOREM");
        double double339 = calculadora353.mulDouble(-10.953, 1.99);
        Assertions.assertEquals(double339, -21.79647);
        int int249 = calculadora353.somaInt(-100, 250);
        Assertions.assertEquals(int249, 150);
    }
    @Test
    public void test2815() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        boolean boolean116 = calculadora353.maior(-100, 100);
        Assertions.assertEquals(boolean116, false);
        boolean boolean856 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean856, false);
        boolean boolean146 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean146, false);
        java.lang.String string882 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string882, "GO");
        double double9 = calculadora353.subDouble(-1.55, 10.953);
        Assertions.assertEquals(double9, -12.503);
        boolean boolean693 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean693, false);
        int int381 = calculadora353.subInt(500, -100);
        Assertions.assertEquals(int381, 600);
    }
    @Test
    public void test2816() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double65 = calculadora353.divDouble(0.55, 0.0);
        Assertions.assertEquals(double65, Infinity);
        double double731 = calculadora353.divDouble(-1.55, 0.0);
        Assertions.assertEquals(double731, -Infinity);
        boolean boolean202 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean202, false);
        boolean boolean519 = calculadora353.menor(-1000, -1000);
        Assertions.assertEquals(boolean519, false);
    }
    @Test
    public void test2817() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double908 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double908, Infinity);
        int int47 = calculadora353.subInt(0, 100);
        Assertions.assertEquals(int47, -100);
        int int861 = calculadora353.somaInt(0, 0);
        Assertions.assertEquals(int861, 0);
        double double400 = calculadora353.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double400, 0.0);
    }
    @Test
    public void test2818() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double363 = calculadora353.divDouble(105.5, 105.5);
        Assertions.assertEquals(double363, 1.0);
        double double305 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double305, -0.0);
        double double177 = calculadora353.divDouble(10.953, 1.99);
        Assertions.assertEquals(double177, 5.504020100502513);
    }
    @Test
    public void test2819() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        double double239 = calculadora353.subDouble(105.5, 0.0);
        Assertions.assertEquals(double239, 105.5);
        boolean boolean641 = calculadora353.maior(-250, 1000);
        Assertions.assertEquals(boolean641, false);
    }
    @Test
    public void test2820() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        double double408 = calculadora353.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double408, 0.0);
        java.lang.String string707 = calculadora353.toLowCase("Go");
        Assertions.assertEquals(string707, "go");
        int int65 = calculadora353.somaInt(100, 500);
        Assertions.assertEquals(int65, 600);
        boolean boolean983 = calculadora353.maior(-1000, 100);
        Assertions.assertEquals(boolean983, false);
        int int788 = calculadora353.somaInt(0, 1000);
        Assertions.assertEquals(int788, 1000);
    }
    @Test
    public void test2821() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        int int546 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int546, -750);
        boolean boolean90 = calculadora353.or(boolean721, true);
        Assertions.assertEquals(boolean90, true);
        int int800 = calculadora353.somaInt(-500, 0);
        Assertions.assertEquals(int800, -500);
    }
    @Test
    public void test2823() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double528 = calculadora353.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double528, 106.05);
        boolean boolean620 = calculadora353.menor(250, 250);
        Assertions.assertEquals(boolean620, false);
        boolean boolean544 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean544, true);
        int int903 = calculadora353.somaInt(1000, 0);
        Assertions.assertEquals(int903, 1000);
        boolean boolean274 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean274, false);
    }
    @Test
    public void test2824() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double609 = calculadora353.divDouble(10.953, 10.953);
        Assertions.assertEquals(double609, 1.0);
        double double769 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double769, 1.15159);
        int int412 = calculadora353.divInt(-250, -500);
        Assertions.assertEquals(int412, 0);
        boolean boolean815 = calculadora353.or(false, boolean597);
        Assertions.assertEquals(boolean815, false);
        java.lang.String string472 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string472, "ipsum");
        int int974 = calculadora353.mulInt(-500, 500);
        Assertions.assertEquals(int974, -250000);
    }
    @Test
    public void test2825() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        double double366 = calculadora353.subDouble(1.99, 10.953);
        Assertions.assertEquals(double366, -8.963);
        boolean boolean312 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean312, true);
        double double442 = calculadora353.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double442, 6.024150000000001);
        boolean boolean88 = calculadora353.and(boolean312, true);
        Assertions.assertEquals(boolean88, false);
    }
    @Test
    public void test2826() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double351 = calculadora353.divDouble(3.14159, 0.0);
        Assertions.assertEquals(double351, Infinity);
        java.lang.String string770 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string770, "lorem");
        double double150 = calculadora353.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double150, -0.0);
        double double819 = calculadora353.divDouble(10.953, 3.14159);
        Assertions.assertEquals(double819, 3.4864511282503443);
    }
    @Test
    public void test2828() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean214 = calculadora353.maior(-1000, -250);
        Assertions.assertEquals(boolean214, false);
        boolean boolean418 = calculadora353.menor(0, 250);
        Assertions.assertEquals(boolean418, true);
        double double145 = calculadora353.subDouble(105.5, 1.99);
        Assertions.assertEquals(double145, 103.51);
        boolean boolean33 = calculadora353.or(false, false);
        Assertions.assertEquals(boolean33, false);
        double double580 = calculadora353.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double580, -16.977149999999998);
    }
    @Test
    public void test2830() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        int int154 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int154, -100000);
        boolean boolean481 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean481, true);
        java.lang.String string433 = calculadora353.toUpCase("Go");
        Assertions.assertEquals(string433, "GO");
        double double490 = calculadora353.subDouble(0.55, 1.99);
        Assertions.assertEquals(double490, -1.44);
    }
    @Test
    public void test2832() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        double double411 = calculadora353.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double411, 0.43999999999999995);
        int int910 = calculadora353.mulInt(-500, -100);
        Assertions.assertEquals(int910, 50000);
        double double418 = calculadora353.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double418, 58.025000000000006);
        boolean boolean991 = calculadora353.maior(-500, -250);
        Assertions.assertEquals(boolean991, false);
    }
    @Test
    public void test2833() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean815 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean815, true);
        boolean boolean165 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean165, false);
        double double49 = calculadora353.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double49, 7.066451612903225);
        int int380 = calculadora353.somaInt(-500, -500);
        Assertions.assertEquals(int380, -1000);
        boolean boolean319 = calculadora353.menor(-500, -1000);
        Assertions.assertEquals(boolean319, false);
        int int984 = calculadora353.somaInt(-500, -250);
        Assertions.assertEquals(int984, -750);
        java.lang.String string369 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string369, "hi");
        boolean boolean201 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean201, false);
    }
    @Test
    public void test2834() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        java.lang.String string169 = calculadora353.toUpCase("hI");
        Assertions.assertEquals(string169, "HI");
        boolean boolean976 = calculadora353.menor(250, 0);
        Assertions.assertEquals(boolean976, false);
        double double423 = calculadora353.subDouble(105.5, 105.5);
        Assertions.assertEquals(double423, 0.0);
    }
    @Test
    public void test2835() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean222 = calculadora353.menor(-250, 0);
        Assertions.assertEquals(boolean222, true);
        boolean boolean969 = calculadora353.or(false, true);
        Assertions.assertEquals(boolean969, true);
        boolean boolean459 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean459, false);
        boolean boolean969 = calculadora353.maior(1000, 500);
        Assertions.assertEquals(boolean969, true);
    }
    @Test
    public void test2836() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        boolean boolean58 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean58, false);
        int int250 = calculadora353.mulInt(-100, -1000);
        Assertions.assertEquals(int250, 100000);
        boolean boolean439 = calculadora353.or(true, false);
        Assertions.assertEquals(boolean439, true);
        boolean boolean704 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean704, false);
        double double112 = calculadora353.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double112, 0.43999999999999995);
    }
    @Test
    public void test2837() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        int int730 = calculadora353.mulInt(250, -250);
        Assertions.assertEquals(int730, -62500);
        double double73 = calculadora353.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double73, 331.437745);
        boolean boolean616 = calculadora353.maior(100, 0);
        Assertions.assertEquals(boolean616, true);
        int int140 = calculadora353.subInt(-1000, -1000);
        Assertions.assertEquals(int140, 0);
        boolean boolean463 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean463, true);
    }
    @Test
    public void test2838() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        double double636 = calculadora353.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double636, -34.409835269999995);
        boolean boolean848 = calculadora353.or(true, boolean721);
        Assertions.assertEquals(boolean848, true);
        boolean boolean583 = calculadora353.maior(100, 100);
        Assertions.assertEquals(boolean583, false);
        int int39 = calculadora353.somaInt(-500, -100);
        Assertions.assertEquals(int39, -600);
        boolean boolean39 = calculadora353.or(true, true);
        Assertions.assertEquals(boolean39, true);
    }
    @Test
    public void test2839() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean452 = calculadora353.or(true, boolean597);
        Assertions.assertEquals(boolean452, true);
        double double15 = calculadora353.divDouble(1.99, -1.55);
        Assertions.assertEquals(double15, -1.2838709677419355);
        java.lang.String string682 = calculadora353.toUpCase("tOp");
        Assertions.assertEquals(string682, "TOP");
        double double482 = calculadora353.divDouble(10.953, 1.99);
        Assertions.assertEquals(double482, 5.504020100502513);
    }
    @Test
    public void test2840() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        int int154 = calculadora353.mulInt(100, -1000);
        Assertions.assertEquals(int154, -100000);
        int int287 = calculadora353.somaInt(-1000, 100);
        Assertions.assertEquals(int287, -900);
        java.lang.String string148 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string148, "valeu");
    }
    @Test
    public void test2841() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        int int383 = calculadora353.divInt(-250, 500);
        Assertions.assertEquals(int383, 0);
        boolean boolean12 = calculadora353.menor(250, -500);
        Assertions.assertEquals(boolean12, false);
        int int128 = calculadora353.divInt(100, -1000);
        Assertions.assertEquals(int128, 0);
    }
    @Test
    public void test2842() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        double double4 = calculadora353.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double4, 0.0);
        int int870 = calculadora353.mulInt(-1000, -100);
        Assertions.assertEquals(int870, 100000);
        double double399 = calculadora353.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double399, 0.0);
        boolean boolean976 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean976, false);
        java.lang.String string899 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string899, "top");
    }
    @Test
    public void test2843() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string879 = calculadora353.toLowCase("lOrEm");
        Assertions.assertEquals(string879, "lorem");
        double double637 = calculadora353.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double637, 1.15159);
    }
    @Test
    public void test2844() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        double double675 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double675, 6.28318);
    }
    @Test
    public void test2845() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int171 = calculadora353.mulInt(1000, -100);
        Assertions.assertEquals(int171, -100000);
        boolean boolean567 = calculadora353.maior(-250, 100);
        Assertions.assertEquals(boolean567, false);
        boolean boolean45 = calculadora353.maior(-1000, 0);
        Assertions.assertEquals(boolean45, false);
        double double457 = calculadora353.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double457, 1.0);
        double double625 = calculadora353.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double625, -4.8694645);
        java.lang.String string263 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string263, "LOREM");
        java.lang.String string561 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string561, "top");
        java.lang.String string857 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string857, "hi");
    }
    @Test
    public void test2847() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        int int111 = calculadora353.subInt(100, 100);
        Assertions.assertEquals(int111, 0);
        double double954 = calculadora353.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double954, 6.28318);
        double double891 = calculadora353.divDouble(0.0, -105.5);
        Assertions.assertEquals(double891, -0.0);
        double double620 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double620, -10.953);
        boolean boolean233 = calculadora353.maior(-500, -100);
        Assertions.assertEquals(boolean233, false);
        int int221 = calculadora353.subInt(250, -100);
        Assertions.assertEquals(int221, 350);
        double double955 = calculadora353.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double955, 6.2517641);
    }
    @Test
    public void test2848() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean718 = calculadora353.menor(100, -100);
        Assertions.assertEquals(boolean718, false);
        double double215 = calculadora353.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double215, -1.55);
        double double38 = calculadora353.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double38, 2.59159);
        boolean boolean911 = calculadora353.menor(1000, -100);
        Assertions.assertEquals(boolean911, false);
        double double782 = calculadora353.subDouble(1.99, 1.99);
        Assertions.assertEquals(double782, 0.0);
        int int268 = calculadora353.divInt(0, -500);
        Assertions.assertEquals(int268, 0);
        boolean boolean589 = calculadora353.maior(-250, 0);
        Assertions.assertEquals(boolean589, false);
    }
    @Test
    public void test2849() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string603 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string603, "nice");
        java.lang.String string944 = calculadora353.toUpCase("lOrEm");
        Assertions.assertEquals(string944, "LOREM");
        boolean boolean762 = calculadora353.maior(1000, 100);
        Assertions.assertEquals(boolean762, true);
        double double882 = calculadora353.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double882, -6.024150000000001);
        double double641 = calculadora353.divDouble(1.99, 10.953);
        Assertions.assertEquals(double641, 0.18168538300009132);
        boolean boolean440 = calculadora353.maior(0, -250);
        Assertions.assertEquals(boolean440, true);
        int int514 = calculadora353.somaInt(100, 250);
        Assertions.assertEquals(int514, 350);
    }
    @Test
    public void test2850() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int851 = calculadora353.mulInt(500, 0);
        Assertions.assertEquals(int851, 0);
        double double462 = calculadora353.subDouble(3.14159, 105.5);
        Assertions.assertEquals(double462, -102.35841);
        boolean boolean929 = calculadora353.menor(-1000, 1000);
        Assertions.assertEquals(boolean929, true);
        boolean boolean915 = calculadora353.menor(-500, 250);
        Assertions.assertEquals(boolean915, true);
    }
    @Test
    public void test2852() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string493 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string493, "NICE");
        int int351 = calculadora353.somaInt(250, -100);
        Assertions.assertEquals(int351, 150);
        java.lang.String string97 = calculadora353.toLowCase("tOp");
        Assertions.assertEquals(string97, "top");
        double double695 = calculadora353.divDouble(1.99, 0.0);
        Assertions.assertEquals(double695, Infinity);
        boolean boolean914 = calculadora353.and(true, false);
        Assertions.assertEquals(boolean914, false);
        int int458 = calculadora353.divInt(500, 500);
        Assertions.assertEquals(int458, 1);
        double double256 = calculadora353.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double256, 0.0);
        double double244 = calculadora353.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double244, -21.906);
        int int856 = calculadora353.divInt(250, -100);
        Assertions.assertEquals(int856, -2);
        double double310 = calculadora353.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double310, -58.025000000000006);
        boolean boolean314 = calculadora353.and(boolean914, false);
        Assertions.assertEquals(boolean314, false);
    }
    @Test
    public void test2853() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        int int987 = calculadora353.divInt(250, -250);
        Assertions.assertEquals(int987, -1);
        boolean boolean597 = calculadora353.and(false, true);
        Assertions.assertEquals(boolean597, false);
        boolean boolean452 = calculadora353.or(true, boolean597);
        Assertions.assertEquals(boolean452, true);
        double double15 = calculadora353.divDouble(1.99, -1.55);
        Assertions.assertEquals(double15, -1.2838709677419355);
        java.lang.String string225 = calculadora353.toLowCase("hI");
        Assertions.assertEquals(string225, "hi");
        boolean boolean529 = calculadora353.or(boolean452, false);
        Assertions.assertEquals(boolean529, false);
    }
    @Test
    public void test2854() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        double double903 = calculadora353.somaDouble(-10.953, 0.0);
        Assertions.assertEquals(double903, -10.953);
        int int154 = calculadora353.somaInt(-250, 250);
        Assertions.assertEquals(int154, 0);
        double double768 = calculadora353.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double768, -105.5);
    }
    @Test
    public void test2855() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean124 = calculadora353.menor(1000, 1000);
        Assertions.assertEquals(boolean124, false);
        int int673 = calculadora353.somaInt(500, 1000);
        Assertions.assertEquals(int673, 1500);
        double double798 = calculadora353.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double798, 94.547);
        int int707 = calculadora353.subInt(-1000, -500);
        Assertions.assertEquals(int707, -500);
        java.lang.String string642 = calculadora353.toLowCase("vAlEu");
        Assertions.assertEquals(string642, "valeu");
        java.lang.String string234 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string234, "NICE");
    }
    @Test
    public void test2856() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        boolean boolean906 = calculadora353.and(true, true);
        Assertions.assertEquals(boolean906, true);
        java.lang.String string792 = calculadora353.toLowCase("IpsUm");
        Assertions.assertEquals(string792, "ipsum");
        java.lang.String string916 = calculadora353.toUpCase("NicE");
        Assertions.assertEquals(string916, "NICE");
        boolean boolean357 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean357, false);
        int int461 = calculadora353.mulInt(500, 250);
        Assertions.assertEquals(int461, 125000);
        java.lang.String string253 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string253, "hello");
        double double45 = calculadora353.divDouble(-10.953, 0.0);
        Assertions.assertEquals(double45, -Infinity);
    }
    @Test
    public void test2857() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        int int83 = calculadora353.somaInt(100, -250);
        Assertions.assertEquals(int83, -150);
        java.lang.String string446 = calculadora353.toUpCase("vAlEu");
        Assertions.assertEquals(string446, "VALEU");
        java.lang.String string991 = calculadora353.toLowCase("NicE");
        Assertions.assertEquals(string991, "nice");
        double double719 = calculadora353.divDouble(0.55, -105.5);
        Assertions.assertEquals(double719, -0.005213270142180095);
        double double821 = calculadora353.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double821, 1155.5415);
    }
    @Test
    public void test2858() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean721 = calculadora353.menor(0, 0);
        Assertions.assertEquals(boolean721, false);
        java.lang.String string466 = calculadora353.toLowCase("HelLo");
        Assertions.assertEquals(string466, "hello");
        java.lang.String string67 = calculadora353.toUpCase(string466);
        Assertions.assertEquals(string67, STRING466);
        double double98 = calculadora353.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double98, -107.05);
        int int646 = calculadora353.somaInt(100, 0);
        Assertions.assertEquals(int646, 100);
        boolean boolean47 = calculadora353.and(false, false);
        Assertions.assertEquals(boolean47, false);
        boolean boolean259 = calculadora353.maior(100, -500);
        Assertions.assertEquals(boolean259, true);
        double double919 = calculadora353.mulDouble(3.14159, 105.5);
        Assertions.assertEquals(double919, 331.437745);
    }
    @Test
    public void test2859() throws Throwable {
        Calculadora calculadora353 = new Calculadora();
        boolean boolean747 = calculadora353.menor(-250, -500);
        Assertions.assertEquals(boolean747, false);
        int int412 = calculadora353.subInt(1000, -1000);
        Assertions.assertEquals(int412, 2000);
        int int41 = calculadora353.somaInt(250, 0);
        Assertions.assertEquals(int41, 250);
        double double503 = calculadora353.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double503, 0.0);
        int int965 = calculadora353.divInt(-500, -500);
        Assertions.assertEquals(int965, 1);
    }
}
