package randoop.bin;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;
import java.time.LocalDate;

public class RegressionTest {
    @Test
    public void test1() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
    }
    @Test
    public void test3() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
    }
    @Test
    public void test4() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
    }
    @Test
    public void test5() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
    }
    @Test
    public void test6() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
    }
    @Test
    public void test7() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
    }
    @Test
    public void test8() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
    }
    @Test
    public void test10() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
    }
    @Test
    public void test11() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
    }
    @Test
    public void test12() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
    }
    @Test
    public void test13() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
    }
    @Test
    public void test14() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
    }
    @Test
    public void test15() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
    }
    @Test
    public void test16() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
    }
    @Test
    public void test17() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
    }
    @Test
    public void test18() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string5602 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string5602, "hi");
    }
    @Test
    public void test19() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
    }
    @Test
    public void test20() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
    }
    @Test
    public void test21() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
    }
    @Test
    public void test22() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
    }
    @Test
    public void test23() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
    }
    @Test
    public void test24() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        boolean boolean3280 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean3280, false);
    }
    @Test
    public void test25() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
    }
    @Test
    public void test26() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
    }
    @Test
    public void test27() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
    }
    @Test
    public void test28() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
    }
    @Test
    public void test29() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
    }
    @Test
    public void test30() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
    }
    @Test
    public void test31() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
    }
    @Test
    public void test32() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
    }
    @Test
    public void test33() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
    }
    @Test
    public void test34() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
    }
    @Test
    public void test35() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
    }
    @Test
    public void test36() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        boolean boolean9396 = calculadora792.menor(-250, 0);
        Assertions.assertEquals(boolean9396, true);
    }
    @Test
    public void test37() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
    }
    @Test
    public void test38() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
    }
    @Test
    public void test39() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
    }
    @Test
    public void test40() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
    }
    @Test
    public void test41() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
    }
    @Test
    public void test42() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
    }
    @Test
    public void test43() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
    }
    @Test
    public void test44() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        double double5117 = calculadora792.mulDouble(-105.5, 1.99);
        Assertions.assertEquals(double5117, -209.945);
    }
    @Test
    public void test45() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
    }
    @Test
    public void test46() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean7229 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean7229, true);
    }
    @Test
    public void test47() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
    }
    @Test
    public void test48() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
    }
    @Test
    public void test49() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
    }
    @Test
    public void test50() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
    }
    @Test
    public void test51() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
    }
    @Test
    public void test52() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
    }
    @Test
    public void test53() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        int int4710 = calculadora792.subInt(1000, 0);
        Assertions.assertEquals(int4710, 1000);
    }
    @Test
    public void test54() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean5835 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5835, false);
    }
    @Test
    public void test55() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        boolean boolean3914 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3914, false);
    }
    @Test
    public void test56() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean3047 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3047, true);
    }
    @Test
    public void test59() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
    }
    @Test
    public void test60() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
    }
    @Test
    public void test61() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        boolean boolean3280 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean3280, false);
        int int3965 = calculadora792.subInt(100, 1000);
        Assertions.assertEquals(int3965, -900);
    }
    @Test
    public void test62() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
    }
    @Test
    public void test63() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
    }
    @Test
    public void test64() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
    }
    @Test
    public void test66() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
    }
    @Test
    public void test67() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
    }
    @Test
    public void test68() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
    }
    @Test
    public void test69() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
    }
    @Test
    public void test70() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
    }
    @Test
    public void test71() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
    }
    @Test
    public void test72() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean8759 = calculadora792.menor(250, -1000);
        Assertions.assertEquals(boolean8759, false);
    }
    @Test
    public void test73() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double5081 = calculadora792.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double5081, 0.014691943127962086);
    }
    @Test
    public void test74() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
    }
    @Test
    public void test75() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
    }
    @Test
    public void test76() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double7638 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double7638, 107.05);
    }
    @Test
    public void test77() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
    }
    @Test
    public void test78() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
    }
    @Test
    public void test79() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        java.lang.String string5530 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string5530, "TOP");
    }
    @Test
    public void test80() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
    }
    @Test
    public void test83() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
    }
    @Test
    public void test84() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
    }
    @Test
    public void test85() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        boolean boolean4157 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean4157, false);
    }
    @Test
    public void test86() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
    }
    @Test
    public void test87() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        java.lang.String string2728 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string2728, "HELLO");
    }
    @Test
    public void test88() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int3642 = calculadora792.subInt(-100, 500);
        Assertions.assertEquals(int3642, -600);
    }
    @Test
    public void test89() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        int int194 = calculadora792.somaInt(250, -500);
        Assertions.assertEquals(int194, -250);
    }
    @Test
    public void test90() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double9830 = calculadora792.subDouble(1.99, 0.0);
        Assertions.assertEquals(double9830, 1.99);
    }
    @Test
    public void test91() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        int int1502 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int1502, 0);
    }
    @Test
    public void test92() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        int int4710 = calculadora792.subInt(1000, 0);
        Assertions.assertEquals(int4710, 1000);
        double double5943 = calculadora792.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double5943, 6.2517641);
    }
    @Test
    public void test93() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
    }
    @Test
    public void test94() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        java.lang.String string5170 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string5170, "top");
    }
    @Test
    public void test95() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
    }
    @Test
    public void test96() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
    }
    @Test
    public void test97() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        int int7585 = calculadora792.mulInt(-1000, -1000);
        Assertions.assertEquals(int7585, 1000000);
    }
    @Test
    public void test98() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
    }
    @Test
    public void test100() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double2854 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double2854, 9.402999999999999);
    }
    @Test
    public void test101() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
    }
    @Test
    public void test103() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        boolean boolean2863 = calculadora792.maior(-1000, -250);
        Assertions.assertEquals(boolean2863, false);
    }
    @Test
    public void test104() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
    }
    @Test
    public void test105() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3691 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int3691, -600);
    }
    @Test
    public void test107() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean3011 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3011, true);
    }
    @Test
    public void test108() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
    }
    @Test
    public void test109() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int352 = calculadora792.subInt(100, -100);
        Assertions.assertEquals(int352, 200);
    }
    @Test
    public void test110() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
    }
    @Test
    public void test112() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double7638 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double7638, 107.05);
        double double4616 = calculadora792.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double4616, 0.43999999999999995);
    }
    @Test
    public void test113() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
    }
    @Test
    public void test114() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        int int1021 = calculadora792.mulInt(-1000, -1000);
        Assertions.assertEquals(int1021, 1000000);
    }
    @Test
    public void test115() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double7427 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double7427, -5.504020100502513);
    }
    @Test
    public void test116() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int43 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int43, 0);
    }
    @Test
    public void test117() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2061 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2061, "VALEU");
    }
    @Test
    public void test118() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
    }
    @Test
    public void test119() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
    }
    @Test
    public void test120() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
    }
    @Test
    public void test121() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean4911 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4911, false);
    }
    @Test
    public void test122() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
    }
    @Test
    public void test124() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int9471 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int9471, 500000);
    }
    @Test
    public void test127() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        boolean boolean2863 = calculadora792.maior(-1000, -250);
        Assertions.assertEquals(boolean2863, false);
        boolean boolean4688 = calculadora792.and(false, boolean7494);
        Assertions.assertEquals(boolean4688, false);
    }
    @Test
    public void test128() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
    }
    @Test
    public void test129() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int2875 = calculadora792.subInt(1000, -500);
        Assertions.assertEquals(int2875, 1500);
    }
    @Test
    public void test131() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        double double9466 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double9466, -116.453);
    }
    @Test
    public void test132() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        double double1266 = calculadora792.somaDouble(-10.953, 1.99);
        Assertions.assertEquals(double1266, -8.963);
    }
    @Test
    public void test133() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        double double6616 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double6616, -5.504020100502513);
    }
    @Test
    public void test134() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
    }
    @Test
    public void test135() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int4199 = calculadora792.mulInt(250, -1000);
        Assertions.assertEquals(int4199, -250000);
    }
    @Test
    public void test136() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
    }
    @Test
    public void test139() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean2980 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2980, false);
    }
    @Test
    public void test141() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
    }
    @Test
    public void test142() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
    }
    @Test
    public void test144() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double413 = calculadora792.subDouble(10.953, 1.99);
        Assertions.assertEquals(double413, 8.963);
    }
    @Test
    public void test145() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int6089 = calculadora792.divInt(0, 500);
        Assertions.assertEquals(int6089, 0);
    }
    @Test
    public void test146() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        double double6022 = calculadora792.divDouble(0.0, -10.953);
        Assertions.assertEquals(double6022, -0.0);
    }
    @Test
    public void test147() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
    }
    @Test
    public void test148() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
    }
    @Test
    public void test149() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
    }
    @Test
    public void test150() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean716 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean716, false);
    }
    @Test
    public void test151() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        int int9670 = calculadora792.mulInt(1000, 1000);
        Assertions.assertEquals(int9670, 1000000);
    }
    @Test
    public void test152() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean2692 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean2692, false);
    }
    @Test
    public void test153() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        boolean boolean3280 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean3280, false);
        java.lang.String string7022 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7022, "LOREM");
    }
    @Test
    public void test154() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean2878 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean2878, false);
    }
    @Test
    public void test155() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
    }
    @Test
    public void test156() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean1506 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1506, false);
    }
    @Test
    public void test157() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
    }
    @Test
    public void test158() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
    }
    @Test
    public void test159() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        int int4710 = calculadora792.subInt(1000, 0);
        Assertions.assertEquals(int4710, 1000);
        double double5943 = calculadora792.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double5943, 6.2517641);
        int int8890 = calculadora792.subInt(-250, 250);
        Assertions.assertEquals(int8890, -500);
    }
    @Test
    public void test160() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        java.lang.String string812 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string812, "hello");
    }
    @Test
    public void test161() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        int int194 = calculadora792.subInt(0, -250);
        Assertions.assertEquals(int194, 250);
    }
    @Test
    public void test162() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        double double4796 = calculadora792.subDouble(0.55, 0.55);
        Assertions.assertEquals(double4796, 0.0);
    }
    @Test
    public void test164() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
    }
    @Test
    public void test165() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
    }
    @Test
    public void test166() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string364 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string364, "hello");
    }
    @Test
    public void test167() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        boolean boolean1000 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean1000, true);
    }
    @Test
    public void test168() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean2692 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean2692, false);
        java.lang.String string1678 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string1678, "hello");
    }
    @Test
    public void test169() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean6946 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean6946, false);
    }
    @Test
    public void test170() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double2088 = calculadora792.subDouble(1.99, 1.99);
        Assertions.assertEquals(double2088, 0.0);
    }
    @Test
    public void test171() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
    }
    @Test
    public void test172() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
    }
    @Test
    public void test173() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
    }
    @Test
    public void test174() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
    }
    @Test
    public void test177() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
    }
    @Test
    public void test178() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double6204 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double6204, -0.0);
    }
    @Test
    public void test179() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean615 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean615, false);
    }
    @Test
    public void test180() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean333 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean333, false);
    }
    @Test
    public void test181() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
    }
    @Test
    public void test182() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        int int1529 = calculadora792.mulInt(500, -250);
        Assertions.assertEquals(int1529, -125000);
    }
    @Test
    public void test183() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
    }
    @Test
    public void test184() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean3427 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3427, false);
    }
    @Test
    public void test185() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
    }
    @Test
    public void test186() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        java.lang.String string5583 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string5583, "GO");
    }
    @Test
    public void test187() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
    }
    @Test
    public void test188() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double5961 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double5961, 0.55);
    }
    @Test
    public void test189() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2061 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2061, "VALEU");
        double double9880 = calculadora792.somaDouble(-1.55, -10.953);
        Assertions.assertEquals(double9880, -12.503);
    }
    @Test
    public void test190() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        java.lang.String string5583 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string5583, "GO");
        boolean boolean1693 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean1693, false);
    }
    @Test
    public void test192() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
    }
    @Test
    public void test193() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
    }
    @Test
    public void test194() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
    }
    @Test
    public void test195() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
    }
    @Test
    public void test197() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int5717 = calculadora792.mulInt(-100, 500);
        Assertions.assertEquals(int5717, -50000);
    }
    @Test
    public void test198() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string4626 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string4626, "top");
    }
    @Test
    public void test199() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean3011 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3011, true);
        boolean boolean6699 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean6699, false);
    }
    @Test
    public void test200() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
    }
    @Test
    public void test201() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double6675 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double6675, 1.7278745);
    }
    @Test
    public void test203() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean2692 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean2692, false);
        double double6569 = calculadora792.subDouble(1.99, 0.0);
        Assertions.assertEquals(double6569, 1.99);
    }
    @Test
    public void test204() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        double double1516 = calculadora792.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double1516, -102.35841);
    }
    @Test
    public void test205() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        int int1502 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int1502, 0);
        double double6905 = calculadora792.divDouble(-105.5, 0.55);
        Assertions.assertEquals(double6905, -191.8181818181818);
    }
    @Test
    public void test206() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string364 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string364, "hello");
        double double8337 = calculadora792.subDouble(105.5, 1.99);
        Assertions.assertEquals(double8337, 103.51);
    }
    @Test
    public void test207() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
    }
    @Test
    public void test209() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int8945 = calculadora792.divInt(-500, 1000);
        Assertions.assertEquals(int8945, 0);
    }
    @Test
    public void test210() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        boolean boolean6352 = calculadora792.or(false, boolean2390);
        Assertions.assertEquals(boolean6352, false);
    }
    @Test
    public void test212() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean3011 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3011, true);
        boolean boolean6699 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean6699, false);
        java.lang.String string8547 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string8547, "go");
    }
    @Test
    public void test213() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        boolean boolean494 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean494, false);
    }
    @Test
    public void test214() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double4694 = calculadora792.subDouble(0.0, -1.55);
        Assertions.assertEquals(double4694, 1.55);
    }
    @Test
    public void test217() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double157 = calculadora792.divDouble(105.5, -1.55);
        Assertions.assertEquals(double157, -68.06451612903226);
    }
    @Test
    public void test218() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int6089 = calculadora792.divInt(0, 500);
        Assertions.assertEquals(int6089, 0);
        int int3396 = calculadora792.somaInt(-1000, 500);
        Assertions.assertEquals(int3396, -500);
    }
    @Test
    public void test220() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        int int246 = calculadora792.divInt(250, 100);
        Assertions.assertEquals(int246, 2);
    }
    @Test
    public void test222() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        double double1325 = calculadora792.somaDouble(-10.953, -1.55);
        Assertions.assertEquals(double1325, -12.503);
    }
    @Test
    public void test223() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        int int5237 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int5237, 0);
    }
    @Test
    public void test224() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2702 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2702, "VALEU");
    }
    @Test
    public void test225() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double9830 = calculadora792.subDouble(1.99, 0.0);
        Assertions.assertEquals(double9830, 1.99);
        boolean boolean1707 = calculadora792.menor(0, -500);
        Assertions.assertEquals(boolean1707, false);
    }
    @Test
    public void test226() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
    }
    @Test
    public void test227() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
    }
    @Test
    public void test228() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        int int5237 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int5237, 0);
        boolean boolean7786 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean7786, false);
    }
    @Test
    public void test229() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string4626 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string4626, "top");
        int int5347 = calculadora792.somaInt(500, 0);
        Assertions.assertEquals(int5347, 500);
    }
    @Test
    public void test231() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean3427 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3427, false);
        double double7289 = calculadora792.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double7289, -107.05);
    }
    @Test
    public void test232() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        int int4912 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int4912, 2000);
    }
    @Test
    public void test233() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
    }
    @Test
    public void test234() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        int int2024 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int2024, -25000);
    }
    @Test
    public void test235() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
    }
    @Test
    public void test237() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1680 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int1680, 350);
    }
    @Test
    public void test238() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean3011 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3011, true);
        boolean boolean6699 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean6699, false);
        java.lang.String string8547 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string8547, "go");
        boolean boolean6848 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6848, false);
    }
    @Test
    public void test239() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double6675 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double6675, 1.7278745);
        double double4173 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4173, -107.05);
    }
    @Test
    public void test240() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6518 = calculadora792.mulInt(-1000, 0);
        Assertions.assertEquals(int6518, 0);
    }
    @Test
    public void test241() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        boolean boolean39 = calculadora792.menor(500, -1000);
        Assertions.assertEquals(boolean39, false);
    }
    @Test
    public void test243() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        boolean boolean6352 = calculadora792.or(false, boolean2390);
        Assertions.assertEquals(boolean6352, false);
        int int3541 = calculadora792.somaInt(-1000, 0);
        Assertions.assertEquals(int3541, -1000);
    }
    @Test
    public void test244() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int1934 = calculadora792.subInt(-250, 250);
        Assertions.assertEquals(int1934, -500);
    }
    @Test
    public void test245() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        java.lang.String string1195 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string1195, "HI");
    }
    @Test
    public void test246() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
    }
    @Test
    public void test247() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
    }
    @Test
    public void test248() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        java.lang.String string558 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string558, "LOREM");
    }
    @Test
    public void test249() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        double double8151 = calculadora792.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double8151, 1.0945);
    }
    @Test
    public void test250() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
    }
    @Test
    public void test251() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int6586 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int6586, 62500);
    }
    @Test
    public void test252() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
    }
    @Test
    public void test253() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        double double5179 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double5179, -211.0);
    }
    @Test
    public void test254() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
    }
    @Test
    public void test255() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        java.lang.String string2728 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string2728, "HELLO");
        double double2504 = calculadora792.mulDouble(-105.5, -105.5);
        Assertions.assertEquals(double2504, 11130.25);
    }
    @Test
    public void test256() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        java.lang.String string3279 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3279, "NICE");
    }
    @Test
    public void test257() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string197 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string197, "lorem");
    }
    @Test
    public void test258() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
    }
    @Test
    public void test259() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        int int9309 = calculadora792.divInt(1000, 250);
        Assertions.assertEquals(int9309, 4);
    }
    @Test
    public void test261() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        boolean boolean2344 = calculadora792.menor(-250, 250);
        Assertions.assertEquals(boolean2344, true);
    }
    @Test
    public void test262() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        double double6000 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double6000, 94.547);
    }
    @Test
    public void test263() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        int int4972 = calculadora792.mulInt(500, 250);
        Assertions.assertEquals(int4972, 125000);
    }
    @Test
    public void test264() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        java.lang.String string1195 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string1195, "HI");
        boolean boolean9737 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9737, true);
    }
    @Test
    public void test266() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        java.lang.String string1284 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string1284, "hello");
    }
    @Test
    public void test267() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        java.lang.String string4372 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4372, "GO");
    }
    @Test
    public void test268() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
    }
    @Test
    public void test269() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        java.lang.String string5092 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string5092, "LOREM");
    }
    @Test
    public void test272() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
        int int7988 = calculadora792.subInt(-100, -250);
        Assertions.assertEquals(int7988, 150);
    }
    @Test
    public void test274() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        java.lang.String string2728 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string2728, "HELLO");
        double double2504 = calculadora792.mulDouble(-105.5, -105.5);
        Assertions.assertEquals(double2504, 11130.25);
        int int9238 = calculadora792.somaInt(100, 250);
        Assertions.assertEquals(int9238, 350);
    }
    @Test
    public void test275() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        java.lang.String string6063 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6063, "LOREM");
    }
    @Test
    public void test277() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        double double6616 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double6616, -5.504020100502513);
        double double592 = calculadora792.mulDouble(-1.55, -1.55);
        Assertions.assertEquals(double592, 2.4025000000000003);
    }
    @Test
    public void test278() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        int int726 = calculadora792.mulInt(-100, 500);
        Assertions.assertEquals(int726, -50000);
    }
    @Test
    public void test279() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
    }
    @Test
    public void test282() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int6089 = calculadora792.divInt(0, 500);
        Assertions.assertEquals(int6089, 0);
        boolean boolean8084 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean8084, true);
    }
    @Test
    public void test283() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
    }
    @Test
    public void test284() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean7427 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean7427, false);
    }
    @Test
    public void test285() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
    }
    @Test
    public void test288() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int3003 = calculadora792.subInt(-500, -500);
        Assertions.assertEquals(int3003, 0);
    }
    @Test
    public void test289() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int5261 = calculadora792.somaInt(100, -250);
        Assertions.assertEquals(int5261, -150);
    }
    @Test
    public void test290() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
        java.lang.String string4439 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string4439, "HI");
    }
    @Test
    public void test291() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int352 = calculadora792.subInt(100, -100);
        Assertions.assertEquals(int352, 200);
        boolean boolean5110 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean5110, true);
    }
    @Test
    public void test293() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        boolean boolean3575 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean3575, false);
    }
    @Test
    public void test294() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        java.lang.String string5988 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string5988, "go");
    }
    @Test
    public void test295() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        int int572 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int572, 0);
    }
    @Test
    public void test298() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        boolean boolean9396 = calculadora792.menor(-250, 0);
        Assertions.assertEquals(boolean9396, true);
        double double4774 = calculadora792.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double4774, 0.0);
    }
    @Test
    public void test299() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        double double1008 = calculadora792.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double1008, -1.0);
    }
    @Test
    public void test300() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        int int2024 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int2024, -25000);
        double double1927 = calculadora792.divDouble(-105.5, -1.55);
        Assertions.assertEquals(double1927, 68.06451612903226);
    }
    @Test
    public void test301() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        int int6731 = calculadora792.subInt(-250, 100);
        Assertions.assertEquals(int6731, -350);
    }
    @Test
    public void test302() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1741 = calculadora792.subInt(-250, 0);
        Assertions.assertEquals(int1741, -250);
    }
    @Test
    public void test303() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        java.lang.String string1195 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string1195, "HI");
        boolean boolean628 = calculadora792.menor(250, 500);
        Assertions.assertEquals(boolean628, true);
    }
    @Test
    public void test304() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3691 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int3691, -600);
        double double7327 = calculadora792.divDouble(0.0, 3.14159);
        Assertions.assertEquals(double7327, 0.0);
    }
    @Test
    public void test305() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        double double161 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double161, -1155.5415);
    }
    @Test
    public void test306() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        boolean boolean8455 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean8455, false);
    }
    @Test
    public void test307() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
        double double9163 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9163, 0.0);
    }
    @Test
    public void test309() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        java.lang.String string5170 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string5170, "top");
        double double8658 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double8658, -105.5);
    }
    @Test
    public void test311() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean4468 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean4468, true);
    }
    @Test
    public void test312() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        java.lang.String string8475 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string8475, "HELLO");
    }
    @Test
    public void test314() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int8571 = calculadora792.somaInt(500, 0);
        Assertions.assertEquals(int8571, 500);
    }
    @Test
    public void test315() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        int int6047 = calculadora792.mulInt(-1000, 100);
        Assertions.assertEquals(int6047, -100000);
    }
    @Test
    public void test316() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        double double6022 = calculadora792.divDouble(0.0, -10.953);
        Assertions.assertEquals(double6022, -0.0);
        java.lang.String string9248 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string9248, "IPSUM");
    }
    @Test
    public void test317() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        java.lang.String string1270 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string1270, "lorem");
    }
    @Test
    public void test318() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        boolean boolean2580 = calculadora792.menor(-100, -1000);
        Assertions.assertEquals(boolean2580, false);
    }
    @Test
    public void test319() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2061 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2061, "VALEU");
        double double9880 = calculadora792.somaDouble(-1.55, -10.953);
        Assertions.assertEquals(double9880, -12.503);
        double double7030 = calculadora792.somaDouble(10.953, 0.0);
        Assertions.assertEquals(double7030, 10.953);
    }
    @Test
    public void test320() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        java.lang.String string6335 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string6335, "valeu");
    }
    @Test
    public void test321() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        java.lang.String string3079 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string3079, "VALEU");
    }
    @Test
    public void test322() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        int int6731 = calculadora792.subInt(-250, 100);
        Assertions.assertEquals(int6731, -350);
        boolean boolean4055 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean4055, true);
    }
    @Test
    public void test323() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        boolean boolean494 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean494, false);
        java.lang.String string5214 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string5214, "go");
    }
    @Test
    public void test324() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
    }
    @Test
    public void test325() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int43 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int43, 0);
        boolean boolean8572 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean8572, false);
    }
    @Test
    public void test326() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        java.lang.String string3279 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3279, "NICE");
        int int5004 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int5004, -600);
    }
    @Test
    public void test327() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean9794 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9794, true);
    }
    @Test
    public void test328() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean6106 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean6106, false);
    }
    @Test
    public void test330() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
    }
    @Test
    public void test331() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        double double369 = calculadora792.divDouble(0.0, 105.5);
        Assertions.assertEquals(double369, 0.0);
    }
    @Test
    public void test332() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        java.lang.String string4305 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string4305, "lorem");
    }
    @Test
    public void test333() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int352 = calculadora792.subInt(100, -100);
        Assertions.assertEquals(int352, 200);
        boolean boolean5110 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean5110, true);
        java.lang.String string7502 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string7502, "lorem");
    }
    @Test
    public void test334() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        java.lang.String string166 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string166, "GO");
    }
    @Test
    public void test335() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        int int194 = calculadora792.subInt(0, -250);
        Assertions.assertEquals(int194, 250);
        boolean boolean3030 = calculadora792.and(boolean382, boolean916);
        Assertions.assertEquals(boolean3030, false);
    }
    @Test
    public void test336() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        double double7535 = calculadora792.somaDouble(0.0, 0.55);
        Assertions.assertEquals(double7535, 0.55);
    }
    @Test
    public void test337() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        boolean boolean2893 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2893, true);
    }
    @Test
    public void test338() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        boolean boolean2893 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2893, true);
        double double9726 = calculadora792.subDouble(0.55, 0.0);
        Assertions.assertEquals(double9726, 0.55);
    }
    @Test
    public void test339() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        boolean boolean9874 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean9874, false);
    }
    @Test
    public void test340() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
    }
    @Test
    public void test342() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        double double1516 = calculadora792.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double1516, -102.35841);
        boolean boolean5432 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean5432, false);
    }
    @Test
    public void test343() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        double double3673 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double3673, 94.547);
    }
    @Test
    public void test345() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        double double3995 = calculadora792.somaDouble(1.99, -105.5);
        Assertions.assertEquals(double3995, -103.51);
    }
    @Test
    public void test347() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int3464 = calculadora792.divInt(-1000, 100);
        Assertions.assertEquals(int3464, -10);
    }
    @Test
    public void test348() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        boolean boolean3355 = calculadora792.or(false, boolean8907);
        Assertions.assertEquals(boolean3355, false);
    }
    @Test
    public void test349() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int2875 = calculadora792.subInt(1000, -500);
        Assertions.assertEquals(int2875, 1500);
        double double294 = calculadora792.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double294, 119.96820899999999);
    }
    @Test
    public void test350() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        double double9466 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double9466, -116.453);
        int int3265 = calculadora792.subInt(-1000, -250);
        Assertions.assertEquals(int3265, -750);
    }
    @Test
    public void test351() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        boolean boolean1682 = calculadora792.and(true, boolean3614);
        Assertions.assertEquals(boolean1682, false);
    }
    @Test
    public void test352() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        boolean boolean3089 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean3089, false);
    }
    @Test
    public void test353() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        double double4796 = calculadora792.subDouble(0.55, 0.55);
        Assertions.assertEquals(double4796, 0.0);
        int int4150 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int4150, 2000);
    }
    @Test
    public void test355() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        double double2693 = calculadora792.mulDouble(-1.55, -105.5);
        Assertions.assertEquals(double2693, 163.525);
    }
    @Test
    public void test356() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int6089 = calculadora792.divInt(0, 500);
        Assertions.assertEquals(int6089, 0);
        int int3396 = calculadora792.somaInt(-1000, 500);
        Assertions.assertEquals(int3396, -500);
        int int7821 = calculadora792.subInt(250, 0);
        Assertions.assertEquals(int7821, 250);
    }
    @Test
    public void test357() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int352 = calculadora792.subInt(100, -100);
        Assertions.assertEquals(int352, 200);
        boolean boolean4642 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean4642, true);
    }
    @Test
    public void test358() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        double double6000 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double6000, 94.547);
        int int4872 = calculadora792.mulInt(0, -1000);
        Assertions.assertEquals(int4872, 0);
    }
    @Test
    public void test359() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int6586 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int6586, 62500);
        boolean boolean948 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean948, true);
    }
    @Test
    public void test360() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double9830 = calculadora792.subDouble(1.99, 0.0);
        Assertions.assertEquals(double9830, 1.99);
        java.lang.String string1211 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string1211, "VALEU");
    }
    @Test
    public void test361() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        int int272 = calculadora792.mulInt(250, 100);
        Assertions.assertEquals(int272, 25000);
    }
    @Test
    public void test362() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        int int272 = calculadora792.mulInt(250, 100);
        Assertions.assertEquals(int272, 25000);
        boolean boolean5813 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5813, true);
    }
    @Test
    public void test363() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        java.lang.String string4305 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string4305, "lorem");
        int int7688 = calculadora792.subInt(250, 100);
        Assertions.assertEquals(int7688, 150);
    }
    @Test
    public void test365() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int4059 = calculadora792.divInt(-1000, -500);
        Assertions.assertEquals(int4059, 2);
    }
    @Test
    public void test366() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
    }
    @Test
    public void test367() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        int int5449 = calculadora792.mulInt(250, -500);
        Assertions.assertEquals(int5449, -125000);
    }
    @Test
    public void test368() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int1621 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int1621, 600);
    }
    @Test
    public void test369() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        double double161 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double161, -1155.5415);
        java.lang.String string4191 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string4191, "go");
    }
    @Test
    public void test370() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
    }
    @Test
    public void test373() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        double double549 = calculadora792.mulDouble(-105.5, 3.14159);
        Assertions.assertEquals(double549, -331.437745);
    }
    @Test
    public void test374() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        boolean boolean2965 = calculadora792.menor(1000, -250);
        Assertions.assertEquals(boolean2965, false);
    }
    @Test
    public void test375() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean1390 = calculadora792.maior(500, -250);
        Assertions.assertEquals(boolean1390, true);
    }
    @Test
    public void test378() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        java.lang.String string5091 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string5091, "VALEU");
    }
    @Test
    public void test379() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        java.lang.String string401 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string401, "HELLO");
    }
    @Test
    public void test380() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        boolean boolean7014 = calculadora792.menor(500, -500);
        Assertions.assertEquals(boolean7014, false);
    }
    @Test
    public void test381() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        int int572 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int572, 0);
        int int9558 = calculadora792.somaInt(-100, -250);
        Assertions.assertEquals(int9558, -350);
    }
    @Test
    public void test382() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        double double6815 = calculadora792.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double6815, -58.025000000000006);
    }
    @Test
    public void test383() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
        java.lang.String string4439 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string4439, "HI");
        int int4390 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4390, -250000);
    }
    @Test
    public void test384() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean6719 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean6719, true);
    }
    @Test
    public void test386() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int9726 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int9726, -25000);
    }
    @Test
    public void test387() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string364 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string364, "hello");
        double double8337 = calculadora792.subDouble(105.5, 1.99);
        Assertions.assertEquals(double8337, 103.51);
        int int7251 = calculadora792.mulInt(-100, -500);
        Assertions.assertEquals(int7251, 50000);
    }
    @Test
    public void test388() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        java.lang.String string9756 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9756, "hello");
    }
    @Test
    public void test389() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean2924 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean2924, true);
    }
    @Test
    public void test390() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean2980 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2980, false);
        boolean boolean4301 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean4301, false);
    }
    @Test
    public void test391() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double9802 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9802, -4.8694645);
    }
    @Test
    public void test392() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        java.lang.String string5613 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5613, "HELLO");
    }
    @Test
    public void test393() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int6458 = calculadora792.subInt(0, 250);
        Assertions.assertEquals(int6458, -250);
    }
    @Test
    public void test395() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int2069 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2069, 900);
    }
    @Test
    public void test396() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        double double6815 = calculadora792.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double6815, -58.025000000000006);
        int int4485 = calculadora792.divInt(-500, -100);
        Assertions.assertEquals(int4485, 5);
    }
    @Test
    public void test397() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean3427 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3427, false);
        double double7289 = calculadora792.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double7289, -107.05);
        boolean boolean4343 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4343, false);
    }
    @Test
    public void test398() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        int int272 = calculadora792.mulInt(250, 100);
        Assertions.assertEquals(int272, 25000);
        java.lang.String string8203 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8203, "TOP");
    }
    @Test
    public void test399() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        int int3094 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int3094, 0);
    }
    @Test
    public void test400() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean2980 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2980, false);
        boolean boolean628 = calculadora792.menor(-1000, 0);
        Assertions.assertEquals(boolean628, true);
    }
    @Test
    public void test401() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int5717 = calculadora792.mulInt(-100, 500);
        Assertions.assertEquals(int5717, -50000);
        double double2988 = calculadora792.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double2988, 5.711981818181817);
    }
    @Test
    public void test403() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean6058 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean6058, true);
    }
    @Test
    public void test405() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean4116 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4116, false);
    }
    @Test
    public void test406() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        int int6963 = calculadora792.somaInt(250, -100);
        Assertions.assertEquals(int6963, 150);
    }
    @Test
    public void test407() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean6946 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean6946, false);
        int int4422 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int4422, 0);
    }
    @Test
    public void test408() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        java.lang.String string4501 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string4501, "TOP");
    }
    @Test
    public void test409() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
    }
    @Test
    public void test410() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        java.lang.String string3827 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3827, "IPSUM");
    }
    @Test
    public void test411() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int2875 = calculadora792.subInt(1000, -500);
        Assertions.assertEquals(int2875, 1500);
        boolean boolean5474 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5474, false);
    }
    @Test
    public void test412() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
        java.lang.String string5913 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5913, "valeu");
    }
    @Test
    public void test413() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int1934 = calculadora792.subInt(-250, 250);
        Assertions.assertEquals(int1934, -500);
        double double806 = calculadora792.mulDouble(3.14159, 3.14159);
        Assertions.assertEquals(double806, 9.869587728099999);
    }
    @Test
    public void test415() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double6355 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double6355, 0.1750705852768821);
    }
    @Test
    public void test416() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        boolean boolean8523 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8523, true);
    }
    @Test
    public void test417() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int2069 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2069, 900);
        int int3743 = calculadora792.mulInt(100, -100);
        Assertions.assertEquals(int3743, -10000);
    }
    @Test
    public void test418() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int1462 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int1462, 500000);
    }
    @Test
    public void test420() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int1535 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int1535, 0);
    }
    @Test
    public void test423() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
    }
    @Test
    public void test424() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5826 = calculadora792.divInt(-500, -100);
        Assertions.assertEquals(int5826, 5);
    }
    @Test
    public void test425() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
    }
    @Test
    public void test427() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean9019 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9019, true);
    }
    @Test
    public void test428() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        double double2693 = calculadora792.mulDouble(-1.55, -105.5);
        Assertions.assertEquals(double2693, 163.525);
        boolean boolean2288 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2288, true);
    }
    @Test
    public void test429() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
    }
    @Test
    public void test430() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
    }
    @Test
    public void test431() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        double double6918 = calculadora792.somaDouble(0.55, 1.99);
        Assertions.assertEquals(double6918, 2.54);
    }
    @Test
    public void test432() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
    }
    @Test
    public void test433() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
        boolean boolean6417 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean6417, false);
    }
    @Test
    public void test434() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        java.lang.String string9756 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9756, "hello");
        int int1917 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int1917, 125000);
    }
    @Test
    public void test435() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int1462 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int1462, 500000);
        boolean boolean5880 = calculadora792.menor(-250, 250);
        Assertions.assertEquals(boolean5880, true);
    }
    @Test
    public void test436() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double4694 = calculadora792.subDouble(0.0, -1.55);
        Assertions.assertEquals(double4694, 1.55);
        int int1644 = calculadora792.subInt(-500, -250);
        Assertions.assertEquals(int1644, -250);
    }
    @Test
    public void test437() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        boolean boolean4202 = calculadora792.or(boolean6240, true);
        Assertions.assertEquals(boolean4202, true);
    }
    @Test
    public void test439() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        java.lang.String string5092 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string5092, "LOREM");
        boolean boolean4625 = calculadora792.maior(-250, 0);
        Assertions.assertEquals(boolean4625, false);
    }
    @Test
    public void test440() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        java.lang.String string3279 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3279, "NICE");
        double double5484 = calculadora792.somaDouble(10.953, 0.0);
        Assertions.assertEquals(double5484, 10.953);
    }
    @Test
    public void test441() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        boolean boolean3815 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean3815, false);
    }
    @Test
    public void test442() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean3895 = calculadora792.maior(1000, -250);
        Assertions.assertEquals(boolean3895, true);
    }
    @Test
    public void test444() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
    }
    @Test
    public void test445() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        boolean boolean2965 = calculadora792.menor(1000, -250);
        Assertions.assertEquals(boolean2965, false);
        java.lang.String string4986 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string4986, "valeu");
    }
    @Test
    public void test446() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean615 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean615, false);
        int int819 = calculadora792.somaInt(0, -250);
        Assertions.assertEquals(int819, -250);
    }
    @Test
    public void test447() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        java.lang.String string2238 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string2238, "NICE");
    }
    @Test
    public void test448() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string4626 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string4626, "top");
        int int5347 = calculadora792.somaInt(500, 0);
        Assertions.assertEquals(int5347, 500);
        double double6213 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double6213, 0.0);
    }
    @Test
    public void test450() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        java.lang.String string6502 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string6502, "HELLO");
    }
    @Test
    public void test451() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        boolean boolean1000 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean1000, true);
        boolean boolean1578 = calculadora792.menor(500, 500);
        Assertions.assertEquals(boolean1578, false);
    }
    @Test
    public void test452() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8229 = calculadora792.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double8229, 7.066451612903225);
    }
    @Test
    public void test453() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        double double4207 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4207, 34.409835269999995);
    }
    @Test
    public void test454() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2702 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2702, "VALEU");
        int int5760 = calculadora792.somaInt(-100, 1000);
        Assertions.assertEquals(int5760, 900);
    }
    @Test
    public void test458() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        java.lang.String string3827 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3827, "IPSUM");
        java.lang.String string2686 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string2686, "IPSUM");
    }
    @Test
    public void test459() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        java.lang.String string326 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string326, "TOP");
    }
    @Test
    public void test460() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
    }
    @Test
    public void test461() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean3047 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3047, true);
        boolean boolean5809 = calculadora792.maior(1000, -500);
        Assertions.assertEquals(boolean5809, true);
    }
    @Test
    public void test462() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean5835 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5835, false);
        java.lang.String string3307 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string3307, "valeu");
    }
    @Test
    public void test463() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean3011 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3011, true);
        boolean boolean6699 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean6699, false);
        java.lang.String string8547 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string8547, "go");
        boolean boolean6848 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6848, false);
        int int6721 = calculadora792.somaInt(0, 1000);
        Assertions.assertEquals(int6721, 1000);
    }
    @Test
    public void test464() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        int int272 = calculadora792.mulInt(250, 100);
        Assertions.assertEquals(int272, 25000);
        boolean boolean2320 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean2320, true);
    }
    @Test
    public void test465() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        double double6815 = calculadora792.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double6815, -58.025000000000006);
        int int4485 = calculadora792.divInt(-500, -100);
        Assertions.assertEquals(int4485, 5);
        double double5979 = calculadora792.divDouble(10.953, 3.14159);
        Assertions.assertEquals(double5979, 3.4864511282503443);
    }
    @Test
    public void test466() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2702 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2702, "VALEU");
        boolean boolean1965 = calculadora792.maior(-100, -1000);
        Assertions.assertEquals(boolean1965, true);
    }
    @Test
    public void test467() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double7418 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double7418, -105.5);
    }
    @Test
    public void test468() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1741 = calculadora792.subInt(-250, 0);
        Assertions.assertEquals(int1741, -250);
        boolean boolean1975 = calculadora792.menor(-1000, 0);
        Assertions.assertEquals(boolean1975, true);
    }
    @Test
    public void test470() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        double double1325 = calculadora792.somaDouble(-10.953, -1.55);
        Assertions.assertEquals(double1325, -12.503);
        double double2447 = calculadora792.divDouble(10.953, 0.55);
        Assertions.assertEquals(double2447, 19.91454545454545);
    }
    @Test
    public void test472() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        boolean boolean2965 = calculadora792.menor(1000, -250);
        Assertions.assertEquals(boolean2965, false);
        int int5865 = calculadora792.subInt(-500, 0);
        Assertions.assertEquals(int5865, -500);
    }
    @Test
    public void test473() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int6458 = calculadora792.subInt(0, 250);
        Assertions.assertEquals(int6458, -250);
        boolean boolean2061 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2061, false);
    }
    @Test
    public void test474() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean5835 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5835, false);
        int int9324 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9324, 10000);
    }
    @Test
    public void test475() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean4116 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4116, false);
        boolean boolean9281 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean9281, true);
    }
    @Test
    public void test476() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double4056 = calculadora792.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double4056, 103.95);
    }
    @Test
    public void test477() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        int int2891 = calculadora792.divInt(100, -500);
        Assertions.assertEquals(int2891, 0);
    }
    @Test
    public void test478() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1680 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int1680, 350);
        int int4646 = calculadora792.mulInt(-100, 0);
        Assertions.assertEquals(int4646, 0);
    }
    @Test
    public void test479() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        java.lang.String string5091 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string5091, "VALEU");
        java.lang.String string873 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string873, "NICE");
    }
    @Test
    public void test480() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1709 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1709, false);
    }
    @Test
    public void test481() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        int int8365 = calculadora792.subInt(-250, 1000);
        Assertions.assertEquals(int8365, -1250);
    }
    @Test
    public void test482() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        boolean boolean3280 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean3280, false);
        java.lang.String string7478 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string7478, "nice");
    }
    @Test
    public void test483() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        java.lang.String string2728 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string2728, "HELLO");
        java.lang.String string4356 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string4356, "TOP");
    }
    @Test
    public void test485() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        boolean boolean8523 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8523, true);
        int int7469 = calculadora792.divInt(0, 1000);
        Assertions.assertEquals(int7469, 0);
    }
    @Test
    public void test486() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean914 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean914, false);
    }
    @Test
    public void test487() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
    }
    @Test
    public void test488() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
    }
    @Test
    public void test489() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        boolean boolean2388 = calculadora792.maior(-100, 250);
        Assertions.assertEquals(boolean2388, false);
    }
    @Test
    public void test490() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
        double double188 = calculadora792.subDouble(3.14159, -10.953);
        Assertions.assertEquals(double188, 14.09459);
    }
    @Test
    public void test491() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int3464 = calculadora792.divInt(-1000, 100);
        Assertions.assertEquals(int3464, -10);
        java.lang.String string8806 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string8806, "top");
    }
    @Test
    public void test493() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        double double5931 = calculadora792.somaDouble(-105.5, 10.953);
        Assertions.assertEquals(double5931, -94.547);
    }
    @Test
    public void test494() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        java.lang.String string2728 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string2728, "HELLO");
        java.lang.String string4356 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string4356, "TOP");
        int int1934 = calculadora792.subInt(-1000, -250);
        Assertions.assertEquals(int1934, -750);
    }
    @Test
    public void test495() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int3578 = calculadora792.divInt(-100, 1000);
        Assertions.assertEquals(int3578, 0);
    }
    @Test
    public void test496() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean6333 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6333, false);
    }
    @Test
    public void test497() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8229 = calculadora792.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double8229, 7.066451612903225);
        int int2012 = calculadora792.somaInt(500, -250);
        Assertions.assertEquals(int2012, 250);
    }
    @Test
    public void test498() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        int int5237 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int5237, 0);
        java.lang.String string3864 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string3864, "ipsum");
    }
    @Test
    public void test499() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        int int2500 = calculadora792.divInt(0, 250);
        Assertions.assertEquals(int2500, 0);
    }
    @Test
    public void test500() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        double double6365 = calculadora792.mulDouble(-1.55, 105.5);
        Assertions.assertEquals(double6365, -163.525);
    }
    @Test
    public void test501() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean4116 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4116, false);
        boolean boolean9281 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean9281, true);
        double double9640 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double9640, 34.409835269999995);
    }
    @Test
    public void test502() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        int int4692 = calculadora792.somaInt(-100, -100);
        Assertions.assertEquals(int4692, -200);
    }
    @Test
    public void test503() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        java.lang.String string9756 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9756, "hello");
        int int5154 = calculadora792.subInt(-1000, 100);
        Assertions.assertEquals(int5154, -1100);
    }
    @Test
    public void test505() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        int int641 = calculadora792.divInt(-500, -100);
        Assertions.assertEquals(int641, 5);
    }
    @Test
    public void test506() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
    }
    @Test
    public void test508() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double157 = calculadora792.divDouble(105.5, -1.55);
        Assertions.assertEquals(double157, -68.06451612903226);
        int int3938 = calculadora792.somaInt(-250, 1000);
        Assertions.assertEquals(int3938, 750);
    }
    @Test
    public void test509() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        int int5449 = calculadora792.mulInt(250, -500);
        Assertions.assertEquals(int5449, -125000);
        double double9141 = calculadora792.somaDouble(105.5, 10.953);
        Assertions.assertEquals(double9141, 116.453);
    }
    @Test
    public void test510() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        boolean boolean3575 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean3575, false);
        boolean boolean1087 = calculadora792.and(boolean3575, true);
        Assertions.assertEquals(boolean1087, false);
    }
    @Test
    public void test511() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
    }
    @Test
    public void test512() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        int int2788 = calculadora792.mulInt(100, 1000);
        Assertions.assertEquals(int2788, 100000);
    }
    @Test
    public void test513() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        java.lang.String string6167 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string6167, "NICE");
    }
    @Test
    public void test514() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        int int6963 = calculadora792.somaInt(250, -100);
        Assertions.assertEquals(int6963, 150);
        boolean boolean1531 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean1531, false);
    }
    @Test
    public void test515() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double7431 = calculadora792.somaDouble(0.55, 10.953);
        Assertions.assertEquals(double7431, 11.503);
    }
    @Test
    public void test516() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        boolean boolean3575 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean3575, false);
        double double8789 = calculadora792.divDouble(-10.953, -105.5);
        Assertions.assertEquals(double8789, 0.10381990521327014);
    }
    @Test
    public void test517() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        double double161 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double161, -1155.5415);
        java.lang.String string4191 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string4191, "go");
        boolean boolean9426 = calculadora792.menor(100, -100);
        Assertions.assertEquals(boolean9426, false);
    }
    @Test
    public void test518() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        double double6206 = calculadora792.subDouble(0.55, -10.953);
        Assertions.assertEquals(double6206, 11.503);
    }
    @Test
    public void test519() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        int int194 = calculadora792.somaInt(250, -500);
        Assertions.assertEquals(int194, -250);
        int int9745 = calculadora792.mulInt(-100, -250);
        Assertions.assertEquals(int9745, 25000);
    }
    @Test
    public void test520() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        java.lang.String string3796 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3796, "nice");
    }
    @Test
    public void test521() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean6946 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean6946, false);
        double double1280 = calculadora792.somaDouble(-1.55, -1.55);
        Assertions.assertEquals(double1280, -3.1);
    }
    @Test
    public void test524() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1709 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1709, false);
        boolean boolean8218 = calculadora792.and(false, boolean399);
        Assertions.assertEquals(boolean8218, false);
    }
    @Test
    public void test525() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        java.lang.String string787 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string787, "TOP");
    }
    @Test
    public void test526() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string5224 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string5224, "top");
    }
    @Test
    public void test527() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        java.lang.String string7145 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string7145, "lorem");
    }
    @Test
    public void test528() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean5835 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5835, false);
        java.lang.String string3307 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string3307, "valeu");
        boolean boolean3237 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3237, false);
    }
    @Test
    public void test529() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        double double7882 = calculadora792.divDouble(0.0, -10.953);
        Assertions.assertEquals(double7882, -0.0);
    }
    @Test
    public void test532() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        java.lang.String string5091 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string5091, "VALEU");
        java.lang.String string873 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string873, "NICE");
        boolean boolean9701 = calculadora792.menor(-1000, 1000);
        Assertions.assertEquals(boolean9701, true);
    }
    @Test
    public void test533() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string7688 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7688, "TOP");
    }
    @Test
    public void test534() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1160 = calculadora792.maior(250, -1000);
        Assertions.assertEquals(boolean1160, true);
    }
    @Test
    public void test535() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean3895 = calculadora792.maior(1000, -250);
        Assertions.assertEquals(boolean3895, true);
        double double9960 = calculadora792.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double9960, 7.066451612903225);
    }
    @Test
    public void test536() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        int int4464 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int4464, -600);
    }
    @Test
    public void test537() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        java.lang.String string6335 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string6335, "valeu");
        double double8408 = calculadora792.subDouble(0.55, -1.55);
        Assertions.assertEquals(double8408, 2.1);
    }
    @Test
    public void test538() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3691 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int3691, -600);
        int int7512 = calculadora792.somaInt(-250, 0);
        Assertions.assertEquals(int7512, -250);
    }
    @Test
    public void test539() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6518 = calculadora792.mulInt(-1000, 0);
        Assertions.assertEquals(int6518, 0);
        java.lang.String string9949 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string9949, "IPSUM");
    }
    @Test
    public void test540() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        double double4796 = calculadora792.subDouble(0.55, 0.55);
        Assertions.assertEquals(double4796, 0.0);
        java.lang.String string947 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string947, "VALEU");
    }
    @Test
    public void test541() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean6946 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean6946, false);
        int int4422 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int4422, 0);
        double double3165 = calculadora792.mulDouble(105.5, 0.55);
        Assertions.assertEquals(double3165, 58.025000000000006);
    }
    @Test
    public void test542() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
        double double3160 = calculadora792.mulDouble(-10.953, -1.55);
        Assertions.assertEquals(double3160, 16.977149999999998);
    }
    @Test
    public void test544() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean2980 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2980, false);
        int int2304 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int2304, -250000);
    }
    @Test
    public void test545() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        int int8771 = calculadora792.mulInt(-1000, -250);
        Assertions.assertEquals(int8771, 250000);
    }
    @Test
    public void test546() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        boolean boolean2893 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2893, true);
        double double9726 = calculadora792.subDouble(0.55, 0.0);
        Assertions.assertEquals(double9726, 0.55);
        java.lang.String string4374 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4374, "GO");
    }
    @Test
    public void test547() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double7427 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double7427, 108.64159);
    }
    @Test
    public void test548() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int7705 = calculadora792.subInt(-500, 0);
        Assertions.assertEquals(int7705, -500);
    }
    @Test
    public void test549() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean1869 = calculadora792.menor(-500, 250);
        Assertions.assertEquals(boolean1869, true);
    }
    @Test
    public void test550() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1160 = calculadora792.maior(250, -1000);
        Assertions.assertEquals(boolean1160, true);
        double double9225 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double9225, 0.0);
    }
    @Test
    public void test551() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double3095 = calculadora792.mulDouble(-10.953, -105.5);
        Assertions.assertEquals(double3095, 1155.5415);
    }
    @Test
    public void test552() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        java.lang.String string4372 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4372, "GO");
        int int9899 = calculadora792.divInt(-1000, 1000);
        Assertions.assertEquals(int9899, -1);
    }
    @Test
    public void test553() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        double double6365 = calculadora792.mulDouble(-1.55, 105.5);
        Assertions.assertEquals(double6365, -163.525);
        java.lang.String string8068 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string8068, "NICE");
    }
    @Test
    public void test554() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        int int1502 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int1502, 0);
        boolean boolean5722 = calculadora792.menor(-250, -100);
        Assertions.assertEquals(boolean5722, true);
    }
    @Test
    public void test555() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean3011 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3011, true);
        java.lang.String string6440 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string6440, "VALEU");
    }
    @Test
    public void test557() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        int int742 = calculadora792.subInt(-100, 500);
        Assertions.assertEquals(int742, -600);
    }
    @Test
    public void test558() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        double double6221 = calculadora792.somaDouble(3.14159, 0.55);
        Assertions.assertEquals(double6221, 3.6915899999999997);
    }
    @Test
    public void test559() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        double double6847 = calculadora792.mulDouble(-105.5, 0.0);
        Assertions.assertEquals(double6847, -0.0);
    }
    @Test
    public void test560() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
        boolean boolean5444 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5444, false);
    }
    @Test
    public void test561() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        boolean boolean9262 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9262, false);
    }
    @Test
    public void test562() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double2088 = calculadora792.subDouble(1.99, 1.99);
        Assertions.assertEquals(double2088, 0.0);
        double double4862 = calculadora792.subDouble(0.0, 3.14159);
        Assertions.assertEquals(double4862, -3.14159);
    }
    @Test
    public void test563() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        boolean boolean9993 = calculadora792.menor(-250, -1000);
        Assertions.assertEquals(boolean9993, false);
    }
    @Test
    public void test564() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1741 = calculadora792.subInt(-250, 0);
        Assertions.assertEquals(int1741, -250);
        boolean boolean1975 = calculadora792.menor(-1000, 0);
        Assertions.assertEquals(boolean1975, true);
        java.lang.String string2955 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string2955, "top");
    }
    @Test
    public void test565() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        java.lang.String string4372 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4372, "GO");
        int int9899 = calculadora792.divInt(-1000, 1000);
        Assertions.assertEquals(int9899, -1);
        int int148 = calculadora792.subInt(500, 250);
        Assertions.assertEquals(int148, 250);
    }
    @Test
    public void test566() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        java.lang.String string5583 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string5583, "GO");
        boolean boolean592 = calculadora792.menor(500, 500);
        Assertions.assertEquals(boolean592, false);
    }
    @Test
    public void test567() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int8773 = calculadora792.mulInt(100, -500);
        Assertions.assertEquals(int8773, -50000);
    }
    @Test
    public void test568() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
    }
    @Test
    public void test569() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int6318 = calculadora792.mulInt(-250, -1000);
        Assertions.assertEquals(int6318, 250000);
    }
    @Test
    public void test570() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int3578 = calculadora792.divInt(-100, 1000);
        Assertions.assertEquals(int3578, 0);
        boolean boolean8331 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean8331, false);
    }
    @Test
    public void test571() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean3895 = calculadora792.maior(1000, -250);
        Assertions.assertEquals(boolean3895, true);
        java.lang.String string4484 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string4484, "ipsum");
    }
    @Test
    public void test572() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double7418 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double7418, -105.5);
        boolean boolean5369 = calculadora792.maior(-100, -250);
        Assertions.assertEquals(boolean5369, true);
    }
    @Test
    public void test573() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string197 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string197, "lorem");
        int int4064 = calculadora792.somaInt(100, 250);
        Assertions.assertEquals(int4064, 350);
    }
    @Test
    public void test574() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean615 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean615, false);
        int int3742 = calculadora792.subInt(0, -250);
        Assertions.assertEquals(int3742, 250);
    }
    @Test
    public void test575() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3691 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int3691, -600);
        boolean boolean4063 = calculadora792.menor(1000, -1000);
        Assertions.assertEquals(boolean4063, false);
    }
    @Test
    public void test576() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean2924 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean2924, true);
        java.lang.String string2958 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string2958, "valeu");
    }
    @Test
    public void test577() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        int int4787 = calculadora792.somaInt(100, 0);
        Assertions.assertEquals(int4787, 100);
    }
    @Test
    public void test578() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string4626 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string4626, "top");
        double double7911 = calculadora792.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double7911, -0.8525000000000001);
    }
    @Test
    public void test579() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        boolean boolean4321 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4321, false);
    }
    @Test
    public void test582() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int6089 = calculadora792.divInt(0, 500);
        Assertions.assertEquals(int6089, 0);
        boolean boolean8084 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean8084, true);
        int int5553 = calculadora792.subInt(100, -1000);
        Assertions.assertEquals(int5553, 1100);
    }
    @Test
    public void test583() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double7638 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double7638, 107.05);
        double double4616 = calculadora792.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double4616, 0.43999999999999995);
        int int2971 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int2971, 0);
    }
    @Test
    public void test584() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        double double3673 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double3673, 94.547);
        boolean boolean8296 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean8296, true);
    }
    @Test
    public void test585() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int6586 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int6586, 62500);
        int int1853 = calculadora792.subInt(100, -100);
        Assertions.assertEquals(int1853, 200);
    }
    @Test
    public void test586() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        boolean boolean9183 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean9183, false);
    }
    @Test
    public void test587() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        java.lang.String string7145 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string7145, "lorem");
        boolean boolean3483 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3483, false);
    }
    @Test
    public void test588() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        boolean boolean3280 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean3280, false);
        java.lang.String string7022 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7022, "LOREM");
        boolean boolean5614 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5614, false);
    }
    @Test
    public void test589() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double3758 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double3758, 0.0);
    }
    @Test
    public void test590() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
        java.lang.String string2110 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string2110, "nice");
    }
    @Test
    public void test592() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2061 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2061, "VALEU");
        double double9880 = calculadora792.somaDouble(-1.55, -10.953);
        Assertions.assertEquals(double9880, -12.503);
        boolean boolean4899 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean4899, true);
    }
    @Test
    public void test593() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        java.lang.String string166 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string166, "GO");
        boolean boolean2519 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2519, true);
    }
    @Test
    public void test594() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        java.lang.String string9756 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9756, "hello");
        int int1917 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int1917, 125000);
        double double3446 = calculadora792.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double3446, 0.0);
    }
    @Test
    public void test595() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        boolean boolean8523 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8523, true);
        boolean boolean3029 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3029, true);
    }
    @Test
    public void test596() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int9471 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int9471, 500000);
        double double4764 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double4764, 9.632064274627956);
    }
    @Test
    public void test597() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        java.lang.String string1403 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string1403, "LOREM");
    }
    @Test
    public void test598() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean716 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean716, false);
        boolean boolean6148 = calculadora792.and(boolean6342, true);
        Assertions.assertEquals(boolean6148, false);
    }
    @Test
    public void test599() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4498 = calculadora792.maior(-1000, 500);
        Assertions.assertEquals(boolean4498, false);
    }
    @Test
    public void test601() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean716 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean716, false);
        boolean boolean6148 = calculadora792.and(boolean6342, true);
        Assertions.assertEquals(boolean6148, false);
        double double9714 = calculadora792.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double9714, -9.632064274627956);
    }
    @Test
    public void test602() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        java.lang.String string5091 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string5091, "VALEU");
        int int6615 = calculadora792.somaInt(-500, -500);
        Assertions.assertEquals(int6615, -1000);
    }
    @Test
    public void test603() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean5909 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5909, true);
    }
    @Test
    public void test604() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean6372 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6372, true);
    }
    @Test
    public void test605() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string364 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string364, "hello");
        boolean boolean8283 = calculadora792.maior(-1000, -500);
        Assertions.assertEquals(boolean8283, false);
    }
    @Test
    public void test606() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        double double8217 = calculadora792.mulDouble(0.55, 0.0);
        Assertions.assertEquals(double8217, 0.0);
    }
    @Test
    public void test607() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
    }
    @Test
    public void test610() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
        double double2837 = calculadora792.subDouble(0.55, 3.14159);
        Assertions.assertEquals(double2837, -2.59159);
    }
    @Test
    public void test611() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        int int3821 = calculadora792.somaInt(-100, -250);
        Assertions.assertEquals(int3821, -350);
    }
    @Test
    public void test612() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        int int6720 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int6720, -150);
    }
    @Test
    public void test613() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean2980 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2980, false);
        int int2304 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int2304, -250000);
        double double9832 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double9832, -116.453);
    }
    @Test
    public void test614() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean4097 = calculadora792.menor(-500, 500);
        Assertions.assertEquals(boolean4097, true);
    }
    @Test
    public void test615() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean3427 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3427, false);
        boolean boolean9223 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean9223, true);
    }
    @Test
    public void test616() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        boolean boolean9070 = calculadora792.maior(1000, -100);
        Assertions.assertEquals(boolean9070, true);
    }
    @Test
    public void test617() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int1535 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int1535, 0);
        boolean boolean47 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean47, true);
    }
    @Test
    public void test618() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int2130 = calculadora792.divInt(-1000, -100);
        Assertions.assertEquals(int2130, 10);
    }
    @Test
    public void test619() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean2961 = calculadora792.maior(1000, 250);
        Assertions.assertEquals(boolean2961, true);
    }
    @Test
    public void test621() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
        boolean boolean648 = calculadora792.menor(500, 250);
        Assertions.assertEquals(boolean648, false);
    }
    @Test
    public void test623() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
        java.lang.String string2110 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string2110, "nice");
        boolean boolean7904 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean7904, false);
    }
    @Test
    public void test624() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double9802 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9802, -4.8694645);
        double double4473 = calculadora792.mulDouble(-10.953, 0.55);
        Assertions.assertEquals(double4473, -6.024150000000001);
    }
    @Test
    public void test625() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int4727 = calculadora792.somaInt(-1000, 100);
        Assertions.assertEquals(int4727, -900);
    }
    @Test
    public void test626() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
    }
    @Test
    public void test629() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int6089 = calculadora792.divInt(0, 500);
        Assertions.assertEquals(int6089, 0);
        boolean boolean9978 = calculadora792.menor(250, 250);
        Assertions.assertEquals(boolean9978, false);
    }
    @Test
    public void test632() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        int int1341 = calculadora792.somaInt(500, 1000);
        Assertions.assertEquals(int1341, 1500);
    }
    @Test
    public void test633() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        boolean boolean4986 = calculadora792.menor(-500, 1000);
        Assertions.assertEquals(boolean4986, true);
    }
    @Test
    public void test634() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        boolean boolean1682 = calculadora792.and(true, boolean3614);
        Assertions.assertEquals(boolean1682, false);
        int int9456 = calculadora792.mulInt(-500, 1000);
        Assertions.assertEquals(int9456, -500000);
    }
    @Test
    public void test635() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        boolean boolean6853 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean6853, false);
    }
    @Test
    public void test636() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        java.lang.String string1860 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string1860, "go");
    }
    @Test
    public void test637() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        int int9309 = calculadora792.divInt(1000, 250);
        Assertions.assertEquals(int9309, 4);
        boolean boolean842 = calculadora792.menor(0, 1000);
        Assertions.assertEquals(boolean842, true);
    }
    @Test
    public void test638() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double157 = calculadora792.divDouble(105.5, -1.55);
        Assertions.assertEquals(double157, -68.06451612903226);
        int int9240 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int9240, -250000);
    }
    @Test
    public void test639() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        java.lang.String string166 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string166, "GO");
        boolean boolean2519 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2519, true);
        double double2187 = calculadora792.mulDouble(105.5, -1.55);
        Assertions.assertEquals(double2187, -163.525);
    }
    @Test
    public void test640() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        double double6022 = calculadora792.divDouble(0.0, -10.953);
        Assertions.assertEquals(double6022, -0.0);
        java.lang.String string9248 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string9248, "IPSUM");
        double double6622 = calculadora792.somaDouble(0.55, 10.953);
        Assertions.assertEquals(double6622, 11.503);
    }
    @Test
    public void test641() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5158 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5158, 500000);
    }
    @Test
    public void test642() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        boolean boolean6352 = calculadora792.or(false, boolean2390);
        Assertions.assertEquals(boolean6352, false);
        java.lang.String string3377 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3377, "nice");
    }
    @Test
    public void test643() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double3758 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double3758, 0.0);
        double double3447 = calculadora792.subDouble(0.55, 0.55);
        Assertions.assertEquals(double3447, 0.0);
    }
    @Test
    public void test645() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        int int3527 = calculadora792.divInt(250, -1000);
        Assertions.assertEquals(int3527, 0);
    }
    @Test
    public void test646() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string197 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string197, "lorem");
        java.lang.String string2224 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string2224, "IPSUM");
    }
    @Test
    public void test647() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double4694 = calculadora792.subDouble(0.0, -1.55);
        Assertions.assertEquals(double4694, 1.55);
        double double2101 = calculadora792.divDouble(105.5, -105.5);
        Assertions.assertEquals(double2101, -1.0);
    }
    @Test
    public void test648() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double5263 = calculadora792.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double5263, 1.7278745);
    }
    @Test
    public void test649() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        double double9953 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double9953, 0.0502145530904775);
    }
    @Test
    public void test650() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double2088 = calculadora792.subDouble(1.99, 1.99);
        Assertions.assertEquals(double2088, 0.0);
        double double4418 = calculadora792.somaDouble(0.0, 0.55);
        Assertions.assertEquals(double4418, 0.55);
    }
    @Test
    public void test651() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean4468 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean4468, true);
        java.lang.String string9420 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string9420, "top");
    }
    @Test
    public void test652() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        boolean boolean8523 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8523, true);
        boolean boolean3029 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3029, true);
        int int8106 = calculadora792.mulInt(-100, 100);
        Assertions.assertEquals(int8106, -10000);
    }
    @Test
    public void test653() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double2301 = calculadora792.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double2301, -104.95);
    }
    @Test
    public void test655() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        double double3271 = calculadora792.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double3271, 1.0945);
    }
    @Test
    public void test656() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        double double1099 = calculadora792.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double1099, -1.0);
    }
    @Test
    public void test657() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        java.lang.String string5613 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5613, "HELLO");
        double double3837 = calculadora792.subDouble(-10.953, -105.5);
        Assertions.assertEquals(double3837, 94.547);
    }
    @Test
    public void test658() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2061 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2061, "VALEU");
        double double9880 = calculadora792.somaDouble(-1.55, -10.953);
        Assertions.assertEquals(double9880, -12.503);
        double double7030 = calculadora792.somaDouble(10.953, 0.0);
        Assertions.assertEquals(double7030, 10.953);
        int int6861 = calculadora792.mulInt(-1000, -250);
        Assertions.assertEquals(int6861, 250000);
    }
    @Test
    public void test659() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        int int1529 = calculadora792.mulInt(500, -250);
        Assertions.assertEquals(int1529, -125000);
        boolean boolean1411 = calculadora792.menor(250, -250);
        Assertions.assertEquals(boolean1411, false);
    }
    @Test
    public void test660() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        java.lang.String string812 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string812, "hello");
        boolean boolean3345 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3345, true);
    }
    @Test
    public void test661() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int2069 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2069, 900);
        boolean boolean89 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean89, true);
    }
    @Test
    public void test662() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int835 = calculadora792.mulInt(-500, -500);
        Assertions.assertEquals(int835, 250000);
    }
    @Test
    public void test663() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean2924 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean2924, true);
        java.lang.String string2958 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string2958, "valeu");
        double double9733 = calculadora792.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double9733, 0.0);
    }
    @Test
    public void test664() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        java.lang.String string6335 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string6335, "valeu");
        double double591 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double591, -107.49);
    }
    @Test
    public void test666() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean6946 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean6946, false);
        double double1280 = calculadora792.somaDouble(-1.55, -1.55);
        Assertions.assertEquals(double1280, -3.1);
        boolean boolean8407 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean8407, true);
    }
    @Test
    public void test667() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int6318 = calculadora792.mulInt(-250, -1000);
        Assertions.assertEquals(int6318, 250000);
        java.lang.String string4262 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string4262, "HELLO");
    }
    @Test
    public void test668() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int8945 = calculadora792.divInt(-500, 1000);
        Assertions.assertEquals(int8945, 0);
        double double9569 = calculadora792.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double9569, -209.945);
    }
    @Test
    public void test669() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double7418 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double7418, -105.5);
        java.lang.String string7396 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string7396, "HI");
    }
    @Test
    public void test670() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        java.lang.String string5315 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5315, "valeu");
    }
    @Test
    public void test671() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
        boolean boolean648 = calculadora792.menor(500, 250);
        Assertions.assertEquals(boolean648, false);
        boolean boolean2079 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean2079, true);
    }
    @Test
    public void test672() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        boolean boolean7369 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean7369, true);
    }
    @Test
    public void test674() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1680 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int1680, 350);
        int int4646 = calculadora792.mulInt(-100, 0);
        Assertions.assertEquals(int4646, 0);
        boolean boolean4498 = calculadora792.or(boolean2390, false);
        Assertions.assertEquals(boolean4498, false);
    }
    @Test
    public void test675() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int2130 = calculadora792.divInt(-1000, -100);
        Assertions.assertEquals(int2130, 10);
        int int9791 = calculadora792.subInt(-1000, 0);
        Assertions.assertEquals(int9791, -1000);
    }
    @Test
    public void test676() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double413 = calculadora792.subDouble(10.953, 1.99);
        Assertions.assertEquals(double413, 8.963);
        double double6924 = calculadora792.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double6924, -1.55);
    }
    @Test
    public void test677() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string7528 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7528, "go");
    }
    @Test
    public void test679() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        boolean boolean4157 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean4157, false);
        boolean boolean3204 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean3204, false);
    }
    @Test
    public void test680() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean6372 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6372, true);
        double double1857 = calculadora792.divDouble(10.953, 105.5);
        Assertions.assertEquals(double1857, 0.10381990521327014);
    }
    @Test
    public void test682() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        double double3271 = calculadora792.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double3271, 1.0945);
        int int8849 = calculadora792.divInt(-500, 1000);
        Assertions.assertEquals(int8849, 0);
    }
    @Test
    public void test683() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
    }
    @Test
    public void test684() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean6372 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6372, true);
        double double1857 = calculadora792.divDouble(10.953, 105.5);
        Assertions.assertEquals(double1857, 0.10381990521327014);
        double double4911 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double4911, 107.05);
    }
    @Test
    public void test685() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        double double1870 = calculadora792.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double1870, 0.014691943127962086);
    }
    @Test
    public void test686() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        java.lang.String string2238 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string2238, "NICE");
        double double6459 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double6459, 0.0);
    }
    @Test
    public void test687() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double9802 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9802, -4.8694645);
        double double4473 = calculadora792.mulDouble(-10.953, 0.55);
        Assertions.assertEquals(double4473, -6.024150000000001);
        boolean boolean3895 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3895, true);
    }
    @Test
    public void test688() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        int int8771 = calculadora792.mulInt(-1000, -250);
        Assertions.assertEquals(int8771, 250000);
        boolean boolean4440 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean4440, true);
    }
    @Test
    public void test689() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        boolean boolean4802 = calculadora792.or(boolean7494, false);
        Assertions.assertEquals(boolean4802, false);
    }
    @Test
    public void test690() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        boolean boolean3058 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean3058, true);
    }
    @Test
    public void test691() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        java.lang.String string8102 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string8102, "top");
    }
    @Test
    public void test693() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean6333 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6333, false);
        int int8783 = calculadora792.divInt(100, 1000);
        Assertions.assertEquals(int8783, 0);
    }
    @Test
    public void test694() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        java.lang.String string5613 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5613, "HELLO");
        boolean boolean9034 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9034, true);
    }
    @Test
    public void test695() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        int int5015 = calculadora792.somaInt(-1000, 250);
        Assertions.assertEquals(int5015, -750);
    }
    @Test
    public void test696() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean8498 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean8498, false);
    }
    @Test
    public void test697() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        int int2500 = calculadora792.divInt(0, 250);
        Assertions.assertEquals(int2500, 0);
        boolean boolean3738 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3738, true);
    }
    @Test
    public void test698() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int2130 = calculadora792.divInt(-1000, -100);
        Assertions.assertEquals(int2130, 10);
        int int9791 = calculadora792.subInt(-1000, 0);
        Assertions.assertEquals(int9791, -1000);
        int int8225 = calculadora792.divInt(250, -500);
        Assertions.assertEquals(int8225, 0);
    }
    @Test
    public void test699() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int352 = calculadora792.subInt(100, -100);
        Assertions.assertEquals(int352, 200);
        boolean boolean4642 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean4642, true);
        boolean boolean6439 = calculadora792.maior(-1000, -500);
        Assertions.assertEquals(boolean6439, false);
    }
    @Test
    public void test700() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        java.lang.String string4305 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string4305, "lorem");
        int int7688 = calculadora792.subInt(250, 100);
        Assertions.assertEquals(int7688, 150);
        double double6518 = calculadora792.subDouble(10.953, -105.5);
        Assertions.assertEquals(double6518, 116.453);
    }
    @Test
    public void test701() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        double double2711 = calculadora792.subDouble(0.0, 0.55);
        Assertions.assertEquals(double2711, -0.55);
    }
    @Test
    public void test702() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
        int int9292 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int9292, 0);
    }
    @Test
    public void test703() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        double double3561 = calculadora792.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double3561, 0.6334372085472643);
    }
    @Test
    public void test704() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        boolean boolean9262 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9262, false);
        boolean boolean5728 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5728, true);
    }
    @Test
    public void test705() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        double double4207 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4207, 34.409835269999995);
        java.lang.String string4949 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string4949, "VALEU");
    }
    @Test
    public void test706() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int7793 = calculadora792.somaInt(100, -1000);
        Assertions.assertEquals(int7793, -900);
    }
    @Test
    public void test707() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        boolean boolean3089 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean3089, false);
        int int977 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int977, -25000);
    }
    @Test
    public void test708() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string1743 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string1743, "nice");
    }
    @Test
    public void test710() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int6089 = calculadora792.divInt(0, 500);
        Assertions.assertEquals(int6089, 0);
        boolean boolean8084 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean8084, true);
        int int5553 = calculadora792.subInt(100, -1000);
        Assertions.assertEquals(int5553, 1100);
        int int2662 = calculadora792.mulInt(500, 250);
        Assertions.assertEquals(int2662, 125000);
    }
    @Test
    public void test711() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double2396 = calculadora792.somaDouble(-10.953, 0.55);
        Assertions.assertEquals(double2396, -10.402999999999999);
    }
    @Test
    public void test712() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        java.lang.String string2238 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string2238, "NICE");
        double double9190 = calculadora792.somaDouble(-1.55, -10.953);
        Assertions.assertEquals(double9190, -12.503);
    }
    @Test
    public void test713() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean6719 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean6719, true);
        boolean boolean2256 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean2256, true);
    }
    @Test
    public void test714() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int5047 = calculadora792.mulInt(500, 0);
        Assertions.assertEquals(int5047, 0);
    }
    @Test
    public void test715() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6518 = calculadora792.mulInt(-1000, 0);
        Assertions.assertEquals(int6518, 0);
        java.lang.String string9949 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string9949, "IPSUM");
        boolean boolean9893 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean9893, false);
    }
    @Test
    public void test716() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean2467 = calculadora792.menor(1000, -250);
        Assertions.assertEquals(boolean2467, false);
    }
    @Test
    public void test717() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double9802 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9802, -4.8694645);
        double double4473 = calculadora792.mulDouble(-10.953, 0.55);
        Assertions.assertEquals(double4473, -6.024150000000001);
        boolean boolean3895 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3895, true);
        boolean boolean6790 = calculadora792.maior(-1000, -500);
        Assertions.assertEquals(boolean6790, false);
    }
    @Test
    public void test718() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int1621 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int1621, 600);
        int int9441 = calculadora792.mulInt(-1000, 1000);
        Assertions.assertEquals(int9441, -1000000);
    }
    @Test
    public void test719() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        int int572 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int572, 0);
        int int4119 = calculadora792.subInt(-1000, -500);
        Assertions.assertEquals(int4119, -500);
    }
    @Test
    public void test720() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        int int8162 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int8162, 2);
    }
    @Test
    public void test722() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean3895 = calculadora792.maior(1000, -250);
        Assertions.assertEquals(boolean3895, true);
        double double9709 = calculadora792.subDouble(-10.953, 1.99);
        Assertions.assertEquals(double9709, -12.943);
    }
    @Test
    public void test723() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        boolean boolean8455 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean8455, false);
        double double2565 = calculadora792.subDouble(105.5, 0.55);
        Assertions.assertEquals(double2565, 104.95);
    }
    @Test
    public void test725() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int1621 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int1621, 600);
        int int3929 = calculadora792.divInt(-100, 1000);
        Assertions.assertEquals(int3929, 0);
    }
    @Test
    public void test726() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
        boolean boolean5817 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean5817, true);
    }
    @Test
    public void test727() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean6333 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6333, false);
        int int8783 = calculadora792.divInt(100, 1000);
        Assertions.assertEquals(int8783, 0);
        boolean boolean8681 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean8681, false);
    }
    @Test
    public void test728() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        int int9309 = calculadora792.divInt(1000, 250);
        Assertions.assertEquals(int9309, 4);
        int int4460 = calculadora792.subInt(-100, 0);
        Assertions.assertEquals(int4460, -100);
    }
    @Test
    public void test730() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        boolean boolean4802 = calculadora792.or(boolean7494, false);
        Assertions.assertEquals(boolean4802, false);
        int int4853 = calculadora792.somaInt(-100, -250);
        Assertions.assertEquals(int4853, -350);
    }
    @Test
    public void test731() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int1462 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int1462, 500000);
        boolean boolean5184 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5184, false);
    }
    @Test
    public void test732() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5158 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5158, 500000);
        int int4464 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int4464, -100);
    }
    @Test
    public void test733() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        int int1231 = calculadora792.divInt(100, -500);
        Assertions.assertEquals(int1231, 0);
    }
    @Test
    public void test734() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int1621 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int1621, 600);
        int int9441 = calculadora792.mulInt(-1000, 1000);
        Assertions.assertEquals(int9441, -1000000);
        boolean boolean9503 = calculadora792.menor(250, -250);
        Assertions.assertEquals(boolean9503, false);
    }
    @Test
    public void test735() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        java.lang.String string2987 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string2987, "NICE");
    }
    @Test
    public void test736() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        java.lang.String string446 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string446, "TOP");
    }
    @Test
    public void test738() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double5263 = calculadora792.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double5263, 1.7278745);
        java.lang.String string5089 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5089, "lorem");
    }
    @Test
    public void test739() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
        java.lang.String string1394 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string1394, "HELLO");
    }
    @Test
    public void test740() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        int int6258 = calculadora792.mulInt(500, 1000);
        Assertions.assertEquals(int6258, 500000);
    }
    @Test
    public void test741() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        int int8067 = calculadora792.somaInt(-500, 100);
        Assertions.assertEquals(int8067, -400);
    }
    @Test
    public void test744() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        boolean boolean5993 = calculadora792.menor(1000, -100);
        Assertions.assertEquals(boolean5993, false);
    }
    @Test
    public void test745() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        java.lang.String string6502 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string6502, "HELLO");
        int int6992 = calculadora792.subInt(-1000, -500);
        Assertions.assertEquals(int6992, -500);
    }
    @Test
    public void test746() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5158 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5158, 500000);
        int int4464 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int4464, -100);
        boolean boolean5511 = calculadora792.menor(-100, 100);
        Assertions.assertEquals(boolean5511, true);
    }
    @Test
    public void test747() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        int int8387 = calculadora792.divInt(-500, -1000);
        Assertions.assertEquals(int8387, 0);
    }
    @Test
    public void test748() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        java.lang.String string5091 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string5091, "VALEU");
        java.lang.String string873 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string873, "NICE");
        java.lang.String string576 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string576, "top");
    }
    @Test
    public void test749() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        boolean boolean2965 = calculadora792.menor(1000, -250);
        Assertions.assertEquals(boolean2965, false);
        java.lang.String string6073 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6073, "top");
    }
    @Test
    public void test753() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
        java.lang.String string4439 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string4439, "HI");
        int int4390 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4390, -250000);
        boolean boolean8765 = calculadora792.or(false, boolean6721);
        Assertions.assertEquals(boolean8765, false);
    }
    @Test
    public void test754() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int4743 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4743, 62500);
    }
    @Test
    public void test755() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        java.lang.String string1403 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string1403, "LOREM");
        boolean boolean5582 = calculadora792.menor(-100, -250);
        Assertions.assertEquals(boolean5582, false);
    }
    @Test
    public void test756() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        double double4574 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double4574, -103.51);
    }
    @Test
    public void test757() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        int int5412 = calculadora792.somaInt(-1000, 100);
        Assertions.assertEquals(int5412, -900);
    }
    @Test
    public void test758() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        java.lang.String string5315 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5315, "valeu");
        boolean boolean7838 = calculadora792.menor(100, -250);
        Assertions.assertEquals(boolean7838, false);
    }
    @Test
    public void test760() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        boolean boolean9031 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean9031, false);
    }
    @Test
    public void test761() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3691 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int3691, -600);
        int int7512 = calculadora792.somaInt(-250, 0);
        Assertions.assertEquals(int7512, -250);
        boolean boolean391 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean391, false);
    }
    @Test
    public void test762() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int9726 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int9726, -25000);
        int int5255 = calculadora792.somaInt(-100, -500);
        Assertions.assertEquals(int5255, -600);
    }
    @Test
    public void test763() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int9726 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int9726, -25000);
        double double2012 = calculadora792.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double2012, 6.2517641);
    }
    @Test
    public void test764() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        java.lang.String string812 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string812, "hello");
        boolean boolean3345 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3345, true);
        double double8309 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double8309, -1155.5415);
    }
    @Test
    public void test765() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        int int6731 = calculadora792.subInt(-250, 100);
        Assertions.assertEquals(int6731, -350);
        int int9290 = calculadora792.mulInt(0, 250);
        Assertions.assertEquals(int9290, 0);
    }
    @Test
    public void test767() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        int int2024 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int2024, -25000);
        int int9525 = calculadora792.subInt(100, -1000);
        Assertions.assertEquals(int9525, 1100);
    }
    @Test
    public void test768() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean3047 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3047, true);
        int int6906 = calculadora792.mulInt(-250, -100);
        Assertions.assertEquals(int6906, 25000);
    }
    @Test
    public void test769() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int5717 = calculadora792.mulInt(-100, 500);
        Assertions.assertEquals(int5717, -50000);
        double double9865 = calculadora792.divDouble(0.0, 10.953);
        Assertions.assertEquals(double9865, 0.0);
    }
    @Test
    public void test770() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int3464 = calculadora792.divInt(-1000, 100);
        Assertions.assertEquals(int3464, -10);
        int int190 = calculadora792.somaInt(-1000, 100);
        Assertions.assertEquals(int190, -900);
    }
    @Test
    public void test771() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        java.lang.String string401 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string401, "HELLO");
        boolean boolean8108 = calculadora792.maior(-100, 250);
        Assertions.assertEquals(boolean8108, false);
    }
    @Test
    public void test772() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double2396 = calculadora792.somaDouble(-10.953, 0.55);
        Assertions.assertEquals(double2396, -10.402999999999999);
        boolean boolean7858 = calculadora792.menor(250, 500);
        Assertions.assertEquals(boolean7858, true);
    }
    @Test
    public void test774() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        java.lang.String string6622 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string6622, "nice");
    }
    @Test
    public void test775() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        java.lang.String string5315 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5315, "valeu");
        double double4243 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4243, -107.05);
    }
    @Test
    public void test776() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean8498 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean8498, false);
        int int9866 = calculadora792.divInt(-250, -250);
        Assertions.assertEquals(int9866, 1);
    }
    @Test
    public void test778() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        java.lang.String string787 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string787, "TOP");
        int int5548 = calculadora792.somaInt(-100, -100);
        Assertions.assertEquals(int5548, -200);
    }
    @Test
    public void test779() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        java.lang.String string6335 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string6335, "valeu");
        boolean boolean1154 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1154, false);
    }
    @Test
    public void test780() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        java.lang.String string5583 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string5583, "GO");
        java.lang.String string5955 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5955, "HELLO");
    }
    @Test
    public void test781() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        double double3149 = calculadora792.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double3149, 0.0);
    }
    @Test
    public void test782() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        double double466 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double466, 108.64159);
    }
    @Test
    public void test784() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        double double369 = calculadora792.divDouble(0.0, 105.5);
        Assertions.assertEquals(double369, 0.0);
        boolean boolean1060 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean1060, true);
    }
    @Test
    public void test785() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean7229 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean7229, true);
        double double4865 = calculadora792.mulDouble(105.5, 0.55);
        Assertions.assertEquals(double4865, 58.025000000000006);
    }
    @Test
    public void test786() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        boolean boolean5642 = calculadora792.menor(0, -250);
        Assertions.assertEquals(boolean5642, false);
    }
    @Test
    public void test788() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
        java.lang.String string5913 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5913, "valeu");
        double double9157 = calculadora792.somaDouble(10.953, 3.14159);
        Assertions.assertEquals(double9157, 14.09459);
    }
    @Test
    public void test789() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean2961 = calculadora792.maior(1000, 250);
        Assertions.assertEquals(boolean2961, true);
        boolean boolean8569 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean8569, true);
    }
    @Test
    public void test790() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
    }
    @Test
    public void test791() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int45 = calculadora792.divInt(-100, -250);
        Assertions.assertEquals(int45, 0);
    }
    @Test
    public void test792() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        double double6815 = calculadora792.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double6815, -58.025000000000006);
        boolean boolean2971 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2971, true);
    }
    @Test
    public void test793() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
        int int4486 = calculadora792.mulInt(-250, 0);
        Assertions.assertEquals(int4486, 0);
    }
    @Test
    public void test794() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int9471 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int9471, 500000);
        double double4764 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double4764, 9.632064274627956);
        boolean boolean3931 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3931, true);
    }
    @Test
    public void test795() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        boolean boolean3575 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean3575, false);
        double double8789 = calculadora792.divDouble(-10.953, -105.5);
        Assertions.assertEquals(double8789, 0.10381990521327014);
        double double8465 = calculadora792.subDouble(0.0, 1.99);
        Assertions.assertEquals(double8465, -1.99);
    }
    @Test
    public void test796() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6518 = calculadora792.mulInt(-1000, 0);
        Assertions.assertEquals(int6518, 0);
        int int3231 = calculadora792.subInt(250, -100);
        Assertions.assertEquals(int3231, 350);
    }
    @Test
    public void test797() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        boolean boolean1682 = calculadora792.and(true, boolean3614);
        Assertions.assertEquals(boolean1682, false);
        int int9456 = calculadora792.mulInt(-500, 1000);
        Assertions.assertEquals(int9456, -500000);
        int int6954 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int6954, 125000);
    }
    @Test
    public void test798() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        java.lang.String string1181 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string1181, "VALEU");
    }
    @Test
    public void test799() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
        java.lang.String string5528 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string5528, "nice");
    }
    @Test
    public void test800() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        java.lang.String string3827 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3827, "IPSUM");
        java.lang.String string2686 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string2686, "IPSUM");
        boolean boolean6758 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6758, true);
    }
    @Test
    public void test803() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        boolean boolean1166 = calculadora792.menor(1000, 500);
        Assertions.assertEquals(boolean1166, false);
    }
    @Test
    public void test805() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        double double161 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double161, -1155.5415);
        java.lang.String string4191 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string4191, "go");
        boolean boolean9426 = calculadora792.menor(100, -100);
        Assertions.assertEquals(boolean9426, false);
        boolean boolean3770 = calculadora792.maior(250, 0);
        Assertions.assertEquals(boolean3770, true);
    }
    @Test
    public void test806() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double2978 = calculadora792.mulDouble(0.0, 0.55);
        Assertions.assertEquals(double2978, 0.0);
    }
    @Test
    public void test807() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int4377 = calculadora792.divInt(-500, 100);
        Assertions.assertEquals(int4377, -5);
    }
    @Test
    public void test808() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double1145 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double1145, -107.05);
    }
    @Test
    public void test809() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        boolean boolean7219 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean7219, true);
    }
    @Test
    public void test810() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8229 = calculadora792.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double8229, 7.066451612903225);
        boolean boolean1792 = calculadora792.maior(-500, -250);
        Assertions.assertEquals(boolean1792, false);
    }
    @Test
    public void test811() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        double double6365 = calculadora792.mulDouble(-1.55, 105.5);
        Assertions.assertEquals(double6365, -163.525);
        double double7665 = calculadora792.divDouble(1.99, 105.5);
        Assertions.assertEquals(double7665, 0.01886255924170616);
    }
    @Test
    public void test813() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double7638 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double7638, 107.05);
        double double4616 = calculadora792.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double4616, 0.43999999999999995);
        int int2971 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int2971, 0);
        int int6409 = calculadora792.divInt(-100, 250);
        Assertions.assertEquals(int6409, 0);
    }
    @Test
    public void test815() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        double double9953 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double9953, 0.0502145530904775);
        int int1746 = calculadora792.somaInt(0, 250);
        Assertions.assertEquals(int1746, 250);
    }
    @Test
    public void test816() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string1743 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string1743, "nice");
        boolean boolean9433 = calculadora792.menor(250, -1000);
        Assertions.assertEquals(boolean9433, false);
    }
    @Test
    public void test817() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int8945 = calculadora792.divInt(-500, 1000);
        Assertions.assertEquals(int8945, 0);
        double double9569 = calculadora792.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double9569, -209.945);
        boolean boolean8654 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8654, true);
    }
    @Test
    public void test818() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int5047 = calculadora792.mulInt(500, 0);
        Assertions.assertEquals(int5047, 0);
        int int8917 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int8917, 125000);
    }
    @Test
    public void test819() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double4694 = calculadora792.subDouble(0.0, -1.55);
        Assertions.assertEquals(double4694, 1.55);
        int int1644 = calculadora792.subInt(-500, -250);
        Assertions.assertEquals(int1644, -250);
        boolean boolean2883 = calculadora792.or(false, boolean269);
        Assertions.assertEquals(boolean2883, false);
    }
    @Test
    public void test820() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        int int5463 = calculadora792.divInt(500, 1000);
        Assertions.assertEquals(int5463, 0);
    }
    @Test
    public void test821() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean2980 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2980, false);
        int int2304 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int2304, -250000);
        double double9832 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double9832, -116.453);
        double double7111 = calculadora792.somaDouble(105.5, 105.5);
        Assertions.assertEquals(double7111, 211.0);
    }
    @Test
    public void test822() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        double double2693 = calculadora792.mulDouble(-1.55, -105.5);
        Assertions.assertEquals(double2693, 163.525);
        boolean boolean2288 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2288, true);
        double double4523 = calculadora792.divDouble(10.953, -105.5);
        Assertions.assertEquals(double4523, -0.10381990521327014);
    }
    @Test
    public void test823() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        boolean boolean4802 = calculadora792.or(boolean7494, false);
        Assertions.assertEquals(boolean4802, false);
        java.lang.String string8446 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8446, "TOP");
    }
    @Test
    public void test824() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double5081 = calculadora792.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double5081, 0.014691943127962086);
        boolean boolean56 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean56, true);
    }
    @Test
    public void test825() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        int int572 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int572, 0);
        int int4119 = calculadora792.subInt(-1000, -500);
        Assertions.assertEquals(int4119, -500);
        java.lang.String string638 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string638, "hi");
    }
    @Test
    public void test826() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double6675 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double6675, 1.7278745);
        double double4173 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4173, -107.05);
        java.lang.String string3159 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string3159, "HELLO");
    }
    @Test
    public void test829() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2702 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2702, "VALEU");
        int int7224 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int7224, 0);
    }
    @Test
    public void test830() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double2584 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double2584, -1.55);
    }
    @Test
    public void test831() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        int int5237 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int5237, 0);
        int int465 = calculadora792.divInt(1000, 1000);
        Assertions.assertEquals(int465, 1);
    }
    @Test
    public void test833() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1160 = calculadora792.maior(250, -1000);
        Assertions.assertEquals(boolean1160, true);
        double double9225 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double9225, 0.0);
        java.lang.String string7356 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7356, "go");
    }
    @Test
    public void test834() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        double double5117 = calculadora792.mulDouble(-105.5, 1.99);
        Assertions.assertEquals(double5117, -209.945);
        java.lang.String string7176 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string7176, "hi");
    }
    @Test
    public void test835() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
        java.lang.String string4439 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string4439, "HI");
        int int4390 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4390, -250000);
        boolean boolean8765 = calculadora792.or(false, boolean6721);
        Assertions.assertEquals(boolean8765, false);
        java.lang.String string2022 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2022, "VALEU");
    }
    @Test
    public void test836() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        int int4170 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int4170, -1100);
    }
    @Test
    public void test837() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int2130 = calculadora792.divInt(-1000, -100);
        Assertions.assertEquals(int2130, 10);
        int int9791 = calculadora792.subInt(-1000, 0);
        Assertions.assertEquals(int9791, -1000);
        int int8225 = calculadora792.divInt(250, -500);
        Assertions.assertEquals(int8225, 0);
        int int5638 = calculadora792.somaInt(1000, 100);
        Assertions.assertEquals(int5638, 1100);
    }
    @Test
    public void test838() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        boolean boolean3342 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean3342, true);
    }
    @Test
    public void test839() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double4694 = calculadora792.subDouble(0.0, -1.55);
        Assertions.assertEquals(double4694, 1.55);
        java.lang.String string8488 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string8488, "go");
    }
    @Test
    public void test840() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        double double1658 = calculadora792.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double1658, 1155.5415);
    }
    @Test
    public void test841() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        double double9238 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9238, 0.0);
    }
    @Test
    public void test844() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        double double4905 = calculadora792.subDouble(105.5, -10.953);
        Assertions.assertEquals(double4905, 116.453);
    }
    @Test
    public void test845() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        int int6258 = calculadora792.mulInt(500, 1000);
        Assertions.assertEquals(int6258, 500000);
        double double6609 = calculadora792.somaDouble(3.14159, 105.5);
        Assertions.assertEquals(double6609, 108.64159);
    }
    @Test
    public void test846() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean8498 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean8498, false);
        int int9866 = calculadora792.divInt(-250, -250);
        Assertions.assertEquals(int9866, 1);
        int int2759 = calculadora792.subInt(1000, -250);
        Assertions.assertEquals(int2759, 1250);
    }
    @Test
    public void test847() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double7431 = calculadora792.somaDouble(0.55, 10.953);
        Assertions.assertEquals(double7431, 11.503);
        double double7098 = calculadora792.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double7098, 4.69159);
    }
    @Test
    public void test848() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        boolean boolean1000 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean1000, true);
        boolean boolean1578 = calculadora792.menor(500, 500);
        Assertions.assertEquals(boolean1578, false);
        boolean boolean2281 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean2281, false);
    }
    @Test
    public void test849() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        boolean boolean4157 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean4157, false);
        boolean boolean3204 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean3204, false);
        java.lang.String string9393 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string9393, "VALEU");
    }
    @Test
    public void test850() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        java.lang.String string3827 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3827, "IPSUM");
        java.lang.String string2686 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string2686, "IPSUM");
        boolean boolean6758 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6758, true);
        int int9783 = calculadora792.divInt(100, -1000);
        Assertions.assertEquals(int9783, 0);
    }
    @Test
    public void test851() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        int int2891 = calculadora792.divInt(100, -500);
        Assertions.assertEquals(int2891, 0);
        int int3757 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int3757, 2000);
    }
    @Test
    public void test852() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        int int9670 = calculadora792.mulInt(1000, 1000);
        Assertions.assertEquals(int9670, 1000000);
        double double7868 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double7868, -16.977149999999998);
    }
    @Test
    public void test854() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        double double6421 = calculadora792.subDouble(0.55, -1.55);
        Assertions.assertEquals(double6421, 2.1);
    }
    @Test
    public void test855() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        int int9944 = calculadora792.somaInt(1000, 0);
        Assertions.assertEquals(int9944, 1000);
    }
    @Test
    public void test856() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        java.lang.String string5170 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string5170, "top");
        java.lang.String string3585 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3585, "nice");
    }
    @Test
    public void test857() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        int int1490 = calculadora792.divInt(-100, 250);
        Assertions.assertEquals(int1490, 0);
    }
    @Test
    public void test858() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        double double161 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double161, -1155.5415);
        java.lang.String string4191 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string4191, "go");
        boolean boolean4300 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4300, false);
    }
    @Test
    public void test859() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int1462 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int1462, 500000);
        double double8669 = calculadora792.mulDouble(-10.953, 0.55);
        Assertions.assertEquals(double8669, -6.024150000000001);
    }
    @Test
    public void test860() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        int int4170 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int4170, -1100);
        int int8733 = calculadora792.mulInt(-250, 0);
        Assertions.assertEquals(int8733, 0);
    }
    @Test
    public void test862() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double7418 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double7418, -105.5);
        java.lang.String string7396 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string7396, "HI");
        boolean boolean6893 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean6893, true);
    }
    @Test
    public void test863() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        double double369 = calculadora792.divDouble(0.0, 105.5);
        Assertions.assertEquals(double369, 0.0);
        boolean boolean1060 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean1060, true);
        double double5887 = calculadora792.subDouble(10.953, 10.953);
        Assertions.assertEquals(double5887, 0.0);
    }
    @Test
    public void test864() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2702 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2702, "VALEU");
        int int7224 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int7224, 0);
        int int8120 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int8120, -25000);
    }
    @Test
    public void test865() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        boolean boolean7704 = calculadora792.or(boolean4855, true);
        Assertions.assertEquals(boolean7704, true);
    }
    @Test
    public void test866() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean3047 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3047, true);
        int int6906 = calculadora792.mulInt(-250, -100);
        Assertions.assertEquals(int6906, 25000);
        int int6801 = calculadora792.somaInt(250, -1000);
        Assertions.assertEquals(int6801, -750);
    }
    @Test
    public void test868() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        int int194 = calculadora792.somaInt(250, -500);
        Assertions.assertEquals(int194, -250);
        int int9745 = calculadora792.mulInt(-100, -250);
        Assertions.assertEquals(int9745, 25000);
        java.lang.String string3569 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3569, "nice");
    }
    @Test
    public void test869() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        int int1231 = calculadora792.divInt(100, -500);
        Assertions.assertEquals(int1231, 0);
        double double6028 = calculadora792.divDouble(1.99, 10.953);
        Assertions.assertEquals(double6028, 0.18168538300009132);
    }
    @Test
    public void test870() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean615 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean615, false);
        int int819 = calculadora792.somaInt(0, -250);
        Assertions.assertEquals(int819, -250);
        boolean boolean6101 = calculadora792.or(boolean615, true);
        Assertions.assertEquals(boolean6101, true);
    }
    @Test
    public void test871() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int3003 = calculadora792.subInt(-500, -500);
        Assertions.assertEquals(int3003, 0);
        boolean boolean4632 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean4632, false);
    }
    @Test
    public void test872() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean5909 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5909, true);
        double double2598 = calculadora792.subDouble(-10.953, -1.55);
        Assertions.assertEquals(double2598, -9.402999999999999);
    }
    @Test
    public void test874() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        int int4464 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int4464, -600);
        boolean boolean2170 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean2170, false);
    }
    @Test
    public void test876() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1680 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int1680, 350);
        int int4646 = calculadora792.mulInt(-100, 0);
        Assertions.assertEquals(int4646, 0);
        boolean boolean8431 = calculadora792.menor(0, 100);
        Assertions.assertEquals(boolean8431, true);
    }
    @Test
    public void test877() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double9802 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9802, -4.8694645);
        double double8626 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double8626, 0.0502145530904775);
    }
    @Test
    public void test878() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        java.lang.String string3279 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3279, "NICE");
        java.lang.String string8158 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string8158, "valeu");
    }
    @Test
    public void test880() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
        int int5068 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int5068, 0);
    }
    @Test
    public void test881() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        int int2500 = calculadora792.divInt(0, 250);
        Assertions.assertEquals(int2500, 0);
        int int9692 = calculadora792.divInt(0, -1000);
        Assertions.assertEquals(int9692, 0);
    }
    @Test
    public void test883() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        int int6720 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int6720, -150);
        boolean boolean5297 = calculadora792.or(boolean3418, false);
        Assertions.assertEquals(boolean5297, false);
    }
    @Test
    public void test884() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean5835 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5835, false);
        java.lang.String string3307 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string3307, "valeu");
        boolean boolean3237 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3237, false);
        double double6351 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double6351, -16.977149999999998);
    }
    @Test
    public void test885() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean716 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean716, false);
        java.lang.String string4149 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string4149, "HELLO");
    }
    @Test
    public void test886() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        int int5237 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int5237, 0);
        java.lang.String string3864 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string3864, "ipsum");
        double double712 = calculadora792.subDouble(10.953, 10.953);
        Assertions.assertEquals(double712, 0.0);
    }
    @Test
    public void test887() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double2301 = calculadora792.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double2301, -104.95);
        int int1333 = calculadora792.divInt(-500, 250);
        Assertions.assertEquals(int1333, -2);
    }
    @Test
    public void test888() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int1535 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int1535, 0);
        java.lang.String string6754 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string6754, "hello");
    }
    @Test
    public void test889() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double9830 = calculadora792.subDouble(1.99, 0.0);
        Assertions.assertEquals(double9830, 1.99);
        boolean boolean1707 = calculadora792.menor(0, -500);
        Assertions.assertEquals(boolean1707, false);
        int int2186 = calculadora792.mulInt(100, 0);
        Assertions.assertEquals(int2186, 0);
    }
    @Test
    public void test890() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int1934 = calculadora792.subInt(-250, 250);
        Assertions.assertEquals(int1934, -500);
        double double6203 = calculadora792.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double6203, -14.09459);
    }
    @Test
    public void test891() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int4743 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4743, 62500);
        boolean boolean6507 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean6507, true);
    }
    @Test
    public void test892() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
    }
    @Test
    public void test893() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        java.lang.String string5315 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5315, "valeu");
        double double4243 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4243, -107.05);
        int int2115 = calculadora792.subInt(-1000, 100);
        Assertions.assertEquals(int2115, -1100);
    }
    @Test
    public void test894() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1160 = calculadora792.maior(250, -1000);
        Assertions.assertEquals(boolean1160, true);
        double double9225 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double9225, 0.0);
        java.lang.String string7356 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7356, "go");
        java.lang.String string1408 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string1408, "NICE");
    }
    @Test
    public void test895() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        double double6000 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double6000, 94.547);
        boolean boolean2323 = calculadora792.menor(1000, -1000);
        Assertions.assertEquals(boolean2323, false);
    }
    @Test
    public void test897() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        java.lang.String string1195 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string1195, "HI");
        boolean boolean9737 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9737, true);
        boolean boolean9366 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9366, true);
    }
    @Test
    public void test899() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        java.lang.String string5530 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string5530, "TOP");
        boolean boolean3551 = calculadora792.menor(500, 100);
        Assertions.assertEquals(boolean3551, false);
    }
    @Test
    public void test902() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        double double1325 = calculadora792.somaDouble(-10.953, -1.55);
        Assertions.assertEquals(double1325, -12.503);
        double double2447 = calculadora792.divDouble(10.953, 0.55);
        Assertions.assertEquals(double2447, 19.91454545454545);
        int int7501 = calculadora792.divInt(100, 500);
        Assertions.assertEquals(int7501, 0);
    }
    @Test
    public void test903() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        boolean boolean5207 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5207, false);
    }
    @Test
    public void test904() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        java.lang.String string3827 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3827, "IPSUM");
        java.lang.String string9028 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string9028, "TOP");
    }
    @Test
    public void test906() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        java.lang.String string6502 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string6502, "HELLO");
        int int6992 = calculadora792.subInt(-1000, -500);
        Assertions.assertEquals(int6992, -500);
        double double1565 = calculadora792.somaDouble(3.14159, 10.953);
        Assertions.assertEquals(double1565, 14.09459);
    }
    @Test
    public void test908() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double7418 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double7418, -105.5);
        java.lang.String string7396 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string7396, "HI");
        double double6915 = calculadora792.mulDouble(-1.55, -105.5);
        Assertions.assertEquals(double6915, 163.525);
    }
    @Test
    public void test909() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        int int5237 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int5237, 0);
        java.lang.String string3864 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string3864, "ipsum");
        double double712 = calculadora792.subDouble(10.953, 10.953);
        Assertions.assertEquals(double712, 0.0);
        double double4838 = calculadora792.somaDouble(1.99, 0.55);
        Assertions.assertEquals(double4838, 2.54);
    }
    @Test
    public void test910() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        boolean boolean7219 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean7219, true);
        double double4967 = calculadora792.somaDouble(0.0, 1.99);
        Assertions.assertEquals(double4967, 1.99);
    }
    @Test
    public void test912() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double6204 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double6204, -0.0);
        double double2246 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2246, 3.14159);
    }
    @Test
    public void test913() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6518 = calculadora792.mulInt(-1000, 0);
        Assertions.assertEquals(int6518, 0);
        int int3231 = calculadora792.subInt(250, -100);
        Assertions.assertEquals(int3231, 350);
        int int7289 = calculadora792.divInt(500, 1000);
        Assertions.assertEquals(int7289, 0);
    }
    @Test
    public void test914() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        double double2428 = calculadora792.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double2428, 0.0);
    }
    @Test
    public void test915() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean3427 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3427, false);
        boolean boolean9223 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean9223, true);
        int int5725 = calculadora792.mulInt(-100, -500);
        Assertions.assertEquals(int5725, 50000);
    }
    @Test
    public void test917() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        java.lang.String string9756 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9756, "hello");
        double double7906 = calculadora792.somaDouble(3.14159, -105.5);
        Assertions.assertEquals(double7906, -102.35841);
    }
    @Test
    public void test919() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        java.lang.String string6658 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string6658, "IPSUM");
    }
    @Test
    public void test920() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean7513 = calculadora792.and(false, boolean7494);
        Assertions.assertEquals(boolean7513, false);
    }
    @Test
    public void test921() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double6675 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double6675, 1.7278745);
        double double4173 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4173, -107.05);
        java.lang.String string3159 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string3159, "HELLO");
        double double4647 = calculadora792.subDouble(-10.953, 0.0);
        Assertions.assertEquals(double4647, -10.953);
    }
    @Test
    public void test922() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        double double369 = calculadora792.divDouble(0.0, 105.5);
        Assertions.assertEquals(double369, 0.0);
        boolean boolean1060 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean1060, true);
        double double5887 = calculadora792.subDouble(10.953, 10.953);
        Assertions.assertEquals(double5887, 0.0);
        java.lang.String string4125 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string4125, "TOP");
    }
    @Test
    public void test923() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int6458 = calculadora792.subInt(0, 250);
        Assertions.assertEquals(int6458, -250);
        boolean boolean2061 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2061, false);
        java.lang.String string1250 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string1250, "IPSUM");
    }
    @Test
    public void test924() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        int int4170 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int4170, -1100);
        int int8733 = calculadora792.mulInt(-250, 0);
        Assertions.assertEquals(int8733, 0);
        double double8056 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double8056, 9.632064274627956);
    }
    @Test
    public void test925() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        int int8881 = calculadora792.subInt(250, -500);
        Assertions.assertEquals(int8881, 750);
    }
    @Test
    public void test926() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double2301 = calculadora792.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double2301, -104.95);
        int int1333 = calculadora792.divInt(-500, 250);
        Assertions.assertEquals(int1333, -2);
        boolean boolean9636 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean9636, false);
    }
    @Test
    public void test927() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        boolean boolean3089 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean3089, false);
        int int977 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int977, -25000);
        double double3701 = calculadora792.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double3701, -9.632064274627956);
    }
    @Test
    public void test928() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        double double3232 = calculadora792.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double3232, -9.632064274627956);
    }
    @Test
    public void test929() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        boolean boolean3575 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean3575, false);
        boolean boolean1087 = calculadora792.and(boolean3575, true);
        Assertions.assertEquals(boolean1087, false);
        double double2350 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double2350, -1.55);
    }
    @Test
    public void test931() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double6204 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double6204, -0.0);
        double double2246 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2246, 3.14159);
        double double5598 = calculadora792.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double5598, 1.0945);
    }
    @Test
    public void test932() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        double double6000 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double6000, 94.547);
        int int9520 = calculadora792.mulInt(-1000, -250);
        Assertions.assertEquals(int9520, 250000);
    }
    @Test
    public void test933() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int1535 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int1535, 0);
        boolean boolean47 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean47, true);
        boolean boolean6524 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean6524, true);
    }
    @Test
    public void test934() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int8571 = calculadora792.somaInt(500, 0);
        Assertions.assertEquals(int8571, 500);
        double double3021 = calculadora792.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double3021, -102.35841);
    }
    @Test
    public void test935() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        double double2427 = calculadora792.divDouble(105.5, -10.953);
        Assertions.assertEquals(double2427, -9.632064274627956);
    }
    @Test
    public void test936() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        int int3272 = calculadora792.mulInt(-500, 250);
        Assertions.assertEquals(int3272, -125000);
    }
    @Test
    public void test937() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        double double152 = calculadora792.divDouble(0.55, 105.5);
        Assertions.assertEquals(double152, 0.005213270142180095);
    }
    @Test
    public void test938() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        java.lang.String string1403 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string1403, "LOREM");
        boolean boolean5582 = calculadora792.menor(-100, -250);
        Assertions.assertEquals(boolean5582, false);
        boolean boolean594 = calculadora792.maior(-250, -100);
        Assertions.assertEquals(boolean594, false);
    }
    @Test
    public void test939() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double2441 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double2441, 0.0);
    }
    @Test
    public void test940() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int3003 = calculadora792.subInt(-500, -500);
        Assertions.assertEquals(int3003, 0);
        boolean boolean4632 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean4632, false);
        boolean boolean4591 = calculadora792.menor(500, -1000);
        Assertions.assertEquals(boolean4591, false);
    }
    @Test
    public void test941() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
    }
    @Test
    public void test944() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int8548 = calculadora792.somaInt(-100, -500);
        Assertions.assertEquals(int8548, -600);
    }
    @Test
    public void test945() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        int int5898 = calculadora792.somaInt(-500, -500);
        Assertions.assertEquals(int5898, -1000);
    }
    @Test
    public void test946() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        double double3029 = calculadora792.somaDouble(-105.5, 10.953);
        Assertions.assertEquals(double3029, -94.547);
    }
    @Test
    public void test947() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        java.lang.String string5988 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string5988, "go");
        java.lang.String string8961 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string8961, "go");
    }
    @Test
    public void test948() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int6586 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int6586, 62500);
        boolean boolean2600 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2600, true);
    }
    @Test
    public void test949() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        int int5449 = calculadora792.mulInt(250, -500);
        Assertions.assertEquals(int5449, -125000);
        double double3092 = calculadora792.somaDouble(-10.953, 1.99);
        Assertions.assertEquals(double3092, -8.963);
    }
    @Test
    public void test950() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        java.lang.String string5988 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string5988, "go");
        boolean boolean6192 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6192, true);
    }
    @Test
    public void test951() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
        boolean boolean3202 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3202, true);
    }
    @Test
    public void test952() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        int int2949 = calculadora792.mulInt(-500, 250);
        Assertions.assertEquals(int2949, -125000);
    }
    @Test
    public void test953() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6518 = calculadora792.mulInt(-1000, 0);
        Assertions.assertEquals(int6518, 0);
        java.lang.String string9949 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string9949, "IPSUM");
        java.lang.String string8399 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string8399, "valeu");
    }
    @Test
    public void test954() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        boolean boolean2238 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean2238, false);
    }
    @Test
    public void test955() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        java.lang.String string7699 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7699, "top");
    }
    @Test
    public void test957() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3691 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int3691, -600);
        int int202 = calculadora792.divInt(-250, -1000);
        Assertions.assertEquals(int202, 0);
    }
    @Test
    public void test958() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        java.lang.String string7699 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7699, "top");
        double double191 = calculadora792.divDouble(0.0, -10.953);
        Assertions.assertEquals(double191, -0.0);
    }
    @Test
    public void test959() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int1535 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int1535, 0);
        boolean boolean47 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean47, true);
        int int9776 = calculadora792.mulInt(-250, 100);
        Assertions.assertEquals(int9776, -25000);
    }
    @Test
    public void test960() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        int int8521 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int8521, -1);
    }
    @Test
    public void test961() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
        double double9356 = calculadora792.mulDouble(0.55, -10.953);
        Assertions.assertEquals(double9356, -6.024150000000001);
    }
    @Test
    public void test962() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        boolean boolean9183 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean9183, false);
        int int538 = calculadora792.mulInt(100, 250);
        Assertions.assertEquals(int538, 25000);
    }
    @Test
    public void test963() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean7027 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean7027, false);
    }
    @Test
    public void test964() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
        double double9163 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9163, 0.0);
        boolean boolean8625 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean8625, false);
    }
    @Test
    public void test965() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean6106 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean6106, false);
        boolean boolean6422 = calculadora792.maior(100, 250);
        Assertions.assertEquals(boolean6422, false);
    }
    @Test
    public void test966() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        double double3896 = calculadora792.subDouble(-105.5, 10.953);
        Assertions.assertEquals(double3896, -116.453);
    }
    @Test
    public void test967() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1680 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int1680, 350);
        int int4646 = calculadora792.mulInt(-100, 0);
        Assertions.assertEquals(int4646, 0);
        boolean boolean4498 = calculadora792.or(boolean2390, false);
        Assertions.assertEquals(boolean4498, false);
        double double9244 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double9244, 1.7278745);
    }
    @Test
    public void test968() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        boolean boolean2893 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2893, true);
        double double9726 = calculadora792.subDouble(0.55, 0.0);
        Assertions.assertEquals(double9726, 0.55);
        java.lang.String string4374 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4374, "GO");
        boolean boolean2158 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2158, true);
    }
    @Test
    public void test969() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        double double1772 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1772, 0.0);
    }
    @Test
    public void test970() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double413 = calculadora792.subDouble(10.953, 1.99);
        Assertions.assertEquals(double413, 8.963);
        double double6924 = calculadora792.somaDouble(-1.55, 0.0);
        Assertions.assertEquals(double6924, -1.55);
        int int4356 = calculadora792.somaInt(1000, -250);
        Assertions.assertEquals(int4356, 750);
    }
    @Test
    public void test971() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        boolean boolean5642 = calculadora792.menor(0, -250);
        Assertions.assertEquals(boolean5642, false);
        int int8945 = calculadora792.divInt(-250, -250);
        Assertions.assertEquals(int8945, 1);
    }
    @Test
    public void test972() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double9802 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9802, -4.8694645);
        boolean boolean4583 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4583, false);
    }
    @Test
    public void test973() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1160 = calculadora792.maior(250, -1000);
        Assertions.assertEquals(boolean1160, true);
        boolean boolean3118 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean3118, true);
    }
    @Test
    public void test975() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        double double3232 = calculadora792.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double3232, -9.632064274627956);
        boolean boolean5734 = calculadora792.menor(-250, 250);
        Assertions.assertEquals(boolean5734, true);
    }
    @Test
    public void test976() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        boolean boolean9874 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean9874, false);
        boolean boolean5086 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean5086, true);
    }
    @Test
    public void test977() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        boolean boolean9183 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean9183, false);
        double double466 = calculadora792.divDouble(0.0, 3.14159);
        Assertions.assertEquals(double466, 0.0);
    }
    @Test
    public void test978() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean8498 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean8498, false);
        int int9866 = calculadora792.divInt(-250, -250);
        Assertions.assertEquals(int9866, 1);
        int int2759 = calculadora792.subInt(1000, -250);
        Assertions.assertEquals(int2759, 1250);
        int int2758 = calculadora792.divInt(0, -250);
        Assertions.assertEquals(int2758, 0);
    }
    @Test
    public void test979() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean2692 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean2692, false);
        java.lang.String string1678 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string1678, "hello");
        double double7942 = calculadora792.subDouble(-1.55, 105.5);
        Assertions.assertEquals(double7942, -107.05);
    }
    @Test
    public void test981() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        boolean boolean2863 = calculadora792.maior(-1000, -250);
        Assertions.assertEquals(boolean2863, false);
        java.lang.String string9524 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9524, "hello");
    }
    @Test
    public void test982() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        boolean boolean5642 = calculadora792.menor(0, -250);
        Assertions.assertEquals(boolean5642, false);
        boolean boolean5665 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5665, false);
    }
    @Test
    public void test983() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
        boolean boolean8126 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean8126, true);
    }
    @Test
    public void test984() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        boolean boolean6795 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean6795, true);
    }
    @Test
    public void test985() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
        boolean boolean8126 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean8126, true);
        boolean boolean9007 = calculadora792.maior(1000, -500);
        Assertions.assertEquals(boolean9007, true);
    }
    @Test
    public void test986() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int9726 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int9726, -25000);
        boolean boolean2541 = calculadora792.or(true, boolean203);
        Assertions.assertEquals(boolean2541, true);
    }
    @Test
    public void test987() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        int int8373 = calculadora792.divInt(1000, 500);
        Assertions.assertEquals(int8373, 2);
    }
    @Test
    public void test988() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double5263 = calculadora792.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double5263, 1.7278745);
        java.lang.String string5089 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5089, "lorem");
        boolean boolean1546 = calculadora792.menor(-500, 0);
        Assertions.assertEquals(boolean1546, true);
    }
    @Test
    public void test989() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        double double3149 = calculadora792.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double3149, 0.0);
        boolean boolean6714 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean6714, true);
    }
    @Test
    public void test990() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
        int int9292 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int9292, 0);
        boolean boolean5244 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5244, false);
    }
    @Test
    public void test991() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        int int1341 = calculadora792.somaInt(500, 1000);
        Assertions.assertEquals(int1341, 1500);
        double double1706 = calculadora792.divDouble(0.0, -105.5);
        Assertions.assertEquals(double1706, -0.0);
    }
    @Test
    public void test992() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double6204 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double6204, -0.0);
        double double2246 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2246, 3.14159);
        java.lang.String string7203 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string7203, "NICE");
    }
    @Test
    public void test993() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean195 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean195, false);
    }
    @Test
    public void test994() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string3675 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string3675, "lorem");
    }
    @Test
    public void test995() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double6675 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double6675, 1.7278745);
        double double4173 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4173, -107.05);
        java.lang.String string3159 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string3159, "HELLO");
        double double4647 = calculadora792.subDouble(-10.953, 0.0);
        Assertions.assertEquals(double4647, -10.953);
        boolean boolean4312 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean4312, true);
    }
    @Test
    public void test997() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        int int6720 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int6720, -150);
        boolean boolean5297 = calculadora792.or(boolean3418, false);
        Assertions.assertEquals(boolean5297, false);
        int int2305 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int2305, 500);
    }
    @Test
    public void test998() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        boolean boolean6144 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6144, false);
    }
    @Test
    public void test999() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2061 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2061, "VALEU");
        double double9880 = calculadora792.somaDouble(-1.55, -10.953);
        Assertions.assertEquals(double9880, -12.503);
        boolean boolean4899 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean4899, true);
        java.lang.String string3008 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string3008, "LOREM");
    }
    @Test
    public void test1000() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        int int2788 = calculadora792.mulInt(100, 1000);
        Assertions.assertEquals(int2788, 100000);
        int int1159 = calculadora792.mulInt(250, -100);
        Assertions.assertEquals(int1159, -25000);
    }
    @Test
    public void test1001() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        double double3232 = calculadora792.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double3232, -9.632064274627956);
        boolean boolean5734 = calculadora792.menor(-250, 250);
        Assertions.assertEquals(boolean5734, true);
        double double2789 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double2789, 94.547);
    }
    @Test
    public void test1002() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double5081 = calculadora792.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double5081, 0.014691943127962086);
        java.lang.String string5827 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string5827, "TOP");
    }
    @Test
    public void test1003() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean1390 = calculadora792.maior(500, -250);
        Assertions.assertEquals(boolean1390, true);
        double double2745 = calculadora792.somaDouble(-105.5, -105.5);
        Assertions.assertEquals(double2745, -211.0);
    }
    @Test
    public void test1004() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double3095 = calculadora792.mulDouble(-10.953, -105.5);
        Assertions.assertEquals(double3095, 1155.5415);
        boolean boolean6403 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean6403, true);
    }
    @Test
    public void test1005() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string7528 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7528, "go");
        boolean boolean2327 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean2327, false);
    }
    @Test
    public void test1006() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        boolean boolean1958 = calculadora792.or(false, boolean9692);
        Assertions.assertEquals(boolean1958, false);
    }
    @Test
    public void test1009() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        boolean boolean6943 = calculadora792.menor(-500, 250);
        Assertions.assertEquals(boolean6943, true);
    }
    @Test
    public void test1010() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double2584 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double2584, -1.55);
        boolean boolean3321 = calculadora792.menor(-1000, 1000);
        Assertions.assertEquals(boolean3321, true);
    }
    @Test
    public void test1011() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        double double4207 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4207, 34.409835269999995);
        java.lang.String string1466 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string1466, "IPSUM");
    }
    @Test
    public void test1012() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean6602 = calculadora792.maior(0, 500);
        Assertions.assertEquals(boolean6602, false);
    }
    @Test
    public void test1013() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
        java.lang.String string3968 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string3968, "GO");
    }
    @Test
    public void test1014() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        int int5237 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int5237, 0);
        double double9163 = calculadora792.mulDouble(-105.5, -105.5);
        Assertions.assertEquals(double9163, 11130.25);
    }
    @Test
    public void test1015() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int43 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int43, 0);
        int int3915 = calculadora792.subInt(100, 1000);
        Assertions.assertEquals(int3915, -900);
    }
    @Test
    public void test1016() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1680 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int1680, 350);
        int int4646 = calculadora792.mulInt(-100, 0);
        Assertions.assertEquals(int4646, 0);
        boolean boolean8431 = calculadora792.menor(0, 100);
        Assertions.assertEquals(boolean8431, true);
        boolean boolean2885 = calculadora792.maior(1000, 250);
        Assertions.assertEquals(boolean2885, true);
    }
    @Test
    public void test1017() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double6204 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double6204, -0.0);
        double double2246 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2246, 3.14159);
        double double5598 = calculadora792.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double5598, 1.0945);
        boolean boolean6102 = calculadora792.maior(-500, -250);
        Assertions.assertEquals(boolean6102, false);
    }
    @Test
    public void test1018() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean5835 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5835, false);
        int int9324 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9324, 10000);
        java.lang.String string3699 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3699, "NICE");
    }
    @Test
    public void test1019() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean3011 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3011, true);
        int int5745 = calculadora792.divInt(-500, -500);
        Assertions.assertEquals(int5745, 1);
    }
    @Test
    public void test1020() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
        boolean boolean8126 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean8126, true);
        boolean boolean9007 = calculadora792.maior(1000, -500);
        Assertions.assertEquals(boolean9007, true);
        double double1676 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double1676, -1.55);
    }
    @Test
    public void test1021() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
        double double3160 = calculadora792.mulDouble(-10.953, -1.55);
        Assertions.assertEquals(double3160, 16.977149999999998);
        double double1497 = calculadora792.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double1497, 11.503);
    }
    @Test
    public void test1022() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        boolean boolean9262 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9262, false);
        int int2354 = calculadora792.somaInt(-500, 500);
        Assertions.assertEquals(int2354, 0);
    }
    @Test
    public void test1023() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int2069 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2069, 900);
        int int3743 = calculadora792.mulInt(100, -100);
        Assertions.assertEquals(int3743, -10000);
        int int4867 = calculadora792.subInt(-250, 500);
        Assertions.assertEquals(int4867, -750);
    }
    @Test
    public void test1024() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        java.lang.String string3827 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3827, "IPSUM");
        java.lang.String string2686 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string2686, "IPSUM");
        boolean boolean790 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean790, true);
    }
    @Test
    public void test1025() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int1934 = calculadora792.subInt(-250, 250);
        Assertions.assertEquals(int1934, -500);
        double double6203 = calculadora792.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double6203, -14.09459);
        int int7426 = calculadora792.mulInt(0, 1000);
        Assertions.assertEquals(int7426, 0);
    }
    @Test
    public void test1026() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        java.lang.String string812 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string812, "hello");
        boolean boolean3345 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3345, true);
        double double8309 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double8309, -1155.5415);
        double double7407 = calculadora792.somaDouble(3.14159, -1.55);
        Assertions.assertEquals(double7407, 1.5915899999999998);
    }
    @Test
    public void test1027() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int4888 = calculadora792.subInt(1000, 100);
        Assertions.assertEquals(int4888, 900);
    }
    @Test
    public void test1028() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        int int1231 = calculadora792.divInt(100, -500);
        Assertions.assertEquals(int1231, 0);
        double double6028 = calculadora792.divDouble(1.99, 10.953);
        Assertions.assertEquals(double6028, 0.18168538300009132);
        boolean boolean8507 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean8507, false);
    }
    @Test
    public void test1029() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string1743 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string1743, "nice");
        int int2655 = calculadora792.mulInt(500, -250);
        Assertions.assertEquals(int2655, -125000);
    }
    @Test
    public void test1030() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int9314 = calculadora792.somaInt(-250, 0);
        Assertions.assertEquals(int9314, -250);
    }
    @Test
    public void test1031() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        java.lang.String string1860 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string1860, "go");
        boolean boolean3046 = calculadora792.or(boolean203, false);
        Assertions.assertEquals(boolean3046, false);
    }
    @Test
    public void test1033() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        double double8865 = calculadora792.divDouble(105.5, -105.5);
        Assertions.assertEquals(double8865, -1.0);
    }
    @Test
    public void test1034() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string364 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string364, "hello");
        boolean boolean8283 = calculadora792.maior(-1000, -500);
        Assertions.assertEquals(boolean8283, false);
        int int7220 = calculadora792.mulInt(100, 250);
        Assertions.assertEquals(int7220, 25000);
    }
    @Test
    public void test1035() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double4694 = calculadora792.subDouble(0.0, -1.55);
        Assertions.assertEquals(double4694, 1.55);
        int int1644 = calculadora792.subInt(-500, -250);
        Assertions.assertEquals(int1644, -250);
        boolean boolean3552 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3552, true);
    }
    @Test
    public void test1036() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double6675 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double6675, 1.7278745);
        double double4173 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4173, -107.05);
        java.lang.String string3159 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string3159, "HELLO");
        boolean boolean5458 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean5458, true);
    }
    @Test
    public void test1037() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
        double double9163 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9163, 0.0);
        boolean boolean9315 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9315, true);
    }
    @Test
    public void test1038() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        double double5274 = calculadora792.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double5274, 1155.5415);
    }
    @Test
    public void test1040() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double7638 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double7638, 107.05);
        java.lang.String string4511 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string4511, "valeu");
    }
    @Test
    public void test1041() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9505 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double9505, -105.5);
    }
    @Test
    public void test1042() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int6458 = calculadora792.subInt(0, 250);
        Assertions.assertEquals(int6458, -250);
        boolean boolean2061 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2061, false);
        double double3913 = calculadora792.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double3913, 163.525);
    }
    @Test
    public void test1043() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int1621 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int1621, 600);
        int int9441 = calculadora792.mulInt(-1000, 1000);
        Assertions.assertEquals(int9441, -1000000);
        java.lang.String string1506 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string1506, "hello");
    }
    @Test
    public void test1045() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        double double3262 = calculadora792.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double3262, 119.96820899999999);
    }
    @Test
    public void test1047() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        int int7762 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int7762, 0);
    }
    @Test
    public void test1048() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        double double4146 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double4146, 211.0);
    }
    @Test
    public void test1049() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean7027 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean7027, false);
        int int2857 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int2857, 500000);
    }
    @Test
    public void test1050() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        int int125 = calculadora792.mulInt(-1000, 1000);
        Assertions.assertEquals(int125, -1000000);
    }
    @Test
    public void test1051() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean3329 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean3329, true);
    }
    @Test
    public void test1052() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean195 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean195, false);
        java.lang.String string9542 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string9542, "VALEU");
    }
    @Test
    public void test1053() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        int int1490 = calculadora792.divInt(-100, 250);
        Assertions.assertEquals(int1490, 0);
        boolean boolean6410 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean6410, false);
    }
    @Test
    public void test1055() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        boolean boolean424 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean424, true);
    }
    @Test
    public void test1057() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int3464 = calculadora792.divInt(-1000, 100);
        Assertions.assertEquals(int3464, -10);
        int int190 = calculadora792.somaInt(-1000, 100);
        Assertions.assertEquals(int190, -900);
        int int5791 = calculadora792.mulInt(500, 250);
        Assertions.assertEquals(int5791, 125000);
    }
    @Test
    public void test1058() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
        double double1965 = calculadora792.mulDouble(-1.55, 0.55);
        Assertions.assertEquals(double1965, -0.8525000000000001);
    }
    @Test
    public void test1059() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        boolean boolean3575 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean3575, false);
        boolean boolean1087 = calculadora792.and(boolean3575, true);
        Assertions.assertEquals(boolean1087, false);
        double double2350 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double2350, -1.55);
        java.lang.String string6457 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string6457, "GO");
    }
    @Test
    public void test1060() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean3011 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3011, true);
        double double2268 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double2268, 108.64159);
    }
    @Test
    public void test1061() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int2069 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2069, 900);
        int int3743 = calculadora792.mulInt(100, -100);
        Assertions.assertEquals(int3743, -10000);
        int int4867 = calculadora792.subInt(-250, 500);
        Assertions.assertEquals(int4867, -750);
        double double7586 = calculadora792.mulDouble(0.0, 3.14159);
        Assertions.assertEquals(double7586, 0.0);
    }
    @Test
    public void test1062() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int1772 = calculadora792.divInt(0, -500);
        Assertions.assertEquals(int1772, 0);
    }
    @Test
    public void test1063() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string3675 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string3675, "lorem");
        boolean boolean9689 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean9689, false);
    }
    @Test
    public void test1064() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        boolean boolean2863 = calculadora792.maior(-1000, -250);
        Assertions.assertEquals(boolean2863, false);
        boolean boolean2593 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean2593, false);
    }
    @Test
    public void test1065() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        boolean boolean6144 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6144, false);
        double double4955 = calculadora792.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double4955, -58.025000000000006);
    }
    @Test
    public void test1066() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        double double6815 = calculadora792.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double6815, -58.025000000000006);
        double double1786 = calculadora792.divDouble(-1.55, -10.953);
        Assertions.assertEquals(double1786, 0.14151374052770932);
    }
    @Test
    public void test1067() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        java.lang.String string5091 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string5091, "VALEU");
        java.lang.String string873 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string873, "NICE");
        java.lang.String string576 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string576, "top");
        int int4103 = calculadora792.divInt(-500, -250);
        Assertions.assertEquals(int4103, 2);
    }
    @Test
    public void test1068() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
        java.lang.String string3151 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string3151, "lorem");
    }
    @Test
    public void test1069() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int2069 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2069, 900);
        boolean boolean89 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean89, true);
        double double3408 = calculadora792.divDouble(-105.5, 1.99);
        Assertions.assertEquals(double3408, -53.015075376884425);
    }
    @Test
    public void test1070() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean8419 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean8419, true);
    }
    @Test
    public void test1073() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9528 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double9528, 0.0);
    }
    @Test
    public void test1075() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        java.lang.String string3827 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3827, "IPSUM");
        java.lang.String string2686 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string2686, "IPSUM");
        boolean boolean6324 = calculadora792.maior(0, -250);
        Assertions.assertEquals(boolean6324, true);
    }
    @Test
    public void test1076() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        boolean boolean6116 = calculadora792.maior(500, 100);
        Assertions.assertEquals(boolean6116, true);
    }
    @Test
    public void test1077() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        double double6365 = calculadora792.mulDouble(-1.55, 105.5);
        Assertions.assertEquals(double6365, -163.525);
        int int9301 = calculadora792.mulInt(500, 100);
        Assertions.assertEquals(int9301, 50000);
    }
    @Test
    public void test1078() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        java.lang.String string1257 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string1257, "top");
    }
    @Test
    public void test1079() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        int int4464 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int4464, -600);
        boolean boolean2170 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean2170, false);
        double double8543 = calculadora792.mulDouble(-105.5, 105.5);
        Assertions.assertEquals(double8543, -11130.25);
    }
    @Test
    public void test1080() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
        boolean boolean8126 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean8126, true);
        boolean boolean9007 = calculadora792.maior(1000, -500);
        Assertions.assertEquals(boolean9007, true);
        double double1676 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double1676, -1.55);
        java.lang.String string347 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string347, "GO");
    }
    @Test
    public void test1082() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double4676 = calculadora792.subDouble(105.5, 0.0);
        Assertions.assertEquals(double4676, 105.5);
    }
    @Test
    public void test1083() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        java.lang.String string3279 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3279, "NICE");
        java.lang.String string8158 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string8158, "valeu");
        int int3465 = calculadora792.subInt(1000, -100);
        Assertions.assertEquals(int3465, 1100);
    }
    @Test
    public void test1084() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int6586 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int6586, 62500);
        boolean boolean9573 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9573, true);
    }
    @Test
    public void test1085() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        java.lang.String string5092 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string5092, "LOREM");
        boolean boolean4625 = calculadora792.maior(-250, 0);
        Assertions.assertEquals(boolean4625, false);
        boolean boolean8589 = calculadora792.menor(-1000, 500);
        Assertions.assertEquals(boolean8589, true);
    }
    @Test
    public void test1086() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        java.lang.String string5613 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5613, "HELLO");
        boolean boolean6234 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6234, false);
    }
    @Test
    public void test1087() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        int int8889 = calculadora792.mulInt(-100, 250);
        Assertions.assertEquals(int8889, -25000);
    }
    @Test
    public void test1088() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        int int3272 = calculadora792.mulInt(-500, 250);
        Assertions.assertEquals(int3272, -125000);
        java.lang.String string1970 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string1970, "NICE");
    }
    @Test
    public void test1089() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean5835 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5835, false);
        boolean boolean7745 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean7745, true);
    }
    @Test
    public void test1091() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        boolean boolean1000 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean1000, true);
        boolean boolean1578 = calculadora792.menor(500, 500);
        Assertions.assertEquals(boolean1578, false);
        boolean boolean1011 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1011, false);
    }
    @Test
    public void test1092() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int5047 = calculadora792.mulInt(500, 0);
        Assertions.assertEquals(int5047, 0);
        int int8917 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int8917, 125000);
        int int809 = calculadora792.mulInt(500, -500);
        Assertions.assertEquals(int809, -250000);
    }
    @Test
    public void test1093() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        boolean boolean6144 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6144, false);
        double double4955 = calculadora792.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double4955, -58.025000000000006);
        double double5254 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double5254, -4.8694645);
    }
    @Test
    public void test1094() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean6333 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6333, false);
        int int8783 = calculadora792.divInt(100, 1000);
        Assertions.assertEquals(int8783, 0);
        boolean boolean8681 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean8681, false);
        double double1058 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1058, 9.632064274627956);
    }
    @Test
    public void test1095() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double5081 = calculadora792.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double5081, 0.014691943127962086);
        int int5588 = calculadora792.mulInt(-1000, 100);
        Assertions.assertEquals(int5588, -100000);
    }
    @Test
    public void test1096() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        boolean boolean2238 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean2238, false);
        int int9833 = calculadora792.divInt(-250, 1000);
        Assertions.assertEquals(int9833, 0);
    }
    @Test
    public void test1098() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        double double6000 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double6000, 94.547);
        boolean boolean3427 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3427, true);
    }
    @Test
    public void test1099() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int1621 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int1621, 600);
        int int9441 = calculadora792.mulInt(-1000, 1000);
        Assertions.assertEquals(int9441, -1000000);
        int int8268 = calculadora792.divInt(1000, -500);
        Assertions.assertEquals(int8268, -2);
    }
    @Test
    public void test1100() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        int int7734 = calculadora792.divInt(-100, -250);
        Assertions.assertEquals(int7734, 0);
    }
    @Test
    public void test1101() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int835 = calculadora792.mulInt(-500, -500);
        Assertions.assertEquals(int835, 250000);
        double double7390 = calculadora792.divDouble(105.5, 105.5);
        Assertions.assertEquals(double7390, 1.0);
    }
    @Test
    public void test1102() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        boolean boolean6853 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean6853, false);
        boolean boolean9412 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9412, true);
    }
    @Test
    public void test1103() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean716 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean716, false);
        java.lang.String string4149 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string4149, "HELLO");
        boolean boolean3929 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean3929, false);
    }
    @Test
    public void test1104() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double4694 = calculadora792.subDouble(0.0, -1.55);
        Assertions.assertEquals(double4694, 1.55);
        double double2101 = calculadora792.divDouble(105.5, -105.5);
        Assertions.assertEquals(double2101, -1.0);
        int int9511 = calculadora792.divInt(100, -1000);
        Assertions.assertEquals(int9511, 0);
    }
    @Test
    public void test1105() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean8498 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean8498, false);
        boolean boolean6929 = calculadora792.menor(-250, 0);
        Assertions.assertEquals(boolean6929, true);
    }
    @Test
    public void test1106() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        boolean boolean9874 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean9874, false);
        boolean boolean5086 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean5086, true);
        boolean boolean5568 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean5568, true);
    }
    @Test
    public void test1107() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        int int8067 = calculadora792.somaInt(-500, 100);
        Assertions.assertEquals(int8067, -400);
        double double4720 = calculadora792.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double4720, 1155.5415);
    }
    @Test
    public void test1108() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        boolean boolean1000 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean1000, true);
        int int2857 = calculadora792.somaInt(-1000, 1000);
        Assertions.assertEquals(int2857, 0);
    }
    @Test
    public void test1109() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        boolean boolean9874 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean9874, false);
        int int9989 = calculadora792.divInt(100, -1000);
        Assertions.assertEquals(int9989, 0);
    }
    @Test
    public void test1111() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean9794 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9794, true);
        boolean boolean7307 = calculadora792.or(true, boolean9794);
        Assertions.assertEquals(boolean7307, true);
    }
    @Test
    public void test1113() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        boolean boolean9874 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean9874, false);
        boolean boolean5086 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean5086, true);
        boolean boolean1203 = calculadora792.menor(0, -500);
        Assertions.assertEquals(boolean1203, false);
    }
    @Test
    public void test1114() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        boolean boolean7219 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean7219, true);
        double double4967 = calculadora792.somaDouble(0.0, 1.99);
        Assertions.assertEquals(double4967, 1.99);
        double double3300 = calculadora792.divDouble(-105.5, -105.5);
        Assertions.assertEquals(double3300, 1.0);
    }
    @Test
    public void test1115() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        java.lang.String string3796 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3796, "nice");
        int int7675 = calculadora792.somaInt(-100, -100);
        Assertions.assertEquals(int7675, -200);
    }
    @Test
    public void test1116() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string1743 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string1743, "nice");
        boolean boolean9433 = calculadora792.menor(250, -1000);
        Assertions.assertEquals(boolean9433, false);
        boolean boolean3326 = calculadora792.menor(-250, -500);
        Assertions.assertEquals(boolean3326, false);
    }
    @Test
    public void test1117() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
        double double5979 = calculadora792.somaDouble(0.55, -1.55);
        Assertions.assertEquals(double5979, -1.0);
    }
    @Test
    public void test1118() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean914 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean914, false);
        int int498 = calculadora792.mulInt(500, 500);
        Assertions.assertEquals(int498, 250000);
    }
    @Test
    public void test1121() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        int int4464 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int4464, -600);
        boolean boolean2170 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean2170, false);
        double double8543 = calculadora792.mulDouble(-105.5, 105.5);
        Assertions.assertEquals(double8543, -11130.25);
        double double1829 = calculadora792.subDouble(0.55, 10.953);
        Assertions.assertEquals(double1829, -10.402999999999999);
    }
    @Test
    public void test1122() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1680 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int1680, 350);
        int int4646 = calculadora792.mulInt(-100, 0);
        Assertions.assertEquals(int4646, 0);
        boolean boolean4498 = calculadora792.or(boolean2390, false);
        Assertions.assertEquals(boolean4498, false);
        double double9244 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double9244, 1.7278745);
        java.lang.String string8682 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8682, "TOP");
    }
    @Test
    public void test1123() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean8498 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean8498, false);
        boolean boolean6929 = calculadora792.menor(-250, 0);
        Assertions.assertEquals(boolean6929, true);
        boolean boolean5727 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5727, false);
    }
    @Test
    public void test1125() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        java.lang.String string5092 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string5092, "LOREM");
        int int6413 = calculadora792.somaInt(500, -250);
        Assertions.assertEquals(int6413, 250);
    }
    @Test
    public void test1126() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        double double3149 = calculadora792.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double3149, 0.0);
        int int7587 = calculadora792.mulInt(-100, -1000);
        Assertions.assertEquals(int7587, 100000);
    }
    @Test
    public void test1127() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double6675 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double6675, 1.7278745);
        boolean boolean8380 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8380, true);
    }
    @Test
    public void test1128() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean2692 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean2692, false);
        java.lang.String string1678 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string1678, "hello");
        int int3170 = calculadora792.divInt(-1000, -250);
        Assertions.assertEquals(int3170, 4);
    }
    @Test
    public void test1129() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double2584 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double2584, -1.55);
        double double1922 = calculadora792.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double1922, 331.437745);
    }
    @Test
    public void test1130() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
        boolean boolean5444 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5444, false);
        boolean boolean5541 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5541, true);
    }
    @Test
    public void test1132() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double7638 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double7638, 107.05);
        double double4616 = calculadora792.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double4616, 0.43999999999999995);
        double double2483 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double2483, -116.453);
    }
    @Test
    public void test1134() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        double double6206 = calculadora792.subDouble(0.55, -10.953);
        Assertions.assertEquals(double6206, 11.503);
        double double3939 = calculadora792.divDouble(1.99, -10.953);
        Assertions.assertEquals(double3939, -0.18168538300009132);
    }
    @Test
    public void test1135() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double5263 = calculadora792.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double5263, 1.7278745);
        int int255 = calculadora792.subInt(-250, 500);
        Assertions.assertEquals(int255, -750);
    }
    @Test
    public void test1136() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double7418 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double7418, -105.5);
        java.lang.String string7396 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string7396, "HI");
        boolean boolean6893 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean6893, true);
        int int5936 = calculadora792.somaInt(500, 0);
        Assertions.assertEquals(int5936, 500);
    }
    @Test
    public void test1137() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        java.lang.String string5583 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string5583, "GO");
        boolean boolean1693 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean1693, false);
        java.lang.String string2066 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string2066, "lorem");
    }
    @Test
    public void test1138() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        double double9238 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9238, 0.0);
        boolean boolean4515 = calculadora792.maior(1000, 250);
        Assertions.assertEquals(boolean4515, true);
    }
    @Test
    public void test1139() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        java.lang.String string5091 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string5091, "VALEU");
        java.lang.String string873 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string873, "NICE");
        double double6289 = calculadora792.somaDouble(105.5, 1.99);
        Assertions.assertEquals(double6289, 107.49);
    }
    @Test
    public void test1140() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        int int6258 = calculadora792.mulInt(500, 1000);
        Assertions.assertEquals(int6258, 500000);
        double double6609 = calculadora792.somaDouble(3.14159, 105.5);
        Assertions.assertEquals(double6609, 108.64159);
        boolean boolean5938 = calculadora792.maior(0, 250);
        Assertions.assertEquals(boolean5938, false);
    }
    @Test
    public void test1141() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        java.lang.String string166 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string166, "GO");
        java.lang.String string661 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string661, "NICE");
    }
    @Test
    public void test1143() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        boolean boolean4202 = calculadora792.or(boolean6240, true);
        Assertions.assertEquals(boolean4202, true);
        boolean boolean2124 = calculadora792.menor(1000, 0);
        Assertions.assertEquals(boolean2124, false);
    }
    @Test
    public void test1144() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
        double double2837 = calculadora792.subDouble(0.55, 3.14159);
        Assertions.assertEquals(double2837, -2.59159);
        int int4118 = calculadora792.divInt(1000, 250);
        Assertions.assertEquals(int4118, 4);
    }
    @Test
    public void test1145() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int4743 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4743, 62500);
        boolean boolean6507 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean6507, true);
        java.lang.String string3307 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string3307, "go");
    }
    @Test
    public void test1146() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        int int8756 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int8756, -1000);
    }
    @Test
    public void test1148() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
        boolean boolean8126 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean8126, true);
        boolean boolean9007 = calculadora792.maior(1000, -500);
        Assertions.assertEquals(boolean9007, true);
        double double1676 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double1676, -1.55);
        java.lang.String string347 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string347, "GO");
        boolean boolean4204 = calculadora792.or(false, boolean9007);
        Assertions.assertEquals(boolean4204, false);
    }
    @Test
    public void test1149() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        int int4630 = calculadora792.divInt(0, 100);
        Assertions.assertEquals(int4630, 0);
    }
    @Test
    public void test1150() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        double double152 = calculadora792.divDouble(0.55, 105.5);
        Assertions.assertEquals(double152, 0.005213270142180095);
        int int4032 = calculadora792.subInt(1000, 100);
        Assertions.assertEquals(int4032, 900);
    }
    @Test
    public void test1151() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean4911 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4911, false);
        java.lang.String string6890 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string6890, "NICE");
    }
    @Test
    public void test1152() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean716 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean716, false);
        boolean boolean6148 = calculadora792.and(boolean6342, true);
        Assertions.assertEquals(boolean6148, false);
        boolean boolean3369 = calculadora792.maior(250, -100);
        Assertions.assertEquals(boolean3369, true);
    }
    @Test
    public void test1153() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        double double1658 = calculadora792.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double1658, 1155.5415);
        java.lang.String string4172 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string4172, "IPSUM");
    }
    @Test
    public void test1154() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double2441 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double2441, 0.0);
        boolean boolean4695 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean4695, false);
    }
    @Test
    public void test1155() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean6719 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean6719, true);
        boolean boolean2256 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean2256, true);
        boolean boolean891 = calculadora792.menor(250, -1000);
        Assertions.assertEquals(boolean891, false);
    }
    @Test
    public void test1156() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        java.lang.String string1860 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string1860, "go");
        boolean boolean3046 = calculadora792.or(boolean203, false);
        Assertions.assertEquals(boolean3046, false);
        boolean boolean366 = calculadora792.or(boolean7494, boolean7709);
        Assertions.assertEquals(boolean366, false);
    }
    @Test
    public void test1157() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        java.lang.String string9756 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9756, "hello");
        java.lang.String string4389 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string4389, "LOREM");
    }
    @Test
    public void test1158() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        double double1658 = calculadora792.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double1658, 1155.5415);
        java.lang.String string4172 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string4172, "IPSUM");
        int int5578 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int5578, 62500);
    }
    @Test
    public void test1159() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        int int272 = calculadora792.mulInt(250, 100);
        Assertions.assertEquals(int272, 25000);
        java.lang.String string8203 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8203, "TOP");
        double double4509 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double4509, -105.5);
    }
    @Test
    public void test1160() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1709 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1709, false);
        boolean boolean8218 = calculadora792.and(false, boolean399);
        Assertions.assertEquals(boolean8218, false);
        double double2096 = calculadora792.mulDouble(0.0, 0.0);
        Assertions.assertEquals(double2096, 0.0);
    }
    @Test
    public void test1162() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        java.lang.String string4372 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4372, "GO");
        int int9899 = calculadora792.divInt(-1000, 1000);
        Assertions.assertEquals(int9899, -1);
        int int148 = calculadora792.subInt(500, 250);
        Assertions.assertEquals(int148, 250);
        boolean boolean4707 = calculadora792.and(false, boolean5875);
        Assertions.assertEquals(boolean4707, false);
    }
    @Test
    public void test1163() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        java.lang.String string3827 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3827, "IPSUM");
        java.lang.String string2686 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string2686, "IPSUM");
        boolean boolean6324 = calculadora792.maior(0, -250);
        Assertions.assertEquals(boolean6324, true);
        int int2968 = calculadora792.divInt(0, 250);
        Assertions.assertEquals(int2968, 0);
    }
    @Test
    public void test1164() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        int int8067 = calculadora792.somaInt(-500, 100);
        Assertions.assertEquals(int8067, -400);
        int int7856 = calculadora792.divInt(-250, -250);
        Assertions.assertEquals(int7856, 1);
    }
    @Test
    public void test1165() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2702 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2702, "VALEU");
        int int7224 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int7224, 0);
        int int8120 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int8120, -25000);
        boolean boolean5180 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5180, false);
    }
    @Test
    public void test1166() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        double double2711 = calculadora792.subDouble(0.0, 0.55);
        Assertions.assertEquals(double2711, -0.55);
        int int9871 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9871, 10000);
    }
    @Test
    public void test1168() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        boolean boolean4664 = calculadora792.menor(-1000, 250);
        Assertions.assertEquals(boolean4664, true);
    }
    @Test
    public void test1169() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double7759 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double7759, 1.1);
    }
    @Test
    public void test1170() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        int int4630 = calculadora792.divInt(0, 100);
        Assertions.assertEquals(int4630, 0);
        boolean boolean583 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean583, false);
    }
    @Test
    public void test1171() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        int int5412 = calculadora792.somaInt(-1000, 100);
        Assertions.assertEquals(int5412, -900);
        java.lang.String string2520 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string2520, "valeu");
    }
    @Test
    public void test1173() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        boolean boolean4664 = calculadora792.menor(-1000, 250);
        Assertions.assertEquals(boolean4664, true);
        int int7503 = calculadora792.somaInt(-250, -500);
        Assertions.assertEquals(int7503, -750);
    }
    @Test
    public void test1174() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        java.lang.String string3827 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3827, "IPSUM");
        java.lang.String string2686 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string2686, "IPSUM");
        boolean boolean790 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean790, true);
        java.lang.String string8015 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string8015, "IPSUM");
    }
    @Test
    public void test1175() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        int int6720 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int6720, -150);
        java.lang.String string4484 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string4484, "LOREM");
    }
    @Test
    public void test1176() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        boolean boolean7528 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean7528, true);
    }
    @Test
    public void test1177() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int2069 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2069, 900);
        boolean boolean89 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean89, true);
        double double3408 = calculadora792.divDouble(-105.5, 1.99);
        Assertions.assertEquals(double3408, -53.015075376884425);
        boolean boolean9372 = calculadora792.menor(500, 0);
        Assertions.assertEquals(boolean9372, false);
    }
    @Test
    public void test1178() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        java.lang.String string7699 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7699, "top");
        double double191 = calculadora792.divDouble(0.0, -10.953);
        Assertions.assertEquals(double191, -0.0);
        boolean boolean4736 = calculadora792.and(boolean8907, true);
        Assertions.assertEquals(boolean4736, false);
    }
    @Test
    public void test1179() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean4056 = calculadora792.menor(-500, 0);
        Assertions.assertEquals(boolean4056, true);
    }
    @Test
    public void test1180() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        int int125 = calculadora792.mulInt(-1000, 1000);
        Assertions.assertEquals(int125, -1000000);
        boolean boolean5571 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5571, true);
    }
    @Test
    public void test1181() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int352 = calculadora792.subInt(100, -100);
        Assertions.assertEquals(int352, 200);
        boolean boolean5110 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean5110, true);
        java.lang.String string7502 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string7502, "lorem");
        boolean boolean3530 = calculadora792.menor(500, 500);
        Assertions.assertEquals(boolean3530, false);
    }
    @Test
    public void test1182() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        java.lang.String string6502 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string6502, "HELLO");
        int int6992 = calculadora792.subInt(-1000, -500);
        Assertions.assertEquals(int6992, -500);
        int int2713 = calculadora792.divInt(-500, 500);
        Assertions.assertEquals(int2713, -1);
    }
    @Test
    public void test1183() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1160 = calculadora792.maior(250, -1000);
        Assertions.assertEquals(boolean1160, true);
        double double9225 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double9225, 0.0);
        java.lang.String string7356 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7356, "go");
        java.lang.String string1408 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string1408, "NICE");
        double double5349 = calculadora792.subDouble(-10.953, -1.55);
        Assertions.assertEquals(double5349, -9.402999999999999);
    }
    @Test
    public void test1184() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        int int6720 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int6720, -150);
        boolean boolean5297 = calculadora792.or(boolean3418, false);
        Assertions.assertEquals(boolean5297, false);
        java.lang.String string6724 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string6724, "HI");
    }
    @Test
    public void test1185() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string7528 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7528, "go");
        boolean boolean2327 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean2327, false);
        java.lang.String string9533 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string9533, "valeu");
    }
    @Test
    public void test1186() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean9794 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9794, true);
        boolean boolean7307 = calculadora792.or(true, boolean9794);
        Assertions.assertEquals(boolean7307, true);
        boolean boolean1211 = calculadora792.menor(-100, -250);
        Assertions.assertEquals(boolean1211, false);
    }
    @Test
    public void test1188() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        java.lang.String string5613 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5613, "HELLO");
        boolean boolean9034 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9034, true);
        boolean boolean9761 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9761, true);
    }
    @Test
    public void test1190() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean3011 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3011, true);
        int int5745 = calculadora792.divInt(-500, -500);
        Assertions.assertEquals(int5745, 1);
        java.lang.String string364 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string364, "top");
    }
    @Test
    public void test1191() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int6458 = calculadora792.subInt(0, 250);
        Assertions.assertEquals(int6458, -250);
        boolean boolean2061 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2061, false);
        double double6665 = calculadora792.subDouble(105.5, 3.14159);
        Assertions.assertEquals(double6665, 102.35841);
    }
    @Test
    public void test1192() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        java.lang.String string787 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string787, "TOP");
        int int5548 = calculadora792.somaInt(-100, -100);
        Assertions.assertEquals(int5548, -200);
        int int702 = calculadora792.subInt(0, -250);
        Assertions.assertEquals(int702, 250);
    }
    @Test
    public void test1193() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        boolean boolean2893 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2893, true);
        double double9726 = calculadora792.subDouble(0.55, 0.0);
        Assertions.assertEquals(double9726, 0.55);
        int int7855 = calculadora792.mulInt(100, -1000);
        Assertions.assertEquals(int7855, -100000);
    }
    @Test
    public void test1194() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        java.lang.String string7145 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string7145, "lorem");
        boolean boolean3483 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3483, false);
        java.lang.String string2360 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string2360, "go");
    }
    @Test
    public void test1196() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        java.lang.String string3079 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string3079, "VALEU");
        boolean boolean5305 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean5305, false);
    }
    @Test
    public void test1197() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean333 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean333, false);
        boolean boolean6770 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean6770, true);
    }
    @Test
    public void test1198() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        boolean boolean8455 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean8455, false);
        java.lang.String string8182 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string8182, "ipsum");
    }
    @Test
    public void test1200() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
        java.lang.String string442 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string442, "lorem");
    }
    @Test
    public void test1201() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
        boolean boolean8126 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean8126, true);
        boolean boolean9007 = calculadora792.maior(1000, -500);
        Assertions.assertEquals(boolean9007, true);
        double double8856 = calculadora792.divDouble(105.5, 105.5);
        Assertions.assertEquals(double8856, 1.0);
    }
    @Test
    public void test1202() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int1621 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int1621, 600);
        int int9441 = calculadora792.mulInt(-1000, 1000);
        Assertions.assertEquals(int9441, -1000000);
        java.lang.String string1506 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string1506, "hello");
        boolean boolean8232 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean8232, true);
    }
    @Test
    public void test1204() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean9794 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9794, true);
        boolean boolean7307 = calculadora792.or(true, boolean9794);
        Assertions.assertEquals(boolean7307, true);
        int int3725 = calculadora792.somaInt(-500, 250);
        Assertions.assertEquals(int3725, -250);
    }
    @Test
    public void test1205() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        int int4787 = calculadora792.somaInt(100, 0);
        Assertions.assertEquals(int4787, 100);
        int int2953 = calculadora792.somaInt(250, -1000);
        Assertions.assertEquals(int2953, -750);
    }
    @Test
    public void test1207() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2702 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2702, "VALEU");
        int int5760 = calculadora792.somaInt(-100, 1000);
        Assertions.assertEquals(int5760, 900);
        double double39 = calculadora792.mulDouble(105.5, 105.5);
        Assertions.assertEquals(double39, 11130.25);
    }
    @Test
    public void test1210() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double3972 = calculadora792.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double3972, 1.7278745);
    }
    @Test
    public void test1211() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        java.lang.String string446 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string446, "TOP");
        double double4040 = calculadora792.somaDouble(3.14159, -105.5);
        Assertions.assertEquals(double4040, -102.35841);
    }
    @Test
    public void test1212() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        int int4972 = calculadora792.mulInt(500, 250);
        Assertions.assertEquals(int4972, 125000);
        double double8271 = calculadora792.subDouble(105.5, 3.14159);
        Assertions.assertEquals(double8271, 102.35841);
    }
    @Test
    public void test1213() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int8945 = calculadora792.divInt(-500, 1000);
        Assertions.assertEquals(int8945, 0);
        double double9569 = calculadora792.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double9569, -209.945);
        double double4089 = calculadora792.divDouble(105.5, 1.99);
        Assertions.assertEquals(double4089, 53.015075376884425);
    }
    @Test
    public void test1214() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        java.lang.String string3279 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3279, "NICE");
        boolean boolean8546 = calculadora792.menor(-500, -100);
        Assertions.assertEquals(boolean8546, true);
    }
    @Test
    public void test1215() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        java.lang.String string4372 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4372, "GO");
        int int9899 = calculadora792.divInt(-1000, 1000);
        Assertions.assertEquals(int9899, -1);
        int int148 = calculadora792.subInt(500, 250);
        Assertions.assertEquals(int148, 250);
        boolean boolean4707 = calculadora792.and(false, boolean5875);
        Assertions.assertEquals(boolean4707, false);
        boolean boolean5545 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean5545, false);
    }
    @Test
    public void test1216() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        java.lang.String string401 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string401, "HELLO");
        boolean boolean8108 = calculadora792.maior(-100, 250);
        Assertions.assertEquals(boolean8108, false);
        java.lang.String string258 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string258, "HI");
    }
    @Test
    public void test1217() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string4626 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string4626, "top");
        boolean boolean7536 = calculadora792.and(true, boolean79);
        Assertions.assertEquals(boolean7536, false);
    }
    @Test
    public void test1218() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        boolean boolean6853 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean6853, false);
        boolean boolean9412 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9412, true);
        double double4789 = calculadora792.somaDouble(10.953, 105.5);
        Assertions.assertEquals(double4789, 116.453);
    }
    @Test
    public void test1219() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        double double1008 = calculadora792.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double1008, -1.0);
        int int5189 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int5189, 0);
    }
    @Test
    public void test1220() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int2875 = calculadora792.subInt(1000, -500);
        Assertions.assertEquals(int2875, 1500);
        boolean boolean5474 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5474, false);
        double double5447 = calculadora792.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double5447, 1.0945);
    }
    @Test
    public void test1223() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        int int6731 = calculadora792.subInt(-250, 100);
        Assertions.assertEquals(int6731, -350);
        boolean boolean4055 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean4055, true);
        boolean boolean3105 = calculadora792.maior(-500, -500);
        Assertions.assertEquals(boolean3105, false);
    }
    @Test
    public void test1224() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string197 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string197, "lorem");
        java.lang.String string2224 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string2224, "IPSUM");
        boolean boolean31 = calculadora792.maior(250, 0);
        Assertions.assertEquals(boolean31, true);
    }
    @Test
    public void test1225() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        double double161 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double161, -1155.5415);
        java.lang.String string4191 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string4191, "go");
        int int4301 = calculadora792.mulInt(0, 250);
        Assertions.assertEquals(int4301, 0);
    }
    @Test
    public void test1226() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int1462 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int1462, 500000);
        boolean boolean5184 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5184, false);
        double double9923 = calculadora792.somaDouble(-10.953, 0.55);
        Assertions.assertEquals(double9923, -10.402999999999999);
    }
    @Test
    public void test1227() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
        java.lang.String string6530 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6530, "LOREM");
    }
    @Test
    public void test1228() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        java.lang.String string6731 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string6731, "nice");
    }
    @Test
    public void test1229() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        java.lang.String string3079 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string3079, "VALEU");
        boolean boolean5305 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean5305, false);
        boolean boolean2914 = calculadora792.maior(-250, -250);
        Assertions.assertEquals(boolean2914, false);
    }
    @Test
    public void test1231() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        java.lang.String string6622 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string6622, "nice");
        double double6989 = calculadora792.somaDouble(-10.953, 105.5);
        Assertions.assertEquals(double6989, 94.547);
    }
    @Test
    public void test1233() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double2301 = calculadora792.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double2301, -104.95);
        int int1333 = calculadora792.divInt(-500, 250);
        Assertions.assertEquals(int1333, -2);
        boolean boolean9636 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean9636, false);
        java.lang.String string599 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string599, "VALEU");
    }
    @Test
    public void test1235() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        double double6478 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double6478, 9.632064274627956);
    }
    @Test
    public void test1236() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        boolean boolean5888 = calculadora792.menor(100, -500);
        Assertions.assertEquals(boolean5888, false);
    }
    @Test
    public void test1237() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double2301 = calculadora792.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double2301, -104.95);
        int int1333 = calculadora792.divInt(-500, 250);
        Assertions.assertEquals(int1333, -2);
        boolean boolean9636 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean9636, false);
        boolean boolean4914 = calculadora792.maior(-500, 1000);
        Assertions.assertEquals(boolean4914, false);
    }
    @Test
    public void test1239() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        java.lang.String string6502 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string6502, "HELLO");
        int int6992 = calculadora792.subInt(-1000, -500);
        Assertions.assertEquals(int6992, -500);
        int int2713 = calculadora792.divInt(-500, 500);
        Assertions.assertEquals(int2713, -1);
        boolean boolean3677 = calculadora792.maior(-100, -250);
        Assertions.assertEquals(boolean3677, true);
    }
    @Test
    public void test1240() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        double double2810 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double2810, -116.453);
    }
    @Test
    public void test1241() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        int int1529 = calculadora792.mulInt(500, -250);
        Assertions.assertEquals(int1529, -125000);
        boolean boolean2768 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2768, true);
    }
    @Test
    public void test1242() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        double double2783 = calculadora792.subDouble(1.99, -1.55);
        Assertions.assertEquals(double2783, 3.54);
    }
    @Test
    public void test1243() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
        double double2837 = calculadora792.subDouble(0.55, 3.14159);
        Assertions.assertEquals(double2837, -2.59159);
        int int4118 = calculadora792.divInt(1000, 250);
        Assertions.assertEquals(int4118, 4);
        java.lang.String string5672 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string5672, "LOREM");
    }
    @Test
    public void test1244() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        java.lang.String string1195 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string1195, "HI");
        boolean boolean9737 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9737, true);
        boolean boolean9366 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9366, true);
        int int2151 = calculadora792.subInt(100, -250);
        Assertions.assertEquals(int2151, 350);
    }
    @Test
    public void test1248() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int6089 = calculadora792.divInt(0, 500);
        Assertions.assertEquals(int6089, 0);
        int int3396 = calculadora792.somaInt(-1000, 500);
        Assertions.assertEquals(int3396, -500);
        int int5302 = calculadora792.mulInt(100, -100);
        Assertions.assertEquals(int5302, -10000);
    }
    @Test
    public void test1249() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        int int4464 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int4464, -600);
        int int2142 = calculadora792.somaInt(250, 1000);
        Assertions.assertEquals(int2142, 1250);
    }
    @Test
    public void test1250() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9528 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double9528, 0.0);
        java.lang.String string994 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string994, "LOREM");
    }
    @Test
    public void test1251() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        int int641 = calculadora792.divInt(-500, -100);
        Assertions.assertEquals(int641, 5);
        double double2961 = calculadora792.mulDouble(-10.953, 3.14159);
        Assertions.assertEquals(double2961, -34.409835269999995);
    }
    @Test
    public void test1252() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string197 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string197, "lorem");
        java.lang.String string2224 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string2224, "IPSUM");
        boolean boolean31 = calculadora792.maior(250, 0);
        Assertions.assertEquals(boolean31, true);
        boolean boolean4273 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4273, false);
    }
    @Test
    public void test1253() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2061 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2061, "VALEU");
        double double9880 = calculadora792.somaDouble(-1.55, -10.953);
        Assertions.assertEquals(double9880, -12.503);
        boolean boolean4899 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean4899, true);
        boolean boolean646 = calculadora792.menor(-1000, 500);
        Assertions.assertEquals(boolean646, true);
    }
    @Test
    public void test1254() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double2584 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double2584, -1.55);
        boolean boolean3321 = calculadora792.menor(-1000, 1000);
        Assertions.assertEquals(boolean3321, true);
        int int6534 = calculadora792.somaInt(250, -250);
        Assertions.assertEquals(int6534, 0);
    }
    @Test
    public void test1255() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string3675 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string3675, "lorem");
        boolean boolean9689 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean9689, false);
        double double3371 = calculadora792.mulDouble(-10.953, 0.55);
        Assertions.assertEquals(double3371, -6.024150000000001);
    }
    @Test
    public void test1256() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean716 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean716, false);
        boolean boolean6148 = calculadora792.and(boolean6342, true);
        Assertions.assertEquals(boolean6148, false);
        double double6781 = calculadora792.mulDouble(10.953, 1.99);
        Assertions.assertEquals(double6781, 21.79647);
    }
    @Test
    public void test1257() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean6106 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean6106, false);
        boolean boolean2598 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2598, false);
    }
    @Test
    public void test1258() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double2396 = calculadora792.somaDouble(-10.953, 0.55);
        Assertions.assertEquals(double2396, -10.402999999999999);
        boolean boolean7858 = calculadora792.menor(250, 500);
        Assertions.assertEquals(boolean7858, true);
        int int5450 = calculadora792.mulInt(-500, -100);
        Assertions.assertEquals(int5450, 50000);
    }
    @Test
    public void test1260() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        int int194 = calculadora792.subInt(0, -250);
        Assertions.assertEquals(int194, 250);
        boolean boolean7120 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean7120, true);
    }
    @Test
    public void test1261() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        boolean boolean3575 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean3575, false);
        java.lang.String string7065 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string7065, "hello");
    }
    @Test
    public void test1262() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
        java.lang.String string5528 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string5528, "nice");
        double double6927 = calculadora792.somaDouble(3.14159, 10.953);
        Assertions.assertEquals(double6927, 14.09459);
    }
    @Test
    public void test1263() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        boolean boolean4322 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4322, false);
    }
    @Test
    public void test1265() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        int int9612 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int9612, -1);
    }
    @Test
    public void test1266() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double9802 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9802, -4.8694645);
        int int7984 = calculadora792.subInt(100, -1000);
        Assertions.assertEquals(int7984, 1100);
    }
    @Test
    public void test1267() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        int int2788 = calculadora792.mulInt(100, 1000);
        Assertions.assertEquals(int2788, 100000);
        int int1159 = calculadora792.mulInt(250, -100);
        Assertions.assertEquals(int1159, -25000);
        double double3524 = calculadora792.somaDouble(-10.953, 105.5);
        Assertions.assertEquals(double3524, 94.547);
    }
    @Test
    public void test1268() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        int int9309 = calculadora792.divInt(1000, 250);
        Assertions.assertEquals(int9309, 4);
        double double1653 = calculadora792.divDouble(10.953, -105.5);
        Assertions.assertEquals(double1653, -0.10381990521327014);
    }
    @Test
    public void test1270() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        boolean boolean5642 = calculadora792.menor(0, -250);
        Assertions.assertEquals(boolean5642, false);
        boolean boolean7212 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean7212, true);
    }
    @Test
    public void test1272() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        int int8067 = calculadora792.somaInt(-500, 100);
        Assertions.assertEquals(int8067, -400);
        int int6661 = calculadora792.mulInt(-250, 250);
        Assertions.assertEquals(int6661, -62500);
    }
    @Test
    public void test1273() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        int int2949 = calculadora792.mulInt(-500, 250);
        Assertions.assertEquals(int2949, -125000);
        boolean boolean9218 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9218, false);
    }
    @Test
    public void test1274() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        boolean boolean4157 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean4157, false);
        boolean boolean3204 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean3204, false);
        java.lang.String string9393 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string9393, "VALEU");
        boolean boolean9872 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9872, false);
    }
    @Test
    public void test1275() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1680 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int1680, 350);
        int int4646 = calculadora792.mulInt(-100, 0);
        Assertions.assertEquals(int4646, 0);
        int int5199 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int5199, 62500);
    }
    @Test
    public void test1276() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        boolean boolean2388 = calculadora792.maior(-100, 250);
        Assertions.assertEquals(boolean2388, false);
        boolean boolean9280 = calculadora792.menor(-100, 100);
        Assertions.assertEquals(boolean9280, true);
    }
    @Test
    public void test1279() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        boolean boolean5642 = calculadora792.menor(0, -250);
        Assertions.assertEquals(boolean5642, false);
        int int1529 = calculadora792.subInt(250, 1000);
        Assertions.assertEquals(int1529, -750);
    }
    @Test
    public void test1280() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        double double2693 = calculadora792.mulDouble(-1.55, -105.5);
        Assertions.assertEquals(double2693, 163.525);
        int int8162 = calculadora792.mulInt(500, 500);
        Assertions.assertEquals(int8162, 250000);
    }
    @Test
    public void test1283() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean6508 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6508, true);
    }
    @Test
    public void test1284() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        double double3673 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double3673, 94.547);
        int int6414 = calculadora792.somaInt(1000, -100);
        Assertions.assertEquals(int6414, 900);
    }
    @Test
    public void test1285() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        int int5449 = calculadora792.mulInt(250, -500);
        Assertions.assertEquals(int5449, -125000);
        double double4912 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double4912, 3.14159);
    }
    @Test
    public void test1286() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        boolean boolean7219 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean7219, true);
        boolean boolean3493 = calculadora792.or(boolean7219, true);
        Assertions.assertEquals(boolean3493, true);
    }
    @Test
    public void test1288() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1709 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1709, false);
        int int3300 = calculadora792.divInt(1000, 500);
        Assertions.assertEquals(int3300, 2);
    }
    @Test
    public void test1289() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        int int8771 = calculadora792.mulInt(-1000, -250);
        Assertions.assertEquals(int8771, 250000);
        double double7523 = calculadora792.mulDouble(0.55, 1.99);
        Assertions.assertEquals(double7523, 1.0945);
    }
    @Test
    public void test1290() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        int int1529 = calculadora792.mulInt(500, -250);
        Assertions.assertEquals(int1529, -125000);
        boolean boolean1411 = calculadora792.menor(250, -250);
        Assertions.assertEquals(boolean1411, false);
        double double2090 = calculadora792.divDouble(1.99, -10.953);
        Assertions.assertEquals(double2090, -0.18168538300009132);
    }
    @Test
    public void test1291() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
        double double4938 = calculadora792.subDouble(10.953, 105.5);
        Assertions.assertEquals(double4938, -94.547);
    }
    @Test
    public void test1292() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        boolean boolean5642 = calculadora792.menor(0, -250);
        Assertions.assertEquals(boolean5642, false);
        int int1529 = calculadora792.subInt(250, 1000);
        Assertions.assertEquals(int1529, -750);
        java.lang.String string4752 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string4752, "go");
    }
    @Test
    public void test1294() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
        java.lang.String string5528 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string5528, "nice");
        double double6927 = calculadora792.somaDouble(3.14159, 10.953);
        Assertions.assertEquals(double6927, 14.09459);
        int int1979 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int1979, 0);
    }
    @Test
    public void test1295() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        double double5117 = calculadora792.mulDouble(-105.5, 1.99);
        Assertions.assertEquals(double5117, -209.945);
        java.lang.String string7176 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string7176, "hi");
        boolean boolean3341 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3341, true);
    }
    @Test
    public void test1296() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        java.lang.String string4168 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string4168, "hello");
    }
    @Test
    public void test1297() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        boolean boolean9874 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean9874, false);
        boolean boolean5086 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean5086, true);
        boolean boolean5568 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean5568, true);
        double double575 = calculadora792.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double575, -14.09459);
    }
    @Test
    public void test1298() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        boolean boolean3220 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3220, false);
    }
    @Test
    public void test1299() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
        java.lang.String string4439 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string4439, "HI");
        int int4390 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4390, -250000);
        boolean boolean8765 = calculadora792.or(false, boolean6721);
        Assertions.assertEquals(boolean8765, false);
        java.lang.String string2022 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2022, "VALEU");
        boolean boolean8248 = calculadora792.menor(-500, -500);
        Assertions.assertEquals(boolean8248, false);
    }
    @Test
    public void test1300() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int1621 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int1621, 600);
        int int9441 = calculadora792.mulInt(-1000, 1000);
        Assertions.assertEquals(int9441, -1000000);
        boolean boolean9503 = calculadora792.menor(250, -250);
        Assertions.assertEquals(boolean9503, false);
        int int6040 = calculadora792.somaInt(-250, -1000);
        Assertions.assertEquals(int6040, -1250);
    }
    @Test
    public void test1301() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double5081 = calculadora792.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double5081, 0.014691943127962086);
        int int5588 = calculadora792.mulInt(-1000, 100);
        Assertions.assertEquals(int5588, -100000);
        boolean boolean6667 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6667, false);
    }
    @Test
    public void test1302() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string197 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string197, "lorem");
        int int4064 = calculadora792.somaInt(100, 250);
        Assertions.assertEquals(int4064, 350);
        double double5245 = calculadora792.divDouble(1.99, 105.5);
        Assertions.assertEquals(double5245, 0.01886255924170616);
    }
    @Test
    public void test1303() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int4727 = calculadora792.somaInt(-1000, 100);
        Assertions.assertEquals(int4727, -900);
        boolean boolean8151 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean8151, false);
    }
    @Test
    public void test1304() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean6372 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6372, true);
        boolean boolean5025 = calculadora792.or(false, boolean6372);
        Assertions.assertEquals(boolean5025, false);
    }
    @Test
    public void test1306() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        boolean boolean2783 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2783, false);
    }
    @Test
    public void test1307() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
        double double4938 = calculadora792.subDouble(10.953, 105.5);
        Assertions.assertEquals(double4938, -94.547);
        boolean boolean8772 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean8772, false);
    }
    @Test
    public void test1308() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean615 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean615, false);
        boolean boolean7662 = calculadora792.maior(100, -1000);
        Assertions.assertEquals(boolean7662, true);
    }
    @Test
    public void test1309() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        java.lang.String string812 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string812, "hello");
        java.lang.String string1838 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string1838, "hi");
    }
    @Test
    public void test1310() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
        boolean boolean8126 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean8126, true);
        boolean boolean9007 = calculadora792.maior(1000, -500);
        Assertions.assertEquals(boolean9007, true);
        java.lang.String string9708 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string9708, "hi");
    }
    @Test
    public void test1314() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean1390 = calculadora792.maior(500, -250);
        Assertions.assertEquals(boolean1390, true);
        double double2745 = calculadora792.somaDouble(-105.5, -105.5);
        Assertions.assertEquals(double2745, -211.0);
        boolean boolean4761 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean4761, false);
    }
    @Test
    public void test1315() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        int int6258 = calculadora792.mulInt(500, 1000);
        Assertions.assertEquals(int6258, 500000);
        double double6609 = calculadora792.somaDouble(3.14159, 105.5);
        Assertions.assertEquals(double6609, 108.64159);
        boolean boolean8344 = calculadora792.menor(-250, -500);
        Assertions.assertEquals(boolean8344, false);
    }
    @Test
    public void test1317() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int2069 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2069, 900);
        boolean boolean89 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean89, true);
        double double3408 = calculadora792.divDouble(-105.5, 1.99);
        Assertions.assertEquals(double3408, -53.015075376884425);
        boolean boolean9372 = calculadora792.menor(500, 0);
        Assertions.assertEquals(boolean9372, false);
        double double5342 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double5342, 0.55);
    }
    @Test
    public void test1318() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
        boolean boolean8126 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean8126, true);
        boolean boolean9007 = calculadora792.maior(1000, -500);
        Assertions.assertEquals(boolean9007, true);
        double double1676 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double1676, -1.55);
        java.lang.String string347 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string347, "GO");
        boolean boolean4204 = calculadora792.or(false, boolean9007);
        Assertions.assertEquals(boolean4204, false);
        double double7975 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double7975, -16.977149999999998);
    }
    @Test
    public void test1319() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
        boolean boolean712 = calculadora792.maior(250, 0);
        Assertions.assertEquals(boolean712, true);
    }
    @Test
    public void test1320() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        int int9944 = calculadora792.somaInt(1000, 0);
        Assertions.assertEquals(int9944, 1000);
        double double4403 = calculadora792.mulDouble(-1.55, 1.99);
        Assertions.assertEquals(double4403, -3.0845000000000002);
    }
    @Test
    public void test1321() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        boolean boolean6144 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6144, false);
        java.lang.String string4790 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string4790, "valeu");
    }
    @Test
    public void test1322() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean5835 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5835, false);
        int int9324 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9324, 10000);
        java.lang.String string1859 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string1859, "valeu");
    }
    @Test
    public void test1323() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        java.lang.String string1403 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string1403, "LOREM");
        boolean boolean5582 = calculadora792.menor(-100, -250);
        Assertions.assertEquals(boolean5582, false);
        boolean boolean2916 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean2916, true);
    }
    @Test
    public void test1327() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        int int1954 = calculadora792.somaInt(100, 100);
        Assertions.assertEquals(int1954, 200);
    }
    @Test
    public void test1328() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        double double2810 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double2810, -116.453);
        java.lang.String string6409 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string6409, "IPSUM");
    }
    @Test
    public void test1329() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
        java.lang.String string3968 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string3968, "GO");
        double double8279 = calculadora792.mulDouble(-1.55, 105.5);
        Assertions.assertEquals(double8279, -163.525);
    }
    @Test
    public void test1330() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6518 = calculadora792.mulInt(-1000, 0);
        Assertions.assertEquals(int6518, 0);
        int int3231 = calculadora792.subInt(250, -100);
        Assertions.assertEquals(int3231, 350);
        int int7289 = calculadora792.divInt(500, 1000);
        Assertions.assertEquals(int7289, 0);
        int int9544 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int9544, 600);
    }
    @Test
    public void test1331() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        int int2024 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int2024, -25000);
        double double1927 = calculadora792.divDouble(-105.5, -1.55);
        Assertions.assertEquals(double1927, 68.06451612903226);
        java.lang.String string9572 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string9572, "LOREM");
    }
    @Test
    public void test1332() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean7121 = calculadora792.maior(500, 1000);
        Assertions.assertEquals(boolean7121, false);
    }
    @Test
    public void test1333() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        boolean boolean8231 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean8231, true);
    }
    @Test
    public void test1334() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        int int8365 = calculadora792.subInt(-250, 1000);
        Assertions.assertEquals(int8365, -1250);
        double double2781 = calculadora792.divDouble(10.953, 10.953);
        Assertions.assertEquals(double2781, 1.0);
    }
    @Test
    public void test1335() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        boolean boolean9675 = calculadora792.maior(500, -1000);
        Assertions.assertEquals(boolean9675, true);
    }
    @Test
    public void test1337() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean914 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean914, false);
        int int498 = calculadora792.mulInt(500, 500);
        Assertions.assertEquals(int498, 250000);
        java.lang.String string4385 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string4385, "VALEU");
    }
    @Test
    public void test1338() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int5717 = calculadora792.mulInt(-100, 500);
        Assertions.assertEquals(int5717, -50000);
        int int4565 = calculadora792.divInt(0, -1000);
        Assertions.assertEquals(int4565, 0);
    }
    @Test
    public void test1339() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        java.lang.String string5530 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string5530, "TOP");
        int int1912 = calculadora792.divInt(250, 500);
        Assertions.assertEquals(int1912, 0);
    }
    @Test
    public void test1341() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean4468 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean4468, true);
        boolean boolean3938 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean3938, false);
    }
    @Test
    public void test1342() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int1621 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int1621, 600);
        int int9441 = calculadora792.mulInt(-1000, 1000);
        Assertions.assertEquals(int9441, -1000000);
        boolean boolean9503 = calculadora792.menor(250, -250);
        Assertions.assertEquals(boolean9503, false);
        int int766 = calculadora792.subInt(-1000, -1000);
        Assertions.assertEquals(int766, 0);
    }
    @Test
    public void test1343() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        boolean boolean2965 = calculadora792.menor(1000, -250);
        Assertions.assertEquals(boolean2965, false);
        java.lang.String string6073 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6073, "top");
        boolean boolean261 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean261, true);
    }
    @Test
    public void test1344() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        java.lang.String string401 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string401, "HELLO");
        boolean boolean8108 = calculadora792.maior(-100, 250);
        Assertions.assertEquals(boolean8108, false);
        java.lang.String string258 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string258, "HI");
        double double2561 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double2561, -103.51);
    }
    @Test
    public void test1346() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        boolean boolean9262 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9262, false);
        boolean boolean5728 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5728, true);
        double double904 = calculadora792.divDouble(0.55, 0.55);
        Assertions.assertEquals(double904, 1.0);
    }
    @Test
    public void test1347() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int6586 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int6586, 62500);
        double double3049 = calculadora792.mulDouble(105.5, -105.5);
        Assertions.assertEquals(double3049, -11130.25);
    }
    @Test
    public void test1348() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        int int1021 = calculadora792.mulInt(-1000, -1000);
        Assertions.assertEquals(int1021, 1000000);
        double double2399 = calculadora792.subDouble(10.953, 0.0);
        Assertions.assertEquals(double2399, 10.953);
    }
    @Test
    public void test1349() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3896 = calculadora792.subInt(-1000, 0);
        Assertions.assertEquals(int3896, -1000);
    }
    @Test
    public void test1351() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean6946 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean6946, false);
        double double1280 = calculadora792.somaDouble(-1.55, -1.55);
        Assertions.assertEquals(double1280, -3.1);
        boolean boolean8407 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean8407, true);
        double double5091 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double5091, 5.13159);
    }
    @Test
    public void test1352() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        java.lang.String string1403 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string1403, "LOREM");
        boolean boolean5582 = calculadora792.menor(-100, -250);
        Assertions.assertEquals(boolean5582, false);
        boolean boolean2916 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean2916, true);
        int int7879 = calculadora792.mulInt(500, 0);
        Assertions.assertEquals(int7879, 0);
    }
    @Test
    public void test1353() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
        java.lang.String string5528 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string5528, "nice");
        double double9196 = calculadora792.divDouble(10.953, 105.5);
        Assertions.assertEquals(double9196, 0.10381990521327014);
    }
    @Test
    public void test1354() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        int int9670 = calculadora792.mulInt(1000, 1000);
        Assertions.assertEquals(int9670, 1000000);
        double double7868 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double7868, -16.977149999999998);
        double double8329 = calculadora792.mulDouble(1.99, 105.5);
        Assertions.assertEquals(double8329, 209.945);
    }
    @Test
    public void test1355() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        int int2500 = calculadora792.divInt(0, 250);
        Assertions.assertEquals(int2500, 0);
        int int9692 = calculadora792.divInt(0, -1000);
        Assertions.assertEquals(int9692, 0);
        boolean boolean6926 = calculadora792.menor(0, -1000);
        Assertions.assertEquals(boolean6926, false);
    }
    @Test
    public void test1356() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
        java.lang.String string5528 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string5528, "nice");
        double double6927 = calculadora792.somaDouble(3.14159, 10.953);
        Assertions.assertEquals(double6927, 14.09459);
        double double7737 = calculadora792.divDouble(0.0, 105.5);
        Assertions.assertEquals(double7737, 0.0);
    }
    @Test
    public void test1357() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean5835 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5835, false);
        int int9324 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9324, 10000);
        int int9623 = calculadora792.mulInt(-1000, 100);
        Assertions.assertEquals(int9623, -100000);
    }
    @Test
    public void test1358() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double7431 = calculadora792.somaDouble(0.55, 10.953);
        Assertions.assertEquals(double7431, 11.503);
        double double7098 = calculadora792.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double7098, 4.69159);
        double double7914 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7914, 0.55);
    }
    @Test
    public void test1359() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        int int7734 = calculadora792.divInt(-100, -250);
        Assertions.assertEquals(int7734, 0);
        int int4850 = calculadora792.somaInt(250, -500);
        Assertions.assertEquals(int4850, -250);
    }
    @Test
    public void test1360() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        boolean boolean3089 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean3089, false);
        int int977 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int977, -25000);
        int int5904 = calculadora792.subInt(-1000, 1000);
        Assertions.assertEquals(int5904, -2000);
    }
    @Test
    public void test1361() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean6333 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6333, false);
        int int8783 = calculadora792.divInt(100, 1000);
        Assertions.assertEquals(int8783, 0);
        boolean boolean8681 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean8681, false);
        double double1058 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1058, 9.632064274627956);
        double double2790 = calculadora792.subDouble(1.99, -10.953);
        Assertions.assertEquals(double2790, 12.943);
    }
    @Test
    public void test1362() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        int int6720 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int6720, -150);
        java.lang.String string4484 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string4484, "LOREM");
        java.lang.String string9079 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string9079, "GO");
    }
    @Test
    public void test1363() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        double double3232 = calculadora792.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double3232, -9.632064274627956);
        boolean boolean5734 = calculadora792.menor(-250, 250);
        Assertions.assertEquals(boolean5734, true);
        int int3230 = calculadora792.divInt(500, 100);
        Assertions.assertEquals(int3230, 5);
    }
    @Test
    public void test1365() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        boolean boolean2863 = calculadora792.maior(-1000, -250);
        Assertions.assertEquals(boolean2863, false);
        boolean boolean4688 = calculadora792.and(false, boolean7494);
        Assertions.assertEquals(boolean4688, false);
        double double2424 = calculadora792.subDouble(-1.55, -105.5);
        Assertions.assertEquals(double2424, 103.95);
    }
    @Test
    public void test1366() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        int int8387 = calculadora792.divInt(-500, -1000);
        Assertions.assertEquals(int8387, 0);
        double double6367 = calculadora792.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double6367, 6.28318);
    }
    @Test
    public void test1367() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double2854 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double2854, 9.402999999999999);
        boolean boolean6187 = calculadora792.maior(500, 1000);
        Assertions.assertEquals(boolean6187, false);
    }
    @Test
    public void test1369() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean5909 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5909, true);
        double double4769 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double4769, 58.025000000000006);
    }
    @Test
    public void test1371() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean9794 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9794, true);
        boolean boolean7307 = calculadora792.or(true, boolean9794);
        Assertions.assertEquals(boolean7307, true);
        boolean boolean1211 = calculadora792.menor(-100, -250);
        Assertions.assertEquals(boolean1211, false);
        boolean boolean2843 = calculadora792.or(false, boolean1211);
        Assertions.assertEquals(boolean2843, false);
    }
    @Test
    public void test1372() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int4743 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4743, 62500);
        boolean boolean6507 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean6507, true);
        java.lang.String string3307 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string3307, "go");
        boolean boolean1573 = calculadora792.menor(-1000, 500);
        Assertions.assertEquals(boolean1573, true);
    }
    @Test
    public void test1373() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        double double369 = calculadora792.divDouble(0.0, 105.5);
        Assertions.assertEquals(double369, 0.0);
        int int7530 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7530, -1000);
    }
    @Test
    public void test1375() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int2069 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2069, 900);
        int int3743 = calculadora792.mulInt(100, -100);
        Assertions.assertEquals(int3743, -10000);
        boolean boolean4499 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4499, false);
    }
    @Test
    public void test1376() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double6675 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double6675, 1.7278745);
        double double4173 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4173, -107.05);
        java.lang.String string3159 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string3159, "HELLO");
        boolean boolean3331 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean3331, true);
    }
    @Test
    public void test1378() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
        boolean boolean5126 = calculadora792.maior(100, -1000);
        Assertions.assertEquals(boolean5126, true);
    }
    @Test
    public void test1379() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean1390 = calculadora792.maior(500, -250);
        Assertions.assertEquals(boolean1390, true);
        double double2745 = calculadora792.somaDouble(-105.5, -105.5);
        Assertions.assertEquals(double2745, -211.0);
        boolean boolean4761 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean4761, false);
        double double4032 = calculadora792.somaDouble(10.953, 3.14159);
        Assertions.assertEquals(double4032, 14.09459);
    }
    @Test
    public void test1380() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        java.lang.String string5170 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string5170, "top");
        double double8658 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double8658, -105.5);
        int int9931 = calculadora792.mulInt(-250, 1000);
        Assertions.assertEquals(int9931, -250000);
    }
    @Test
    public void test1382() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean6333 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6333, false);
        boolean boolean3400 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3400, true);
    }
    @Test
    public void test1383() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        double double1099 = calculadora792.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double1099, -1.0);
        int int246 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int246, 10000);
    }
    @Test
    public void test1384() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        double double1099 = calculadora792.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double1099, -1.0);
        int int246 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int246, 10000);
        int int3586 = calculadora792.mulInt(0, -250);
        Assertions.assertEquals(int3586, 0);
    }
    @Test
    public void test1385() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        java.lang.String string5613 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5613, "HELLO");
        boolean boolean9034 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9034, true);
        boolean boolean9761 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9761, true);
        java.lang.String string5123 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string5123, "top");
    }
    @Test
    public void test1386() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean195 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean195, false);
        java.lang.String string9542 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string9542, "VALEU");
        double double2370 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double2370, -105.5);
    }
    @Test
    public void test1387() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        int int4912 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int4912, 2000);
        double double673 = calculadora792.mulDouble(0.0, 3.14159);
        Assertions.assertEquals(double673, 0.0);
    }
    @Test
    public void test1388() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        boolean boolean9183 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean9183, false);
        int int3007 = calculadora792.mulInt(250, -500);
        Assertions.assertEquals(int3007, -125000);
    }
    @Test
    public void test1389() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int5717 = calculadora792.mulInt(-100, 500);
        Assertions.assertEquals(int5717, -50000);
        double double2988 = calculadora792.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double2988, 5.711981818181817);
        int int589 = calculadora792.divInt(250, -1000);
        Assertions.assertEquals(int589, 0);
    }
    @Test
    public void test1391() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double9802 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9802, -4.8694645);
        int int6276 = calculadora792.somaInt(-100, -1000);
        Assertions.assertEquals(int6276, -1100);
    }
    @Test
    public void test1392() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double7427 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double7427, 108.64159);
        boolean boolean7441 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean7441, true);
    }
    @Test
    public void test1394() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        double double3673 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double3673, 94.547);
        int int9228 = calculadora792.mulInt(500, -500);
        Assertions.assertEquals(int9228, -250000);
    }
    @Test
    public void test1395() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double7418 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double7418, -105.5);
        java.lang.String string7396 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string7396, "HI");
        boolean boolean6893 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean6893, true);
        java.lang.String string397 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string397, "ipsum");
    }
    @Test
    public void test1396() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int8548 = calculadora792.somaInt(-100, -500);
        Assertions.assertEquals(int8548, -600);
        double double8588 = calculadora792.divDouble(3.14159, -1.55);
        Assertions.assertEquals(double8588, -2.026832258064516);
    }
    @Test
    public void test1397() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        double double4207 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4207, 34.409835269999995);
        java.lang.String string5956 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string5956, "hello");
    }
    @Test
    public void test1398() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        boolean boolean2119 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2119, true);
    }
    @Test
    public void test1399() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean6602 = calculadora792.maior(0, 500);
        Assertions.assertEquals(boolean6602, false);
        int int9941 = calculadora792.somaInt(100, 100);
        Assertions.assertEquals(int9941, 200);
    }
    @Test
    public void test1401() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        boolean boolean1958 = calculadora792.or(false, boolean9692);
        Assertions.assertEquals(boolean1958, false);
        boolean boolean8813 = calculadora792.menor(500, -1000);
        Assertions.assertEquals(boolean8813, false);
    }
    @Test
    public void test1403() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double7431 = calculadora792.somaDouble(0.55, 10.953);
        Assertions.assertEquals(double7431, 11.503);
        double double7098 = calculadora792.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double7098, 4.69159);
        double double7914 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7914, 0.55);
        double double5510 = calculadora792.somaDouble(105.5, 105.5);
        Assertions.assertEquals(double5510, 211.0);
    }
    @Test
    public void test1404() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        double double1325 = calculadora792.somaDouble(-10.953, -1.55);
        Assertions.assertEquals(double1325, -12.503);
        boolean boolean6602 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean6602, true);
    }
    @Test
    public void test1405() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double4694 = calculadora792.subDouble(0.0, -1.55);
        Assertions.assertEquals(double4694, 1.55);
        java.lang.String string8488 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string8488, "go");
        double double131 = calculadora792.divDouble(10.953, 105.5);
        Assertions.assertEquals(double131, 0.10381990521327014);
    }
    @Test
    public void test1406() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
        int int4486 = calculadora792.mulInt(-250, 0);
        Assertions.assertEquals(int4486, 0);
        java.lang.String string7162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7162, "LOREM");
    }
    @Test
    public void test1408() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean7368 = calculadora792.menor(0, 250);
        Assertions.assertEquals(boolean7368, true);
    }
    @Test
    public void test1409() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean7229 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean7229, true);
        java.lang.String string941 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string941, "lorem");
    }
    @Test
    public void test1410() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean3047 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3047, true);
        int int6906 = calculadora792.mulInt(-250, -100);
        Assertions.assertEquals(int6906, 25000);
        int int6801 = calculadora792.somaInt(250, -1000);
        Assertions.assertEquals(int6801, -750);
        double double6499 = calculadora792.divDouble(105.5, 105.5);
        Assertions.assertEquals(double6499, 1.0);
    }
    @Test
    public void test1411() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        boolean boolean3575 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean3575, false);
        boolean boolean4481 = calculadora792.maior(-1000, 500);
        Assertions.assertEquals(boolean4481, false);
    }
    @Test
    public void test1412() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3691 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int3691, -600);
        double double7327 = calculadora792.divDouble(0.0, 3.14159);
        Assertions.assertEquals(double7327, 0.0);
        java.lang.String string5066 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string5066, "nice");
    }
    @Test
    public void test1413() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int1429 = calculadora792.mulInt(1000, 250);
        Assertions.assertEquals(int1429, 250000);
    }
    @Test
    public void test1414() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        java.lang.String string7145 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string7145, "lorem");
        boolean boolean5908 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5908, false);
    }
    @Test
    public void test1415() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        java.lang.String string1860 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string1860, "go");
        boolean boolean3046 = calculadora792.or(boolean203, false);
        Assertions.assertEquals(boolean3046, false);
        boolean boolean366 = calculadora792.or(boolean7494, boolean7709);
        Assertions.assertEquals(boolean366, false);
        boolean boolean3780 = calculadora792.menor(-500, -1000);
        Assertions.assertEquals(boolean3780, false);
    }
    @Test
    public void test1416() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string364 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string364, "hello");
        double double8337 = calculadora792.subDouble(105.5, 1.99);
        Assertions.assertEquals(double8337, 103.51);
        boolean boolean1024 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean1024, false);
    }
    @Test
    public void test1417() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        int int5463 = calculadora792.divInt(500, 1000);
        Assertions.assertEquals(int5463, 0);
        java.lang.String string8534 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string8534, "valeu");
    }
    @Test
    public void test1418() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        java.lang.String string6502 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string6502, "HELLO");
        int int2867 = calculadora792.divInt(1000, 1000);
        Assertions.assertEquals(int2867, 1);
    }
    @Test
    public void test1419() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int2875 = calculadora792.subInt(1000, -500);
        Assertions.assertEquals(int2875, 1500);
        double double294 = calculadora792.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double294, 119.96820899999999);
        double double2243 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double2243, 0.0502145530904775);
    }
    @Test
    public void test1420() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        int int4787 = calculadora792.somaInt(100, 0);
        Assertions.assertEquals(int4787, 100);
        int int2953 = calculadora792.somaInt(250, -1000);
        Assertions.assertEquals(int2953, -750);
        int int5450 = calculadora792.divInt(-100, 250);
        Assertions.assertEquals(int5450, 0);
    }
    @Test
    public void test1421() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean8498 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean8498, false);
        int int9866 = calculadora792.divInt(-250, -250);
        Assertions.assertEquals(int9866, 1);
        double double3759 = calculadora792.mulDouble(105.5, 105.5);
        Assertions.assertEquals(double3759, 11130.25);
    }
    @Test
    public void test1423() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1160 = calculadora792.maior(250, -1000);
        Assertions.assertEquals(boolean1160, true);
        double double9225 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double9225, 0.0);
        java.lang.String string8049 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8049, "hello");
    }
    @Test
    public void test1424() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        boolean boolean2238 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean2238, false);
        int int4244 = calculadora792.divInt(-1000, 100);
        Assertions.assertEquals(int4244, -10);
    }
    @Test
    public void test1425() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        java.lang.String string5583 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string5583, "GO");
        boolean boolean1693 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean1693, false);
        java.lang.String string2066 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string2066, "lorem");
        double double7962 = calculadora792.divDouble(105.5, -105.5);
        Assertions.assertEquals(double7962, -1.0);
    }
    @Test
    public void test1427() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        boolean boolean9246 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean9246, false);
    }
    @Test
    public void test1428() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string364 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string364, "hello");
        double double8337 = calculadora792.subDouble(105.5, 1.99);
        Assertions.assertEquals(double8337, 103.51);
        int int7251 = calculadora792.mulInt(-100, -500);
        Assertions.assertEquals(int7251, 50000);
        double double2338 = calculadora792.divDouble(10.953, 10.953);
        Assertions.assertEquals(double2338, 1.0);
    }
    @Test
    public void test1429() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        double double6616 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double6616, -5.504020100502513);
        java.lang.String string7730 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7730, "go");
    }
    @Test
    public void test1430() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        int int4464 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int4464, -600);
        double double7902 = calculadora792.mulDouble(-10.953, 105.5);
        Assertions.assertEquals(double7902, -1155.5415);
    }
    @Test
    public void test1431() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        int int9612 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int9612, -1);
        double double1761 = calculadora792.subDouble(0.55, -10.953);
        Assertions.assertEquals(double1761, 11.503);
    }
    @Test
    public void test1432() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
        java.lang.String string2110 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string2110, "nice");
        java.lang.String string7133 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string7133, "hi");
    }
    @Test
    public void test1433() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        java.lang.String string3155 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string3155, "GO");
    }
    @Test
    public void test1434() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4498 = calculadora792.maior(-1000, 500);
        Assertions.assertEquals(boolean4498, false);
        boolean boolean4151 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean4151, false);
    }
    @Test
    public void test1435() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        double double152 = calculadora792.divDouble(0.55, 105.5);
        Assertions.assertEquals(double152, 0.005213270142180095);
        int int4032 = calculadora792.subInt(1000, 100);
        Assertions.assertEquals(int4032, 900);
        boolean boolean3902 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean3902, false);
    }
    @Test
    public void test1436() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double4694 = calculadora792.subDouble(0.0, -1.55);
        Assertions.assertEquals(double4694, 1.55);
        int int1644 = calculadora792.subInt(-500, -250);
        Assertions.assertEquals(int1644, -250);
        boolean boolean2883 = calculadora792.or(false, boolean269);
        Assertions.assertEquals(boolean2883, false);
        int int9903 = calculadora792.divInt(-500, -500);
        Assertions.assertEquals(int9903, 1);
    }
    @Test
    public void test1437() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        boolean boolean3575 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean3575, false);
        boolean boolean1087 = calculadora792.and(boolean3575, true);
        Assertions.assertEquals(boolean1087, false);
        double double9010 = calculadora792.subDouble(10.953, 0.0);
        Assertions.assertEquals(double9010, 10.953);
    }
    @Test
    public void test1438() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        int int1490 = calculadora792.divInt(-100, 250);
        Assertions.assertEquals(int1490, 0);
        boolean boolean6410 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean6410, false);
        double double9750 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double9750, 0.0);
    }
    @Test
    public void test1440() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        boolean boolean7219 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean7219, true);
        double double4967 = calculadora792.somaDouble(0.0, 1.99);
        Assertions.assertEquals(double4967, 1.99);
        double double3300 = calculadora792.divDouble(-105.5, -105.5);
        Assertions.assertEquals(double3300, 1.0);
        java.lang.String string7715 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string7715, "ipsum");
    }
    @Test
    public void test1441() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        int int6258 = calculadora792.mulInt(500, 1000);
        Assertions.assertEquals(int6258, 500000);
        double double6609 = calculadora792.somaDouble(3.14159, 105.5);
        Assertions.assertEquals(double6609, 108.64159);
        int int1314 = calculadora792.subInt(-250, 500);
        Assertions.assertEquals(int1314, -750);
    }
    @Test
    public void test1442() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean7121 = calculadora792.maior(500, 1000);
        Assertions.assertEquals(boolean7121, false);
        boolean boolean1500 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean1500, false);
    }
    @Test
    public void test1443() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        double double6206 = calculadora792.subDouble(0.55, -10.953);
        Assertions.assertEquals(double6206, 11.503);
        double double2005 = calculadora792.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double2005, 0.0);
    }
    @Test
    public void test1444() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        java.lang.String string5530 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string5530, "TOP");
        boolean boolean3551 = calculadora792.menor(500, 100);
        Assertions.assertEquals(boolean3551, false);
        java.lang.String string8440 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string8440, "go");
    }
    @Test
    public void test1446() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        boolean boolean4321 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4321, false);
        boolean boolean2329 = calculadora792.maior(1000, -500);
        Assertions.assertEquals(boolean2329, true);
    }
    @Test
    public void test1447() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        java.lang.String string3279 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3279, "NICE");
        int int5004 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int5004, -600);
        int int8410 = calculadora792.mulInt(-100, 250);
        Assertions.assertEquals(int8410, -25000);
    }
    @Test
    public void test1448() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        java.lang.String string2238 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string2238, "NICE");
        double double7147 = calculadora792.divDouble(10.953, -105.5);
        Assertions.assertEquals(double7147, -0.10381990521327014);
    }
    @Test
    public void test1449() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
        int int9292 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int9292, 0);
        int int3017 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int3017, 125000);
    }
    @Test
    public void test1450() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        boolean boolean4202 = calculadora792.or(boolean6240, true);
        Assertions.assertEquals(boolean4202, true);
        boolean boolean7166 = calculadora792.and(boolean4202, false);
        Assertions.assertEquals(boolean7166, false);
    }
    @Test
    public void test1452() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        double double161 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double161, -1155.5415);
        double double5669 = calculadora792.subDouble(10.953, 1.99);
        Assertions.assertEquals(double5669, 8.963);
    }
    @Test
    public void test1454() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int3464 = calculadora792.divInt(-1000, 100);
        Assertions.assertEquals(int3464, -10);
        int int190 = calculadora792.somaInt(-1000, 100);
        Assertions.assertEquals(int190, -900);
        int int5791 = calculadora792.mulInt(500, 250);
        Assertions.assertEquals(int5791, 125000);
        int int7280 = calculadora792.divInt(-500, -100);
        Assertions.assertEquals(int7280, 5);
    }
    @Test
    public void test1456() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        double double9238 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9238, 0.0);
        double double2871 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double2871, 1.7278745);
    }
    @Test
    public void test1457() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        boolean boolean6853 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean6853, false);
        boolean boolean9412 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9412, true);
        double double4789 = calculadora792.somaDouble(10.953, 105.5);
        Assertions.assertEquals(double4789, 116.453);
        boolean boolean2655 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean2655, false);
    }
    @Test
    public void test1458() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean4097 = calculadora792.menor(-500, 500);
        Assertions.assertEquals(boolean4097, true);
        boolean boolean4248 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean4248, true);
    }
    @Test
    public void test1460() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string4626 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string4626, "top");
        double double7911 = calculadora792.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double7911, -0.8525000000000001);
        double double8263 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double8263, 107.05);
    }
    @Test
    public void test1462() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        java.lang.String string5315 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5315, "valeu");
        double double4243 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4243, -107.05);
        int int2115 = calculadora792.subInt(-1000, 100);
        Assertions.assertEquals(int2115, -1100);
        boolean boolean3018 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean3018, false);
    }
    @Test
    public void test1464() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1059 = calculadora792.somaInt(0, 500);
        Assertions.assertEquals(int1059, 500);
    }
    @Test
    public void test1465() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double6204 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double6204, -0.0);
        double double2246 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2246, 3.14159);
        double double5598 = calculadora792.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double5598, 1.0945);
        boolean boolean6102 = calculadora792.maior(-500, -250);
        Assertions.assertEquals(boolean6102, false);
        int int2171 = calculadora792.subInt(1000, 250);
        Assertions.assertEquals(int2171, 750);
    }
    @Test
    public void test1466() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        int int194 = calculadora792.somaInt(250, -500);
        Assertions.assertEquals(int194, -250);
        boolean boolean8526 = calculadora792.menor(1000, -500);
        Assertions.assertEquals(boolean8526, false);
    }
    @Test
    public void test1467() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        int int2500 = calculadora792.divInt(0, 250);
        Assertions.assertEquals(int2500, 0);
        boolean boolean3738 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3738, true);
        double double5082 = calculadora792.subDouble(-10.953, -1.55);
        Assertions.assertEquals(double5082, -9.402999999999999);
    }
    @Test
    public void test1468() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int8856 = calculadora792.mulInt(0, 250);
        Assertions.assertEquals(int8856, 0);
    }
    @Test
    public void test1469() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        java.lang.String string2238 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string2238, "NICE");
        double double5947 = calculadora792.somaDouble(3.14159, -1.55);
        Assertions.assertEquals(double5947, 1.5915899999999998);
    }
    @Test
    public void test1470() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double123 = calculadora792.subDouble(10.953, 105.5);
        Assertions.assertEquals(double123, -94.547);
    }
    @Test
    public void test1471() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3896 = calculadora792.subInt(-1000, 0);
        Assertions.assertEquals(int3896, -1000);
        boolean boolean8425 = calculadora792.maior(250, 100);
        Assertions.assertEquals(boolean8425, true);
    }
    @Test
    public void test1472() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        boolean boolean4321 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4321, false);
        double double9731 = calculadora792.subDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9731, -4.69159);
    }
    @Test
    public void test1473() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean6372 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6372, true);
        double double1857 = calculadora792.divDouble(10.953, 105.5);
        Assertions.assertEquals(double1857, 0.10381990521327014);
        boolean boolean4153 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean4153, true);
    }
    @Test
    public void test1475() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
        int int9292 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int9292, 0);
        boolean boolean3336 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3336, true);
    }
    @Test
    public void test1476() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int1462 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int1462, 500000);
        double double1625 = calculadora792.divDouble(10.953, 3.14159);
        Assertions.assertEquals(double1625, 3.4864511282503443);
    }
    @Test
    public void test1477() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        int int194 = calculadora792.somaInt(250, -500);
        Assertions.assertEquals(int194, -250);
        boolean boolean8526 = calculadora792.menor(1000, -500);
        Assertions.assertEquals(boolean8526, false);
        int int1010 = calculadora792.somaInt(0, -250);
        Assertions.assertEquals(int1010, -250);
    }
    @Test
    public void test1478() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double9802 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9802, -4.8694645);
        double double4473 = calculadora792.mulDouble(-10.953, 0.55);
        Assertions.assertEquals(double4473, -6.024150000000001);
        boolean boolean3895 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3895, true);
        int int9378 = calculadora792.subInt(-1000, -100);
        Assertions.assertEquals(int9378, -900);
    }
    @Test
    public void test1480() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double2584 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double2584, -1.55);
        boolean boolean3321 = calculadora792.menor(-1000, 1000);
        Assertions.assertEquals(boolean3321, true);
        boolean boolean9920 = calculadora792.and(boolean916, true);
        Assertions.assertEquals(boolean9920, false);
    }
    @Test
    public void test1482() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        java.lang.String string5315 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5315, "valeu");
        double double4243 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4243, -107.05);
        int int6276 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int6276, 10000);
    }
    @Test
    public void test1484() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        boolean boolean3355 = calculadora792.or(false, boolean8907);
        Assertions.assertEquals(boolean3355, false);
        boolean boolean6696 = calculadora792.menor(-250, 0);
        Assertions.assertEquals(boolean6696, true);
    }
    @Test
    public void test1485() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean1409 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1409, false);
    }
    @Test
    public void test1486() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        java.lang.String string5988 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string5988, "go");
        boolean boolean6192 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6192, true);
        int int7286 = calculadora792.subInt(-1000, -500);
        Assertions.assertEquals(int7286, -500);
    }
    @Test
    public void test1487() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int45 = calculadora792.divInt(-100, -250);
        Assertions.assertEquals(int45, 0);
        java.lang.String string4977 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string4977, "lorem");
    }
    @Test
    public void test1488() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2061 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2061, "VALEU");
        double double9880 = calculadora792.somaDouble(-1.55, -10.953);
        Assertions.assertEquals(double9880, -12.503);
        double double7030 = calculadora792.somaDouble(10.953, 0.0);
        Assertions.assertEquals(double7030, 10.953);
        boolean boolean6387 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6387, true);
    }
    @Test
    public void test1489() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int6089 = calculadora792.divInt(0, 500);
        Assertions.assertEquals(int6089, 0);
        boolean boolean8084 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean8084, true);
        int int5553 = calculadora792.subInt(100, -1000);
        Assertions.assertEquals(int5553, 1100);
        int int2662 = calculadora792.mulInt(500, 250);
        Assertions.assertEquals(int2662, 125000);
        double double8437 = calculadora792.divDouble(3.14159, 10.953);
        Assertions.assertEquals(double8437, 0.2868246142609331);
    }
    @Test
    public void test1490() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        int int5015 = calculadora792.somaInt(-1000, 250);
        Assertions.assertEquals(int5015, -750);
        boolean boolean8833 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean8833, true);
    }
    @Test
    public void test1491() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        java.lang.String string3796 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3796, "nice");
        double double5550 = calculadora792.somaDouble(-1.55, 105.5);
        Assertions.assertEquals(double5550, 103.95);
    }
    @Test
    public void test1492() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        java.lang.String string4372 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4372, "GO");
        int int9899 = calculadora792.divInt(-1000, 1000);
        Assertions.assertEquals(int9899, -1);
        boolean boolean9307 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9307, true);
    }
    @Test
    public void test1493() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        boolean boolean8523 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8523, true);
        java.lang.String string77 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string77, "HELLO");
    }
    @Test
    public void test1496() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        int int522 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int522, 125000);
    }
    @Test
    public void test1497() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
        double double1965 = calculadora792.mulDouble(-1.55, 0.55);
        Assertions.assertEquals(double1965, -0.8525000000000001);
        java.lang.String string2811 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2811, "ipsum");
    }
    @Test
    public void test1498() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        boolean boolean5642 = calculadora792.menor(0, -250);
        Assertions.assertEquals(boolean5642, false);
        int int1529 = calculadora792.subInt(250, 1000);
        Assertions.assertEquals(int1529, -750);
        double double7903 = calculadora792.divDouble(105.5, 105.5);
        Assertions.assertEquals(double7903, 1.0);
    }
    @Test
    public void test1499() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        int int4170 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int4170, -1100);
        double double6721 = calculadora792.subDouble(-1.55, -1.55);
        Assertions.assertEquals(double6721, 0.0);
    }
    @Test
    public void test1500() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        int int6258 = calculadora792.mulInt(500, 1000);
        Assertions.assertEquals(int6258, 500000);
        java.lang.String string3708 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string3708, "lorem");
    }
    @Test
    public void test1502() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        java.lang.String string3279 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3279, "NICE");
        int int5004 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int5004, -600);
        int int8410 = calculadora792.mulInt(-100, 250);
        Assertions.assertEquals(int8410, -25000);
        java.lang.String string6478 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string6478, "valeu");
    }
    @Test
    public void test1503() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
        java.lang.String string442 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string442, "lorem");
        boolean boolean231 = calculadora792.maior(250, 500);
        Assertions.assertEquals(boolean231, false);
    }
    @Test
    public void test1504() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double5263 = calculadora792.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double5263, 1.7278745);
        java.lang.String string5089 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5089, "lorem");
        int int8988 = calculadora792.divInt(-500, -500);
        Assertions.assertEquals(int8988, 1);
    }
    @Test
    public void test1505() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        boolean boolean4157 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean4157, false);
        boolean boolean3204 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean3204, false);
        java.lang.String string9393 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string9393, "VALEU");
        boolean boolean9872 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9872, false);
        double double4439 = calculadora792.mulDouble(-105.5, 105.5);
        Assertions.assertEquals(double4439, -11130.25);
    }
    @Test
    public void test1506() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        java.lang.String string5613 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5613, "HELLO");
        double double7953 = calculadora792.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double7953, -102.35841);
    }
    @Test
    public void test1508() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        java.lang.String string5092 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string5092, "LOREM");
        boolean boolean4625 = calculadora792.maior(-250, 0);
        Assertions.assertEquals(boolean4625, false);
        java.lang.String string4742 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string4742, "IPSUM");
    }
    @Test
    public void test1509() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        boolean boolean2893 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2893, true);
        double double9726 = calculadora792.subDouble(0.55, 0.0);
        Assertions.assertEquals(double9726, 0.55);
        java.lang.String string4374 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4374, "GO");
        boolean boolean2158 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2158, true);
        java.lang.String string2964 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string2964, "hello");
    }
    @Test
    public void test1510() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        java.lang.String string4501 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string4501, "TOP");
        double double9893 = calculadora792.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double9893, -58.025000000000006);
    }
    @Test
    public void test1511() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        double double1008 = calculadora792.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double1008, -1.0);
        int int5189 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int5189, 0);
        double double157 = calculadora792.subDouble(105.5, 1.99);
        Assertions.assertEquals(double157, 103.51);
    }
    @Test
    public void test1513() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        java.lang.String string6502 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string6502, "HELLO");
        int int6992 = calculadora792.subInt(-1000, -500);
        Assertions.assertEquals(int6992, -500);
        int int844 = calculadora792.subInt(0, 500);
        Assertions.assertEquals(int844, -500);
    }
    @Test
    public void test1514() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        boolean boolean494 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean494, false);
        java.lang.String string3697 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string3697, "hello");
    }
    @Test
    public void test1517() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        java.lang.String string3827 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3827, "IPSUM");
        java.lang.String string2686 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string2686, "IPSUM");
        boolean boolean6758 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6758, true);
        int int4331 = calculadora792.somaInt(100, 500);
        Assertions.assertEquals(int4331, 600);
    }
    @Test
    public void test1518() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        double double369 = calculadora792.divDouble(0.0, 105.5);
        Assertions.assertEquals(double369, 0.0);
        boolean boolean7056 = calculadora792.maior(-500, -250);
        Assertions.assertEquals(boolean7056, false);
    }
    @Test
    public void test1519() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        boolean boolean9246 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean9246, false);
        boolean boolean472 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean472, true);
    }
    @Test
    public void test1520() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean4468 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean4468, true);
        double double4304 = calculadora792.somaDouble(-105.5, -105.5);
        Assertions.assertEquals(double4304, -211.0);
    }
    @Test
    public void test1523() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        boolean boolean9747 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean9747, false);
    }
    @Test
    public void test1524() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        int int5449 = calculadora792.mulInt(250, -500);
        Assertions.assertEquals(int5449, -125000);
        double double9141 = calculadora792.somaDouble(105.5, 10.953);
        Assertions.assertEquals(double9141, 116.453);
        boolean boolean6848 = calculadora792.maior(-100, 250);
        Assertions.assertEquals(boolean6848, false);
    }
    @Test
    public void test1526() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        boolean boolean8809 = calculadora792.maior(100, -1000);
        Assertions.assertEquals(boolean8809, true);
    }
    @Test
    public void test1529() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double157 = calculadora792.divDouble(105.5, -1.55);
        Assertions.assertEquals(double157, -68.06451612903226);
        int int9240 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int9240, -250000);
        boolean boolean2931 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2931, true);
    }
    @Test
    public void test1530() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double7431 = calculadora792.somaDouble(0.55, 10.953);
        Assertions.assertEquals(double7431, 11.503);
        double double7098 = calculadora792.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double7098, 4.69159);
        double double7914 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7914, 0.55);
        java.lang.String string9254 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string9254, "LOREM");
    }
    @Test
    public void test1532() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string3675 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string3675, "lorem");
        boolean boolean9689 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean9689, false);
        int int5318 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int5318, 150);
    }
    @Test
    public void test1533() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        boolean boolean4382 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean4382, false);
    }
    @Test
    public void test1534() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8229 = calculadora792.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double8229, 7.066451612903225);
        boolean boolean1792 = calculadora792.maior(-500, -250);
        Assertions.assertEquals(boolean1792, false);
        boolean boolean7197 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean7197, false);
    }
    @Test
    public void test1537() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean615 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean615, false);
        int int819 = calculadora792.somaInt(0, -250);
        Assertions.assertEquals(int819, -250);
        boolean boolean3223 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3223, true);
    }
    @Test
    public void test1539() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        boolean boolean4779 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4779, false);
    }
    @Test
    public void test1540() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
        boolean boolean5444 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5444, false);
        boolean boolean5541 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5541, true);
        double double5040 = calculadora792.somaDouble(1.99, 0.0);
        Assertions.assertEquals(double5040, 1.99);
    }
    @Test
    public void test1542() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        int int5237 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int5237, 0);
        boolean boolean7786 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean7786, false);
        boolean boolean1595 = calculadora792.and(false, boolean7494);
        Assertions.assertEquals(boolean1595, false);
    }
    @Test
    public void test1543() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean8759 = calculadora792.menor(250, -1000);
        Assertions.assertEquals(boolean8759, false);
        boolean boolean3840 = calculadora792.menor(0, -500);
        Assertions.assertEquals(boolean3840, false);
    }
    @Test
    public void test1544() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        int int5554 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int5554, 0);
    }
    @Test
    public void test1545() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        int int4170 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int4170, -1100);
        int int8733 = calculadora792.mulInt(-250, 0);
        Assertions.assertEquals(int8733, 0);
        double double8056 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double8056, 9.632064274627956);
        int int3798 = calculadora792.mulInt(-1000, 250);
        Assertions.assertEquals(int3798, -250000);
    }
    @Test
    public void test1546() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        double double4235 = calculadora792.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double4235, 0.6334372085472643);
    }
    @Test
    public void test1547() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean8498 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean8498, false);
        int int9866 = calculadora792.divInt(-250, -250);
        Assertions.assertEquals(int9866, 1);
        double double3759 = calculadora792.mulDouble(105.5, 105.5);
        Assertions.assertEquals(double3759, 11130.25);
        java.lang.String string9966 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string9966, "GO");
    }
    @Test
    public void test1548() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean5909 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5909, true);
        double double4769 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double4769, 58.025000000000006);
        double double4490 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double4490, 108.64159);
    }
    @Test
    public void test1549() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        boolean boolean9874 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean9874, false);
        boolean boolean5086 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean5086, true);
        boolean boolean5568 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean5568, true);
        double double575 = calculadora792.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double575, -14.09459);
        boolean boolean9267 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean9267, true);
    }
    @Test
    public void test1551() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        java.lang.String string3796 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3796, "nice");
        int int126 = calculadora792.mulInt(0, 250);
        Assertions.assertEquals(int126, 0);
    }
    @Test
    public void test1552() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        java.lang.String string812 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string812, "hello");
        boolean boolean3345 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3345, true);
        java.lang.String string3630 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string3630, "HI");
    }
    @Test
    public void test1553() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        double double1870 = calculadora792.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double1870, 0.014691943127962086);
        double double6911 = calculadora792.somaDouble(0.55, 1.99);
        Assertions.assertEquals(double6911, 2.54);
    }
    @Test
    public void test1554() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double492 = calculadora792.divDouble(0.55, 0.55);
        Assertions.assertEquals(double492, 1.0);
    }
    @Test
    public void test1556() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean6372 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6372, true);
        int int1027 = calculadora792.subInt(-100, 500);
        Assertions.assertEquals(int1027, -600);
    }
    @Test
    public void test1557() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        java.lang.String string812 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string812, "hello");
        boolean boolean3345 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3345, true);
        double double8309 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double8309, -1155.5415);
        double double7407 = calculadora792.somaDouble(3.14159, -1.55);
        Assertions.assertEquals(double7407, 1.5915899999999998);
        double double5231 = calculadora792.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double5231, 163.525);
    }
    @Test
    public void test1558() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int8548 = calculadora792.somaInt(-100, -500);
        Assertions.assertEquals(int8548, -600);
        java.lang.String string9415 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string9415, "HELLO");
    }
    @Test
    public void test1559() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        double double1099 = calculadora792.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double1099, -1.0);
        int int246 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int246, 10000);
        java.lang.String string7633 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string7633, "GO");
    }
    @Test
    public void test1563() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        boolean boolean6352 = calculadora792.or(false, boolean2390);
        Assertions.assertEquals(boolean6352, false);
        double double827 = calculadora792.divDouble(0.55, -105.5);
        Assertions.assertEquals(double827, -0.005213270142180095);
    }
    @Test
    public void test1566() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean6333 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6333, false);
        int int8783 = calculadora792.divInt(100, 1000);
        Assertions.assertEquals(int8783, 0);
        boolean boolean8260 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean8260, false);
    }
    @Test
    public void test1567() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        double double6815 = calculadora792.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double6815, -58.025000000000006);
        int int4485 = calculadora792.divInt(-500, -100);
        Assertions.assertEquals(int4485, 5);
        double double5979 = calculadora792.divDouble(10.953, 3.14159);
        Assertions.assertEquals(double5979, 3.4864511282503443);
        boolean boolean1556 = calculadora792.menor(-250, -500);
        Assertions.assertEquals(boolean1556, false);
    }
    @Test
    public void test1568() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double5263 = calculadora792.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double5263, 1.7278745);
        java.lang.String string5089 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5089, "lorem");
        int int8988 = calculadora792.divInt(-500, -500);
        Assertions.assertEquals(int8988, 1);
        boolean boolean9914 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9914, true);
    }
    @Test
    public void test1570() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double2088 = calculadora792.subDouble(1.99, 1.99);
        Assertions.assertEquals(double2088, 0.0);
        double double4862 = calculadora792.subDouble(0.0, 3.14159);
        Assertions.assertEquals(double4862, -3.14159);
        boolean boolean3659 = calculadora792.menor(1000, 500);
        Assertions.assertEquals(boolean3659, false);
    }
    @Test
    public void test1572() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean5835 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5835, false);
        boolean boolean4172 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean4172, true);
    }
    @Test
    public void test1574() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        int int2949 = calculadora792.mulInt(-500, 250);
        Assertions.assertEquals(int2949, -125000);
        java.lang.String string729 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string729, "LOREM");
    }
    @Test
    public void test1575() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean4116 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4116, false);
        boolean boolean9281 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean9281, true);
        double double9640 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double9640, 34.409835269999995);
        boolean boolean4911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean4911, true);
    }
    @Test
    public void test1576() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        int int5554 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int5554, 0);
        java.lang.String string5692 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string5692, "ipsum");
    }
    @Test
    public void test1577() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double2978 = calculadora792.mulDouble(0.0, 0.55);
        Assertions.assertEquals(double2978, 0.0);
        java.lang.String string9359 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string9359, "go");
    }
    @Test
    public void test1578() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean6333 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6333, false);
        java.lang.String string4646 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string4646, "IPSUM");
    }
    @Test
    public void test1579() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean8759 = calculadora792.menor(250, -1000);
        Assertions.assertEquals(boolean8759, false);
        boolean boolean9017 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9017, true);
    }
    @Test
    public void test1580() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        boolean boolean3280 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean3280, false);
        boolean boolean1865 = calculadora792.maior(-500, -1000);
        Assertions.assertEquals(boolean1865, true);
    }
    @Test
    public void test1581() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        java.lang.String string5613 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5613, "HELLO");
        boolean boolean9034 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9034, true);
        boolean boolean9761 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9761, true);
        java.lang.String string5123 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string5123, "top");
        int int3064 = calculadora792.somaInt(-1000, 250);
        Assertions.assertEquals(int3064, -750);
    }
    @Test
    public void test1582() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean615 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean615, false);
        int int819 = calculadora792.somaInt(0, -250);
        Assertions.assertEquals(int819, -250);
        double double8114 = calculadora792.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double8114, 119.96820899999999);
    }
    @Test
    public void test1583() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double7431 = calculadora792.somaDouble(0.55, 10.953);
        Assertions.assertEquals(double7431, 11.503);
        double double1437 = calculadora792.somaDouble(10.953, 0.0);
        Assertions.assertEquals(double1437, 10.953);
    }
    @Test
    public void test1584() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int3464 = calculadora792.divInt(-1000, 100);
        Assertions.assertEquals(int3464, -10);
        int int4984 = calculadora792.subInt(-100, -500);
        Assertions.assertEquals(int4984, 400);
    }
    @Test
    public void test1585() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean716 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean716, false);
        boolean boolean6148 = calculadora792.and(boolean6342, true);
        Assertions.assertEquals(boolean6148, false);
        boolean boolean3580 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3580, false);
    }
    @Test
    public void test1587() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
        java.lang.String string6530 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6530, "LOREM");
        int int6694 = calculadora792.subInt(0, -1000);
        Assertions.assertEquals(int6694, 1000);
    }
    @Test
    public void test1588() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int1934 = calculadora792.subInt(-250, 250);
        Assertions.assertEquals(int1934, -500);
        double double6203 = calculadora792.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double6203, -14.09459);
        int int7426 = calculadora792.mulInt(0, 1000);
        Assertions.assertEquals(int7426, 0);
        boolean boolean5009 = calculadora792.and(boolean3308, true);
        Assertions.assertEquals(boolean5009, false);
    }
    @Test
    public void test1589() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string3675 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string3675, "lorem");
        boolean boolean9689 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean9689, false);
        boolean boolean9222 = calculadora792.menor(500, -250);
        Assertions.assertEquals(boolean9222, false);
    }
    @Test
    public void test1590() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        int int3094 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int3094, 0);
        int int6063 = calculadora792.mulInt(-250, 1000);
        Assertions.assertEquals(int6063, -250000);
    }
    @Test
    public void test1591() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double157 = calculadora792.divDouble(105.5, -1.55);
        Assertions.assertEquals(double157, -68.06451612903226);
        double double4464 = calculadora792.divDouble(-105.5, 0.55);
        Assertions.assertEquals(double4464, -191.8181818181818);
    }
    @Test
    public void test1592() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double3536 = calculadora792.divDouble(-1.55, 3.14159);
        Assertions.assertEquals(double3536, -0.4933807403257586);
    }
    @Test
    public void test1593() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        int int1042 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int1042, 0);
    }
    @Test
    public void test1595() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean2904 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2904, true);
    }
    @Test
    public void test1596() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        boolean boolean7219 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean7219, true);
        double double4967 = calculadora792.somaDouble(0.0, 1.99);
        Assertions.assertEquals(double4967, 1.99);
        double double3300 = calculadora792.divDouble(-105.5, -105.5);
        Assertions.assertEquals(double3300, 1.0);
        java.lang.String string7715 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string7715, "ipsum");
        boolean boolean9915 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean9915, false);
    }
    @Test
    public void test1597() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
        boolean boolean5817 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean5817, true);
        int int3857 = calculadora792.somaInt(-100, -100);
        Assertions.assertEquals(int3857, -200);
    }
    @Test
    public void test1599() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string3675 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string3675, "lorem");
        java.lang.String string7556 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string7556, "hi");
    }
    @Test
    public void test1600() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        boolean boolean1166 = calculadora792.menor(1000, 500);
        Assertions.assertEquals(boolean1166, false);
        double double8990 = calculadora792.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double8990, -104.95);
    }
    @Test
    public void test1601() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        boolean boolean4157 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean4157, false);
        boolean boolean3204 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean3204, false);
        java.lang.String string9393 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string9393, "VALEU");
        boolean boolean9872 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9872, false);
        boolean boolean4683 = calculadora792.maior(250, 100);
        Assertions.assertEquals(boolean4683, true);
    }
    @Test
    public void test1602() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        double double6718 = calculadora792.divDouble(-1.55, 105.5);
        Assertions.assertEquals(double6718, -0.014691943127962086);
    }
    @Test
    public void test1603() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        int int1455 = calculadora792.divInt(100, -500);
        Assertions.assertEquals(int1455, 0);
    }
    @Test
    public void test1604() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean4116 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4116, false);
        boolean boolean9281 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean9281, true);
        boolean boolean9454 = calculadora792.maior(500, -100);
        Assertions.assertEquals(boolean9454, true);
    }
    @Test
    public void test1606() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean3047 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3047, true);
        int int2012 = calculadora792.divInt(-500, -1000);
        Assertions.assertEquals(int2012, 0);
    }
    @Test
    public void test1608() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
        boolean boolean9153 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9153, true);
    }
    @Test
    public void test1609() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double7418 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double7418, -105.5);
        double double2720 = calculadora792.somaDouble(10.953, 0.55);
        Assertions.assertEquals(double2720, 11.503);
    }
    @Test
    public void test1610() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        java.lang.String string9756 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9756, "hello");
        int int1917 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int1917, 125000);
        java.lang.String string1969 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string1969, "HELLO");
    }
    @Test
    public void test1612() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double6204 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double6204, -0.0);
        boolean boolean7226 = calculadora792.maior(1000, 100);
        Assertions.assertEquals(boolean7226, true);
    }
    @Test
    public void test1613() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        boolean boolean7219 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean7219, true);
        boolean boolean3493 = calculadora792.or(boolean7219, true);
        Assertions.assertEquals(boolean3493, true);
        int int9119 = calculadora792.somaInt(1000, -500);
        Assertions.assertEquals(int9119, 500);
    }
    @Test
    public void test1614() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean4468 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean4468, true);
        java.lang.String string9420 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string9420, "top");
        double double3840 = calculadora792.divDouble(-105.5, 1.99);
        Assertions.assertEquals(double3840, -53.015075376884425);
    }
    @Test
    public void test1615() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        int int2024 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int2024, -25000);
        double double1927 = calculadora792.divDouble(-105.5, -1.55);
        Assertions.assertEquals(double1927, 68.06451612903226);
        java.lang.String string9572 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string9572, "LOREM");
        double double815 = calculadora792.divDouble(-105.5, 1.99);
        Assertions.assertEquals(double815, -53.015075376884425);
    }
    @Test
    public void test1616() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean2692 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean2692, false);
        java.lang.String string4284 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string4284, "HELLO");
    }
    @Test
    public void test1618() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
        boolean boolean6417 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean6417, false);
        double double2611 = calculadora792.mulDouble(3.14159, 3.14159);
        Assertions.assertEquals(double2611, 9.869587728099999);
    }
    @Test
    public void test1619() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        int int572 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int572, 0);
        java.lang.String string8646 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string8646, "valeu");
    }
    @Test
    public void test1621() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean6106 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean6106, false);
        double double4219 = calculadora792.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double4219, -0.0);
    }
    @Test
    public void test1622() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string6959 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string6959, "TOP");
    }
    @Test
    public void test1623() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
        java.lang.String string442 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string442, "lorem");
        boolean boolean231 = calculadora792.maior(250, 500);
        Assertions.assertEquals(boolean231, false);
        boolean boolean7118 = calculadora792.menor(1000, 100);
        Assertions.assertEquals(boolean7118, false);
    }
    @Test
    public void test1624() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        java.lang.String string5530 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string5530, "TOP");
        int int1912 = calculadora792.divInt(250, 500);
        Assertions.assertEquals(int1912, 0);
        int int271 = calculadora792.somaInt(250, 0);
        Assertions.assertEquals(int271, 250);
    }
    @Test
    public void test1625() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
        boolean boolean6417 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean6417, false);
        double double2611 = calculadora792.mulDouble(3.14159, 3.14159);
        Assertions.assertEquals(double2611, 9.869587728099999);
        double double4414 = calculadora792.divDouble(3.14159, 10.953);
        Assertions.assertEquals(double4414, 0.2868246142609331);
    }
    @Test
    public void test1626() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        double double7882 = calculadora792.divDouble(0.0, -10.953);
        Assertions.assertEquals(double7882, -0.0);
        java.lang.String string4828 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string4828, "LOREM");
    }
    @Test
    public void test1627() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        double double3673 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double3673, 94.547);
        int int9228 = calculadora792.mulInt(500, -500);
        Assertions.assertEquals(int9228, -250000);
        double double7008 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double7008, -116.453);
    }
    @Test
    public void test1628() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double5081 = calculadora792.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double5081, 0.014691943127962086);
        java.lang.String string5827 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string5827, "TOP");
        int int1147 = calculadora792.mulInt(500, 0);
        Assertions.assertEquals(int1147, 0);
    }
    @Test
    public void test1629() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean195 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean195, false);
        java.lang.String string9542 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string9542, "VALEU");
        double double2370 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double2370, -105.5);
        java.lang.String string5297 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5297, "HELLO");
    }
    @Test
    public void test1631() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        boolean boolean7767 = calculadora792.maior(100, 100);
        Assertions.assertEquals(boolean7767, false);
    }
    @Test
    public void test1632() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        boolean boolean7543 = calculadora792.menor(1000, -500);
        Assertions.assertEquals(boolean7543, false);
    }
    @Test
    public void test1633() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        double double1658 = calculadora792.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double1658, 1155.5415);
        java.lang.String string4172 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string4172, "IPSUM");
        boolean boolean862 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean862, false);
    }
    @Test
    public void test1635() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        java.lang.String string6167 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string6167, "NICE");
        boolean boolean9680 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9680, true);
    }
    @Test
    public void test1636() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        int int5463 = calculadora792.divInt(500, 1000);
        Assertions.assertEquals(int5463, 0);
        java.lang.String string2721 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string2721, "TOP");
    }
    @Test
    public void test1637() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9528 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double9528, 0.0);
        double double8971 = calculadora792.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double8971, -0.0);
    }
    @Test
    public void test1638() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1059 = calculadora792.somaInt(0, 500);
        Assertions.assertEquals(int1059, 500);
        boolean boolean3088 = calculadora792.maior(100, -500);
        Assertions.assertEquals(boolean3088, true);
    }
    @Test
    public void test1639() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        int int4175 = calculadora792.somaInt(1000, 500);
        Assertions.assertEquals(int4175, 1500);
    }
    @Test
    public void test1640() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double7427 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double7427, 108.64159);
        boolean boolean7441 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean7441, true);
        java.lang.String string3094 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3094, "NICE");
    }
    @Test
    public void test1642() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int1429 = calculadora792.mulInt(1000, 250);
        Assertions.assertEquals(int1429, 250000);
        double double3017 = calculadora792.subDouble(105.5, 0.55);
        Assertions.assertEquals(double3017, 104.95);
    }
    @Test
    public void test1643() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        java.lang.String string5613 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5613, "HELLO");
        boolean boolean9034 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9034, true);
        boolean boolean9761 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9761, true);
        double double9293 = calculadora792.somaDouble(0.0, 10.953);
        Assertions.assertEquals(double9293, 10.953);
    }
    @Test
    public void test1644() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double7961 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double7961, 0.1750705852768821);
    }
    @Test
    public void test1646() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean6333 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6333, false);
        int int8783 = calculadora792.divInt(100, 1000);
        Assertions.assertEquals(int8783, 0);
        double double3646 = calculadora792.somaDouble(3.14159, 0.55);
        Assertions.assertEquals(double3646, 3.6915899999999997);
    }
    @Test
    public void test1647() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean5909 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5909, true);
        boolean boolean4302 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean4302, true);
    }
    @Test
    public void test1650() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        java.lang.String string8457 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string8457, "LOREM");
    }
    @Test
    public void test1651() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        boolean boolean4202 = calculadora792.or(boolean6240, true);
        Assertions.assertEquals(boolean4202, true);
        boolean boolean1980 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1980, false);
    }
    @Test
    public void test1652() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int1535 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int1535, 0);
        double double1315 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double1315, 0.0);
    }
    @Test
    public void test1653() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        int int5237 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int5237, 0);
        int int465 = calculadora792.divInt(1000, 1000);
        Assertions.assertEquals(int465, 1);
        boolean boolean6896 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean6896, false);
    }
    @Test
    public void test1654() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2061 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2061, "VALEU");
        boolean boolean7606 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean7606, true);
    }
    @Test
    public void test1655() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean6106 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean6106, false);
        java.lang.String string6624 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6624, "lorem");
    }
    @Test
    public void test1656() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        boolean boolean4013 = calculadora792.menor(100, -100);
        Assertions.assertEquals(boolean4013, false);
    }
    @Test
    public void test1657() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        boolean boolean7543 = calculadora792.menor(1000, -500);
        Assertions.assertEquals(boolean7543, false);
        double double9060 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double9060, -331.437745);
    }
    @Test
    public void test1659() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double2584 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double2584, -1.55);
        double double1922 = calculadora792.mulDouble(105.5, 3.14159);
        Assertions.assertEquals(double1922, 331.437745);
        boolean boolean3800 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean3800, false);
    }
    @Test
    public void test1660() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        java.lang.String string6335 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string6335, "valeu");
        boolean boolean1154 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1154, false);
        int int521 = calculadora792.divInt(500, 100);
        Assertions.assertEquals(int521, 5);
    }
    @Test
    public void test1661() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        boolean boolean9262 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9262, false);
        int int2354 = calculadora792.somaInt(-500, 500);
        Assertions.assertEquals(int2354, 0);
        double double8643 = calculadora792.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double8643, 1.15159);
    }
    @Test
    public void test1662() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        double double6000 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double6000, 94.547);
        boolean boolean8880 = calculadora792.maior(100, 1000);
        Assertions.assertEquals(boolean8880, false);
    }
    @Test
    public void test1663() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean7229 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean7229, true);
        double double4865 = calculadora792.mulDouble(105.5, 0.55);
        Assertions.assertEquals(double4865, 58.025000000000006);
        boolean boolean5735 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean5735, true);
    }
    @Test
    public void test1664() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int4743 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4743, 62500);
        boolean boolean6507 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean6507, true);
        java.lang.String string3307 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string3307, "go");
        int int2150 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int2150, 0);
    }
    @Test
    public void test1665() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        boolean boolean7543 = calculadora792.menor(1000, -500);
        Assertions.assertEquals(boolean7543, false);
        double double9060 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double9060, -331.437745);
        java.lang.String string2584 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string2584, "HELLO");
    }
    @Test
    public void test1666() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        java.lang.String string4372 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4372, "GO");
        int int9899 = calculadora792.divInt(-1000, 1000);
        Assertions.assertEquals(int9899, -1);
        int int148 = calculadora792.subInt(500, 250);
        Assertions.assertEquals(int148, 250);
        boolean boolean4707 = calculadora792.and(false, boolean5875);
        Assertions.assertEquals(boolean4707, false);
        boolean boolean5545 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean5545, false);
        int int8534 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int8534, 500000);
    }
    @Test
    public void test1668() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        double double1870 = calculadora792.divDouble(1.99, -1.55);
        Assertions.assertEquals(double1870, -1.2838709677419355);
    }
    @Test
    public void test1669() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        double double2427 = calculadora792.divDouble(105.5, -10.953);
        Assertions.assertEquals(double2427, -9.632064274627956);
        boolean boolean4044 = calculadora792.or(false, boolean6240);
        Assertions.assertEquals(boolean4044, false);
    }
    @Test
    public void test1670() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int1934 = calculadora792.subInt(-250, 250);
        Assertions.assertEquals(int1934, -500);
        double double6203 = calculadora792.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double6203, -14.09459);
        java.lang.String string4004 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string4004, "NICE");
    }
    @Test
    public void test1672() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        boolean boolean8889 = calculadora792.menor(100, -500);
        Assertions.assertEquals(boolean8889, false);
    }
    @Test
    public void test1673() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8229 = calculadora792.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double8229, 7.066451612903225);
        boolean boolean1792 = calculadora792.maior(-500, -250);
        Assertions.assertEquals(boolean1792, false);
        boolean boolean7197 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean7197, false);
        boolean boolean52 = calculadora792.maior(-100, -250);
        Assertions.assertEquals(boolean52, true);
    }
    @Test
    public void test1675() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3691 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int3691, -600);
        double double7327 = calculadora792.divDouble(0.0, 3.14159);
        Assertions.assertEquals(double7327, 0.0);
        int int6164 = calculadora792.somaInt(500, 250);
        Assertions.assertEquals(int6164, 750);
    }
    @Test
    public void test1676() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
        int int9292 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int9292, 0);
        boolean boolean3336 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3336, true);
        boolean boolean790 = calculadora792.menor(250, -250);
        Assertions.assertEquals(boolean790, false);
    }
    @Test
    public void test1677() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        java.lang.String string9756 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9756, "hello");
        boolean boolean5329 = calculadora792.maior(100, -500);
        Assertions.assertEquals(boolean5329, true);
    }
    @Test
    public void test1679() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
        double double4015 = calculadora792.subDouble(0.55, 1.99);
        Assertions.assertEquals(double4015, -1.44);
    }
    @Test
    public void test1680() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        int int5449 = calculadora792.mulInt(250, -500);
        Assertions.assertEquals(int5449, -125000);
        double double4912 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double4912, 3.14159);
        boolean boolean8020 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean8020, true);
    }
    @Test
    public void test1681() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        double double5931 = calculadora792.somaDouble(-105.5, 10.953);
        Assertions.assertEquals(double5931, -94.547);
        int int5803 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5803, 0);
    }
    @Test
    public void test1682() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        java.lang.String string5988 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string5988, "go");
        java.lang.String string8961 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string8961, "go");
        double double7675 = calculadora792.somaDouble(10.953, 10.953);
        Assertions.assertEquals(double7675, 21.906);
    }
    @Test
    public void test1683() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        int int3272 = calculadora792.mulInt(-500, 250);
        Assertions.assertEquals(int3272, -125000);
        java.lang.String string3250 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string3250, "HELLO");
    }
    @Test
    public void test1684() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int352 = calculadora792.subInt(100, -100);
        Assertions.assertEquals(int352, 200);
        boolean boolean4642 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean4642, true);
        boolean boolean6439 = calculadora792.maior(-1000, -500);
        Assertions.assertEquals(boolean6439, false);
        int int4855 = calculadora792.divInt(500, -250);
        Assertions.assertEquals(int4855, -2);
    }
    @Test
    public void test1685() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        double double6206 = calculadora792.subDouble(0.55, -10.953);
        Assertions.assertEquals(double6206, 11.503);
        boolean boolean8757 = calculadora792.menor(500, -250);
        Assertions.assertEquals(boolean8757, false);
    }
    @Test
    public void test1686() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        int int4630 = calculadora792.divInt(0, 100);
        Assertions.assertEquals(int4630, 0);
        int int4842 = calculadora792.divInt(250, 500);
        Assertions.assertEquals(int4842, 0);
    }
    @Test
    public void test1687() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        int int8067 = calculadora792.somaInt(-500, 100);
        Assertions.assertEquals(int8067, -400);
        boolean boolean5230 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5230, false);
    }
    @Test
    public void test1689() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int1621 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int1621, 600);
        int int9441 = calculadora792.mulInt(-1000, 1000);
        Assertions.assertEquals(int9441, -1000000);
        boolean boolean9503 = calculadora792.menor(250, -250);
        Assertions.assertEquals(boolean9503, false);
        int int6040 = calculadora792.somaInt(-250, -1000);
        Assertions.assertEquals(int6040, -1250);
        boolean boolean6305 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean6305, false);
    }
    @Test
    public void test1691() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        java.lang.String string3279 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3279, "NICE");
        int int5004 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int5004, -600);
        boolean boolean8972 = calculadora792.menor(-500, 250);
        Assertions.assertEquals(boolean8972, true);
    }
    @Test
    public void test1692() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        int int4630 = calculadora792.divInt(0, 100);
        Assertions.assertEquals(int4630, 0);
        int int5361 = calculadora792.divInt(-250, -1000);
        Assertions.assertEquals(int5361, 0);
    }
    @Test
    public void test1693() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        int int4630 = calculadora792.divInt(0, 100);
        Assertions.assertEquals(int4630, 0);
        int int3467 = calculadora792.subInt(500, -250);
        Assertions.assertEquals(int3467, 750);
    }
    @Test
    public void test1694() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean4116 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4116, false);
        boolean boolean9281 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean9281, true);
        boolean boolean9454 = calculadora792.maior(500, -100);
        Assertions.assertEquals(boolean9454, true);
        double double8818 = calculadora792.divDouble(-10.953, 3.14159);
        Assertions.assertEquals(double8818, -3.4864511282503443);
    }
    @Test
    public void test1695() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean615 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean615, false);
        int int819 = calculadora792.somaInt(0, -250);
        Assertions.assertEquals(int819, -250);
        boolean boolean3223 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3223, true);
        int int7238 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7238, 500000);
    }
    @Test
    public void test1696() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        java.lang.String string5988 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string5988, "go");
        boolean boolean6192 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6192, true);
        java.lang.String string9791 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string9791, "HELLO");
    }
    @Test
    public void test1697() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean7229 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean7229, true);
        int int717 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int717, 10000);
    }
    @Test
    public void test1699() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6518 = calculadora792.mulInt(-1000, 0);
        Assertions.assertEquals(int6518, 0);
        int int3231 = calculadora792.subInt(250, -100);
        Assertions.assertEquals(int3231, 350);
        double double2529 = calculadora792.subDouble(0.0, 0.55);
        Assertions.assertEquals(double2529, -0.55);
    }
    @Test
    public void test1700() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        double double9238 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9238, 0.0);
        double double2871 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double2871, 1.7278745);
        int int6387 = calculadora792.somaInt(100, -250);
        Assertions.assertEquals(int6387, -150);
    }
    @Test
    public void test1701() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        java.lang.String string2728 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string2728, "HELLO");
        java.lang.String string4356 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string4356, "TOP");
        int int1934 = calculadora792.subInt(-1000, -250);
        Assertions.assertEquals(int1934, -750);
        double double6667 = calculadora792.somaDouble(-1.55, 1.99);
        Assertions.assertEquals(double6667, 0.43999999999999995);
    }
    @Test
    public void test1702() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        boolean boolean4321 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4321, false);
        java.lang.String string222 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string222, "GO");
    }
    @Test
    public void test1703() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double2584 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double2584, -1.55);
        java.lang.String string4740 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string4740, "TOP");
    }
    @Test
    public void test1704() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int8773 = calculadora792.mulInt(100, -500);
        Assertions.assertEquals(int8773, -50000);
        java.lang.String string973 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string973, "hello");
    }
    @Test
    public void test1707() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        double double3232 = calculadora792.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double3232, -9.632064274627956);
        boolean boolean5734 = calculadora792.menor(-250, 250);
        Assertions.assertEquals(boolean5734, true);
        int int3230 = calculadora792.divInt(500, 100);
        Assertions.assertEquals(int3230, 5);
        double double6148 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double6148, 107.05);
    }
    @Test
    public void test1708() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1059 = calculadora792.somaInt(0, 500);
        Assertions.assertEquals(int1059, 500);
        double double6673 = calculadora792.somaDouble(-105.5, 10.953);
        Assertions.assertEquals(double6673, -94.547);
    }
    @Test
    public void test1709() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean615 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean615, false);
        int int3742 = calculadora792.subInt(0, -250);
        Assertions.assertEquals(int3742, 250);
        int int1582 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int1582, -1);
    }
    @Test
    public void test1713() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        boolean boolean3089 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean3089, false);
        int int977 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int977, -25000);
        double double3701 = calculadora792.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double3701, -9.632064274627956);
        double double8722 = calculadora792.somaDouble(-10.953, 1.99);
        Assertions.assertEquals(double8722, -8.963);
    }
    @Test
    public void test1714() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double3283 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double3283, 58.025000000000006);
    }
    @Test
    public void test1715() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        java.lang.String string9756 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9756, "hello");
        double double7906 = calculadora792.somaDouble(3.14159, -105.5);
        Assertions.assertEquals(double7906, -102.35841);
        java.lang.String string208 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string208, "nice");
    }
    @Test
    public void test1716() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        int int9292 = calculadora792.subInt(-100, 250);
        Assertions.assertEquals(int9292, -350);
    }
    @Test
    public void test1718() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean7027 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean7027, false);
        int int6623 = calculadora792.subInt(-1000, 100);
        Assertions.assertEquals(int6623, -1100);
    }
    @Test
    public void test1719() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        int int6258 = calculadora792.mulInt(500, 1000);
        Assertions.assertEquals(int6258, 500000);
        double double6609 = calculadora792.somaDouble(3.14159, 105.5);
        Assertions.assertEquals(double6609, 108.64159);
        boolean boolean5938 = calculadora792.maior(0, 250);
        Assertions.assertEquals(boolean5938, false);
        boolean boolean2909 = calculadora792.and(boolean382, boolean916);
        Assertions.assertEquals(boolean2909, false);
    }
    @Test
    public void test1720() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        java.lang.String string401 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string401, "HELLO");
        boolean boolean8108 = calculadora792.maior(-100, 250);
        Assertions.assertEquals(boolean8108, false);
        boolean boolean3573 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean3573, true);
    }
    @Test
    public void test1723() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean6106 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean6106, false);
        boolean boolean6422 = calculadora792.maior(100, 250);
        Assertions.assertEquals(boolean6422, false);
        java.lang.String string2254 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string2254, "lorem");
    }
    @Test
    public void test1724() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        double double4796 = calculadora792.subDouble(0.55, 0.55);
        Assertions.assertEquals(double4796, 0.0);
        boolean boolean7480 = calculadora792.or(boolean6240, false);
        Assertions.assertEquals(boolean7480, false);
    }
    @Test
    public void test1726() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5158 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5158, 500000);
        int int4464 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int4464, -100);
        boolean boolean5511 = calculadora792.menor(-100, 100);
        Assertions.assertEquals(boolean5511, true);
        boolean boolean6752 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6752, false);
    }
    @Test
    public void test1727() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        java.lang.String string6502 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string6502, "HELLO");
        int int6992 = calculadora792.subInt(-1000, -500);
        Assertions.assertEquals(int6992, -500);
        double double1565 = calculadora792.somaDouble(3.14159, 10.953);
        Assertions.assertEquals(double1565, 14.09459);
        java.lang.String string1690 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string1690, "lorem");
    }
    @Test
    public void test1728() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        java.lang.String string4501 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string4501, "TOP");
        boolean boolean4049 = calculadora792.maior(-250, -100);
        Assertions.assertEquals(boolean4049, false);
    }
    @Test
    public void test1730() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        boolean boolean3914 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3914, false);
        double double4985 = calculadora792.subDouble(0.0, 105.5);
        Assertions.assertEquals(double4985, -105.5);
    }
    @Test
    public void test1731() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double6355 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double6355, 0.1750705852768821);
        java.lang.String string6542 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string6542, "HELLO");
    }
    @Test
    public void test1732() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
        double double2837 = calculadora792.subDouble(0.55, 3.14159);
        Assertions.assertEquals(double2837, -2.59159);
        int int4118 = calculadora792.divInt(1000, 250);
        Assertions.assertEquals(int4118, 4);
        java.lang.String string5672 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string5672, "LOREM");
        int int4682 = calculadora792.somaInt(0, -250);
        Assertions.assertEquals(int4682, -250);
    }
    @Test
    public void test1733() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int835 = calculadora792.mulInt(-500, -500);
        Assertions.assertEquals(int835, 250000);
        java.lang.String string6312 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string6312, "go");
    }
    @Test
    public void test1734() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int1621 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int1621, 600);
        int int3929 = calculadora792.divInt(-100, 1000);
        Assertions.assertEquals(int3929, 0);
        boolean boolean7287 = calculadora792.menor(1000, 500);
        Assertions.assertEquals(boolean7287, false);
    }
    @Test
    public void test1735() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean6946 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean6946, false);
        int int4422 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int4422, 0);
        double double660 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double660, 0.2763819095477387);
    }
    @Test
    public void test1736() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        double double3561 = calculadora792.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double3561, 0.6334372085472643);
        double double4586 = calculadora792.subDouble(10.953, -10.953);
        Assertions.assertEquals(double4586, 21.906);
    }
    @Test
    public void test1737() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        boolean boolean3089 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean3089, false);
        int int977 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int977, -25000);
        double double3701 = calculadora792.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double3701, -9.632064274627956);
        double double8722 = calculadora792.somaDouble(-10.953, 1.99);
        Assertions.assertEquals(double8722, -8.963);
        int int6921 = calculadora792.subInt(-500, -100);
        Assertions.assertEquals(int6921, -400);
    }
    @Test
    public void test1738() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
        boolean boolean6417 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean6417, false);
        double double2611 = calculadora792.mulDouble(3.14159, 3.14159);
        Assertions.assertEquals(double2611, 9.869587728099999);
        boolean boolean2445 = calculadora792.menor(-250, 250);
        Assertions.assertEquals(boolean2445, true);
    }
    @Test
    public void test1739() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        double double6000 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double6000, 94.547);
        boolean boolean8880 = calculadora792.maior(100, 1000);
        Assertions.assertEquals(boolean8880, false);
        double double8182 = calculadora792.subDouble(-1.55, 0.0);
        Assertions.assertEquals(double8182, -1.55);
    }
    @Test
    public void test1740() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        java.lang.String string5583 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string5583, "GO");
        boolean boolean1693 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean1693, false);
        java.lang.String string671 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string671, "hi");
    }
    @Test
    public void test1741() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1741 = calculadora792.subInt(-250, 0);
        Assertions.assertEquals(int1741, -250);
        boolean boolean1975 = calculadora792.menor(-1000, 0);
        Assertions.assertEquals(boolean1975, true);
        java.lang.String string2955 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string2955, "top");
        java.lang.String string2976 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string2976, "top");
    }
    @Test
    public void test1742() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        java.lang.String string5092 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string5092, "LOREM");
        boolean boolean4625 = calculadora792.maior(-250, 0);
        Assertions.assertEquals(boolean4625, false);
        java.lang.String string4742 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string4742, "IPSUM");
        double double9965 = calculadora792.somaDouble(0.0, -10.953);
        Assertions.assertEquals(double9965, -10.953);
    }
    @Test
    public void test1743() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        boolean boolean3220 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3220, false);
        double double2576 = calculadora792.subDouble(0.55, 10.953);
        Assertions.assertEquals(double2576, -10.402999999999999);
    }
    @Test
    public void test1744() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double2584 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double2584, -1.55);
        java.lang.String string4740 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string4740, "TOP");
        boolean boolean9506 = calculadora792.menor(-1000, -100);
        Assertions.assertEquals(boolean9506, true);
    }
    @Test
    public void test1745() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        int int5237 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int5237, 0);
        boolean boolean7786 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean7786, false);
        java.lang.String string9972 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string9972, "TOP");
    }
    @Test
    public void test1746() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean3011 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3011, true);
        boolean boolean6699 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean6699, false);
        java.lang.String string4028 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string4028, "VALEU");
    }
    @Test
    public void test1747() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean8498 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean8498, false);
        int int9866 = calculadora792.divInt(-250, -250);
        Assertions.assertEquals(int9866, 1);
        int int2759 = calculadora792.subInt(1000, -250);
        Assertions.assertEquals(int2759, 1250);
        int int2758 = calculadora792.divInt(0, -250);
        Assertions.assertEquals(int2758, 0);
        double double2580 = calculadora792.divDouble(10.953, -105.5);
        Assertions.assertEquals(double2580, -0.10381990521327014);
    }
    @Test
    public void test1748() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int1429 = calculadora792.mulInt(1000, 250);
        Assertions.assertEquals(int1429, 250000);
        double double3017 = calculadora792.subDouble(105.5, 0.55);
        Assertions.assertEquals(double3017, 104.95);
        double double5600 = calculadora792.divDouble(105.5, 1.99);
        Assertions.assertEquals(double5600, 53.015075376884425);
    }
    @Test
    public void test1749() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int4743 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4743, 62500);
        boolean boolean6507 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean6507, true);
        java.lang.String string3307 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string3307, "go");
        boolean boolean2614 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean2614, false);
    }
    @Test
    public void test1750() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double7418 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double7418, -105.5);
        java.lang.String string944 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string944, "hello");
    }
    @Test
    public void test1751() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        java.lang.String string6731 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string6731, "nice");
        int int5111 = calculadora792.subInt(-500, 500);
        Assertions.assertEquals(int5111, -1000);
    }
    @Test
    public void test1752() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
        double double4938 = calculadora792.subDouble(10.953, 105.5);
        Assertions.assertEquals(double4938, -94.547);
        boolean boolean9837 = calculadora792.maior(1000, 1000);
        Assertions.assertEquals(boolean9837, false);
    }
    @Test
    public void test1754() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string364 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string364, "hello");
        double double8337 = calculadora792.subDouble(105.5, 1.99);
        Assertions.assertEquals(double8337, 103.51);
        int int7251 = calculadora792.mulInt(-100, -500);
        Assertions.assertEquals(int7251, 50000);
        java.lang.String string8226 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string8226, "ipsum");
    }
    @Test
    public void test1756() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
        boolean boolean5126 = calculadora792.maior(100, -1000);
        Assertions.assertEquals(boolean5126, true);
        int int4695 = calculadora792.divInt(-250, -500);
        Assertions.assertEquals(int4695, 0);
    }
    @Test
    public void test1757() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int2130 = calculadora792.divInt(-1000, -100);
        Assertions.assertEquals(int2130, 10);
        int int9791 = calculadora792.subInt(-1000, 0);
        Assertions.assertEquals(int9791, -1000);
        int int8225 = calculadora792.divInt(250, -500);
        Assertions.assertEquals(int8225, 0);
        int int5638 = calculadora792.somaInt(1000, 100);
        Assertions.assertEquals(int5638, 1100);
        java.lang.String string2743 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string2743, "GO");
    }
    @Test
    public void test1758() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        java.lang.String string5613 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5613, "HELLO");
        boolean boolean9034 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9034, true);
        boolean boolean9761 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9761, true);
        java.lang.String string5123 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string5123, "top");
        int int3064 = calculadora792.somaInt(-1000, 250);
        Assertions.assertEquals(int3064, -750);
        double double4817 = calculadora792.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double4817, -34.409835269999995);
    }
    @Test
    public void test1759() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean615 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean615, false);
        int int3742 = calculadora792.subInt(0, -250);
        Assertions.assertEquals(int3742, 250);
        boolean boolean566 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean566, true);
    }
    @Test
    public void test1760() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        int int7585 = calculadora792.mulInt(-1000, -1000);
        Assertions.assertEquals(int7585, 1000000);
        double double578 = calculadora792.divDouble(-1.55, 3.14159);
        Assertions.assertEquals(double578, -0.4933807403257586);
    }
    @Test
    public void test1762() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean6333 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6333, false);
        int int8783 = calculadora792.divInt(100, 1000);
        Assertions.assertEquals(int8783, 0);
        java.lang.String string5278 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5278, "valeu");
    }
    @Test
    public void test1764() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int4727 = calculadora792.somaInt(-1000, 100);
        Assertions.assertEquals(int4727, -900);
        boolean boolean8151 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean8151, false);
        int int7994 = calculadora792.subInt(-500, 500);
        Assertions.assertEquals(int7994, -1000);
    }
    @Test
    public void test1765() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
        double double4938 = calculadora792.subDouble(10.953, 105.5);
        Assertions.assertEquals(double4938, -94.547);
        int int5102 = calculadora792.somaInt(-1000, 250);
        Assertions.assertEquals(int5102, -750);
    }
    @Test
    public void test1766() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean7368 = calculadora792.menor(0, 250);
        Assertions.assertEquals(boolean7368, true);
        int int2435 = calculadora792.divInt(250, -500);
        Assertions.assertEquals(int2435, 0);
    }
    @Test
    public void test1767() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
        int int9292 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int9292, 0);
        boolean boolean5244 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5244, false);
        java.lang.String string681 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string681, "HELLO");
    }
    @Test
    public void test1769() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        boolean boolean7322 = calculadora792.maior(1000, 250);
        Assertions.assertEquals(boolean7322, true);
    }
    @Test
    public void test1771() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3691 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int3691, -600);
        int int7512 = calculadora792.somaInt(-250, 0);
        Assertions.assertEquals(int7512, -250);
        boolean boolean391 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean391, false);
        double double7305 = calculadora792.mulDouble(3.14159, 0.0);
        Assertions.assertEquals(double7305, 0.0);
    }
    @Test
    public void test1772() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean5835 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5835, false);
        int int9324 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9324, 10000);
        java.lang.String string3699 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3699, "NICE");
        java.lang.String string5079 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5079, "HELLO");
    }
    @Test
    public void test1773() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
        double double9163 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9163, 0.0);
        boolean boolean9315 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9315, true);
        int int4611 = calculadora792.somaInt(-250, 0);
        Assertions.assertEquals(int4611, -250);
    }
    @Test
    public void test1774() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        double double6616 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double6616, -5.504020100502513);
        double double9210 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double9210, -107.05);
    }
    @Test
    public void test1775() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
        boolean boolean5126 = calculadora792.maior(100, -1000);
        Assertions.assertEquals(boolean5126, true);
        int int6983 = calculadora792.divInt(-250, -100);
        Assertions.assertEquals(int6983, 2);
    }
    @Test
    public void test1776() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean914 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean914, false);
        boolean boolean3335 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean3335, false);
    }
    @Test
    public void test1777() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
        double double4015 = calculadora792.subDouble(0.55, 1.99);
        Assertions.assertEquals(double4015, -1.44);
        java.lang.String string7652 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string7652, "IPSUM");
    }
    @Test
    public void test1778() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        java.lang.String string5583 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string5583, "GO");
        boolean boolean1693 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean1693, false);
        java.lang.String string2066 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string2066, "lorem");
        java.lang.String string6536 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string6536, "HI");
    }
    @Test
    public void test1779() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double157 = calculadora792.divDouble(105.5, -1.55);
        Assertions.assertEquals(double157, -68.06451612903226);
        int int3938 = calculadora792.somaInt(-250, 1000);
        Assertions.assertEquals(int3938, 750);
        java.lang.String string2812 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string2812, "nice");
    }
    @Test
    public void test1780() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        int int4791 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int4791, 0);
    }
    @Test
    public void test1781() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        java.lang.String string5091 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string5091, "VALEU");
        int int6615 = calculadora792.somaInt(-500, -500);
        Assertions.assertEquals(int6615, -1000);
        double double6855 = calculadora792.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double6855, 0.0);
    }
    @Test
    public void test1782() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int835 = calculadora792.mulInt(-500, -500);
        Assertions.assertEquals(int835, 250000);
        double double7390 = calculadora792.divDouble(105.5, 105.5);
        Assertions.assertEquals(double7390, 1.0);
        java.lang.String string7444 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string7444, "HI");
    }
    @Test
    public void test1783() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        double double161 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double161, -1155.5415);
        boolean boolean4778 = calculadora792.menor(1000, -500);
        Assertions.assertEquals(boolean4778, false);
    }
    @Test
    public void test1784() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        boolean boolean8523 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8523, true);
        boolean boolean3029 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3029, true);
        boolean boolean297 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean297, true);
    }
    @Test
    public void test1787() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        java.lang.String string5613 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5613, "HELLO");
        boolean boolean9034 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9034, true);
        boolean boolean9761 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9761, true);
        java.lang.String string5123 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string5123, "top");
        boolean boolean3833 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3833, false);
    }
    @Test
    public void test1788() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        java.lang.String string4305 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string4305, "lorem");
        double double7706 = calculadora792.divDouble(1.99, 105.5);
        Assertions.assertEquals(double7706, 0.01886255924170616);
    }
    @Test
    public void test1789() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean3011 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3011, true);
        boolean boolean6699 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean6699, false);
        java.lang.String string8547 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string8547, "go");
        boolean boolean6848 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6848, false);
        int int6721 = calculadora792.somaInt(0, 1000);
        Assertions.assertEquals(int6721, 1000);
        int int584 = calculadora792.mulInt(-250, -1000);
        Assertions.assertEquals(int584, 250000);
    }
    @Test
    public void test1790() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        java.lang.String string6502 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string6502, "HELLO");
        int int6992 = calculadora792.subInt(-1000, -500);
        Assertions.assertEquals(int6992, -500);
        double double1565 = calculadora792.somaDouble(3.14159, 10.953);
        Assertions.assertEquals(double1565, 14.09459);
        java.lang.String string1690 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string1690, "lorem");
        int int8953 = calculadora792.subInt(-500, 250);
        Assertions.assertEquals(int8953, -750);
    }
    @Test
    public void test1792() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean6333 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6333, false);
        int int8783 = calculadora792.divInt(100, 1000);
        Assertions.assertEquals(int8783, 0);
        boolean boolean8681 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean8681, false);
        double double1058 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1058, 9.632064274627956);
        double double2790 = calculadora792.subDouble(1.99, -10.953);
        Assertions.assertEquals(double2790, 12.943);
        boolean boolean2232 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2232, true);
    }
    @Test
    public void test1793() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
        java.lang.String string732 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string732, "NICE");
    }
    @Test
    public void test1794() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        boolean boolean2863 = calculadora792.maior(-1000, -250);
        Assertions.assertEquals(boolean2863, false);
        double double5920 = calculadora792.mulDouble(3.14159, 105.5);
        Assertions.assertEquals(double5920, 331.437745);
    }
    @Test
    public void test1795() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        boolean boolean4987 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4987, false);
    }
    @Test
    public void test1796() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
        double double5979 = calculadora792.somaDouble(0.55, -1.55);
        Assertions.assertEquals(double5979, -1.0);
        boolean boolean4328 = calculadora792.and(true, boolean7494);
        Assertions.assertEquals(boolean4328, false);
    }
    @Test
    public void test1797() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        java.lang.String string7699 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7699, "top");
        double double191 = calculadora792.divDouble(0.0, -10.953);
        Assertions.assertEquals(double191, -0.0);
        java.lang.String string6489 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string6489, "HI");
    }
    @Test
    public void test1798() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        int int9748 = calculadora792.subInt(100, -500);
        Assertions.assertEquals(int9748, 600);
    }
    @Test
    public void test1799() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        java.lang.String string5613 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5613, "HELLO");
        boolean boolean9034 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9034, true);
        boolean boolean9761 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9761, true);
        java.lang.String string5123 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string5123, "top");
        int int3064 = calculadora792.somaInt(-1000, 250);
        Assertions.assertEquals(int3064, -750);
        double double4817 = calculadora792.mulDouble(3.14159, -10.953);
        Assertions.assertEquals(double4817, -34.409835269999995);
        boolean boolean1703 = calculadora792.and(boolean9761, true);
        Assertions.assertEquals(boolean1703, false);
    }
    @Test
    public void test1800() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        java.lang.String string5988 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string5988, "go");
        boolean boolean6192 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6192, true);
        double double5845 = calculadora792.divDouble(-10.953, 3.14159);
        Assertions.assertEquals(double5845, -3.4864511282503443);
    }
    @Test
    public void test1802() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double123 = calculadora792.subDouble(10.953, 105.5);
        Assertions.assertEquals(double123, -94.547);
        double double4907 = calculadora792.subDouble(1.99, 0.55);
        Assertions.assertEquals(double4907, 1.44);
    }
    @Test
    public void test1803() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
        double double1965 = calculadora792.mulDouble(-1.55, 0.55);
        Assertions.assertEquals(double1965, -0.8525000000000001);
        double double5325 = calculadora792.subDouble(1.99, -10.953);
        Assertions.assertEquals(double5325, 12.943);
    }
    @Test
    public void test1804() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3691 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int3691, -600);
        int int202 = calculadora792.divInt(-250, -1000);
        Assertions.assertEquals(int202, 0);
        boolean boolean5419 = calculadora792.menor(-250, 250);
        Assertions.assertEquals(boolean5419, true);
    }
    @Test
    public void test1805() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string3675 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string3675, "lorem");
        java.lang.String string7556 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string7556, "hi");
        java.lang.String string9038 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string9038, "NICE");
    }
    @Test
    public void test1806() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        double double6221 = calculadora792.somaDouble(3.14159, 0.55);
        Assertions.assertEquals(double6221, 3.6915899999999997);
        java.lang.String string6378 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string6378, "VALEU");
    }
    @Test
    public void test1807() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        int int572 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int572, 0);
        int int9558 = calculadora792.somaInt(-100, -250);
        Assertions.assertEquals(int9558, -350);
        double double2987 = calculadora792.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double2987, -0.8525000000000001);
    }
    @Test
    public void test1808() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double2301 = calculadora792.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double2301, -104.95);
        int int1333 = calculadora792.divInt(-500, 250);
        Assertions.assertEquals(int1333, -2);
        boolean boolean9636 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean9636, false);
        boolean boolean8752 = calculadora792.maior(-500, 1000);
        Assertions.assertEquals(boolean8752, false);
    }
    @Test
    public void test1812() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        int int1021 = calculadora792.mulInt(-1000, -1000);
        Assertions.assertEquals(int1021, 1000000);
        double double2399 = calculadora792.subDouble(10.953, 0.0);
        Assertions.assertEquals(double2399, 10.953);
        java.lang.String string5654 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5654, "valeu");
    }
    @Test
    public void test1813() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        double double2428 = calculadora792.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double2428, 0.0);
        java.lang.String string8918 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string8918, "IPSUM");
    }
    @Test
    public void test1814() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        boolean boolean8137 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean8137, false);
    }
    @Test
    public void test1815() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        java.lang.String string6658 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string6658, "IPSUM");
        java.lang.String string1113 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string1113, "valeu");
    }
    @Test
    public void test1816() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        boolean boolean3089 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean3089, false);
        int int977 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int977, -25000);
        java.lang.String string9035 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string9035, "VALEU");
    }
    @Test
    public void test1817() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        boolean boolean497 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean497, false);
    }
    @Test
    public void test1818() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        double double1516 = calculadora792.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double1516, -102.35841);
        boolean boolean837 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean837, true);
    }
    @Test
    public void test1819() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        boolean boolean5642 = calculadora792.menor(0, -250);
        Assertions.assertEquals(boolean5642, false);
        boolean boolean7212 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean7212, true);
        double double799 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double799, -0.2868246142609331);
    }
    @Test
    public void test1820() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean1390 = calculadora792.maior(500, -250);
        Assertions.assertEquals(boolean1390, true);
        double double2745 = calculadora792.somaDouble(-105.5, -105.5);
        Assertions.assertEquals(double2745, -211.0);
        boolean boolean4761 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean4761, false);
        double double1983 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double1983, 9.402999999999999);
    }
    @Test
    public void test1823() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        double double1099 = calculadora792.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double1099, -1.0);
        int int246 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int246, 10000);
        java.lang.String string7633 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string7633, "GO");
        java.lang.String string2682 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string2682, "hello");
    }
    @Test
    public void test1824() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
        double double4938 = calculadora792.subDouble(10.953, 105.5);
        Assertions.assertEquals(double4938, -94.547);
        boolean boolean8772 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean8772, false);
        int int5850 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5850, -1100);
    }
    @Test
    public void test1826() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        boolean boolean494 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean494, false);
        java.lang.String string3697 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string3697, "hello");
        int int2701 = calculadora792.mulInt(500, -100);
        Assertions.assertEquals(int2701, -50000);
    }
    @Test
    public void test1827() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int8945 = calculadora792.divInt(-500, 1000);
        Assertions.assertEquals(int8945, 0);
        java.lang.String string9481 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string9481, "nice");
    }
    @Test
    public void test1831() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int3642 = calculadora792.subInt(-100, 500);
        Assertions.assertEquals(int3642, -600);
        int int7189 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int7189, 125000);
    }
    @Test
    public void test1832() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        boolean boolean9396 = calculadora792.menor(-250, 0);
        Assertions.assertEquals(boolean9396, true);
        double double4774 = calculadora792.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double4774, 0.0);
        boolean boolean3741 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3741, true);
    }
    @Test
    public void test1833() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean3047 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3047, true);
        int int2012 = calculadora792.divInt(-500, -1000);
        Assertions.assertEquals(int2012, 0);
        double double8727 = calculadora792.divDouble(10.953, 10.953);
        Assertions.assertEquals(double8727, 1.0);
    }
    @Test
    public void test1834() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        double double4574 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double4574, -103.51);
        boolean boolean2048 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean2048, true);
    }
    @Test
    public void test1835() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean6684 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean6684, false);
    }
    @Test
    public void test1837() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean716 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean716, false);
        java.lang.String string7211 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string7211, "hi");
    }
    @Test
    public void test1838() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        boolean boolean6853 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean6853, false);
        boolean boolean9412 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9412, true);
        double double4789 = calculadora792.somaDouble(10.953, 105.5);
        Assertions.assertEquals(double4789, 116.453);
        boolean boolean2655 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean2655, false);
        int int79 = calculadora792.mulInt(-500, -100);
        Assertions.assertEquals(int79, 50000);
    }
    @Test
    public void test1839() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int3398 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3398, 0);
    }
    @Test
    public void test1840() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
        java.lang.String string732 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string732, "NICE");
        boolean boolean1575 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean1575, true);
    }
    @Test
    public void test1841() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        int int6720 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int6720, -150);
        boolean boolean5297 = calculadora792.or(boolean3418, false);
        Assertions.assertEquals(boolean5297, false);
        int int2305 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int2305, 500);
        java.lang.String string2987 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string2987, "lorem");
    }
    @Test
    public void test1842() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        double double1008 = calculadora792.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double1008, -1.0);
        int int5189 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int5189, 0);
        boolean boolean9402 = calculadora792.or(boolean8060, false);
        Assertions.assertEquals(boolean9402, false);
    }
    @Test
    public void test1843() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean6372 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6372, true);
        double double1857 = calculadora792.divDouble(10.953, 105.5);
        Assertions.assertEquals(double1857, 0.10381990521327014);
        boolean boolean4153 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean4153, true);
        int int8196 = calculadora792.mulInt(250, 1000);
        Assertions.assertEquals(int8196, 250000);
    }
    @Test
    public void test1844() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3691 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int3691, -600);
        double double153 = calculadora792.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double153, -4.8694645);
    }
    @Test
    public void test1845() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        double double3561 = calculadora792.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double3561, 0.6334372085472643);
        double double4586 = calculadora792.subDouble(10.953, -10.953);
        Assertions.assertEquals(double4586, 21.906);
        java.lang.String string8763 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string8763, "VALEU");
    }
    @Test
    public void test1846() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        java.lang.String string787 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string787, "TOP");
        double double1401 = calculadora792.somaDouble(-1.55, 105.5);
        Assertions.assertEquals(double1401, 103.95);
    }
    @Test
    public void test1847() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        int int4170 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int4170, -1100);
        int int8733 = calculadora792.mulInt(-250, 0);
        Assertions.assertEquals(int8733, 0);
        int int6489 = calculadora792.subInt(-1000, -1000);
        Assertions.assertEquals(int6489, 0);
    }
    @Test
    public void test1848() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        java.lang.String string1403 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string1403, "LOREM");
        boolean boolean5582 = calculadora792.menor(-100, -250);
        Assertions.assertEquals(boolean5582, false);
        boolean boolean594 = calculadora792.maior(-250, -100);
        Assertions.assertEquals(boolean594, false);
        double double6907 = calculadora792.mulDouble(-105.5, 105.5);
        Assertions.assertEquals(double6907, -11130.25);
    }
    @Test
    public void test1849() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        boolean boolean2344 = calculadora792.menor(-250, 250);
        Assertions.assertEquals(boolean2344, true);
        boolean boolean1230 = calculadora792.menor(-250, -500);
        Assertions.assertEquals(boolean1230, false);
    }
    @Test
    public void test1850() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5158 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5158, 500000);
        int int4464 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int4464, -100);
        double double7243 = calculadora792.subDouble(0.55, -1.55);
        Assertions.assertEquals(double7243, 2.1);
    }
    @Test
    public void test1851() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        java.lang.String string166 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string166, "GO");
        java.lang.String string1799 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string1799, "HI");
    }
    @Test
    public void test1853() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean5909 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5909, true);
        java.lang.String string8560 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8560, "nice");
    }
    @Test
    public void test1854() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int6089 = calculadora792.divInt(0, 500);
        Assertions.assertEquals(int6089, 0);
        boolean boolean9978 = calculadora792.menor(250, 250);
        Assertions.assertEquals(boolean9978, false);
        double double909 = calculadora792.divDouble(0.55, 105.5);
        Assertions.assertEquals(double909, 0.005213270142180095);
    }
    @Test
    public void test1855() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double1145 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double1145, -107.05);
        boolean boolean952 = calculadora792.maior(500, -1000);
        Assertions.assertEquals(boolean952, true);
    }
    @Test
    public void test1856() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double6204 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double6204, -0.0);
        double double2246 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2246, 3.14159);
        double double5598 = calculadora792.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double5598, 1.0945);
        java.lang.String string7820 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string7820, "VALEU");
    }
    @Test
    public void test1858() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double4694 = calculadora792.subDouble(0.0, -1.55);
        Assertions.assertEquals(double4694, 1.55);
        int int1644 = calculadora792.subInt(-500, -250);
        Assertions.assertEquals(int1644, -250);
        double double1647 = calculadora792.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double1647, -0.8525000000000001);
    }
    @Test
    public void test1860() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean7229 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean7229, true);
        java.lang.String string941 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string941, "lorem");
        double double5695 = calculadora792.mulDouble(-10.953, -1.55);
        Assertions.assertEquals(double5695, 16.977149999999998);
    }
    @Test
    public void test1864() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        boolean boolean1682 = calculadora792.and(true, boolean3614);
        Assertions.assertEquals(boolean1682, false);
        int int9456 = calculadora792.mulInt(-500, 1000);
        Assertions.assertEquals(int9456, -500000);
        boolean boolean6925 = calculadora792.and(true, boolean3614);
        Assertions.assertEquals(boolean6925, false);
    }
    @Test
    public void test1865() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        java.lang.String string6658 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string6658, "IPSUM");
        int int5055 = calculadora792.subInt(1000, 250);
        Assertions.assertEquals(int5055, 750);
    }
    @Test
    public void test1866() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        double double9238 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9238, 0.0);
        double double2871 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double2871, 1.7278745);
        boolean boolean4033 = calculadora792.menor(500, -100);
        Assertions.assertEquals(boolean4033, false);
    }
    @Test
    public void test1867() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean7027 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean7027, false);
        double double7898 = calculadora792.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double7898, -21.906);
    }
    @Test
    public void test1869() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int6586 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int6586, 62500);
        double double3049 = calculadora792.mulDouble(105.5, -105.5);
        Assertions.assertEquals(double3049, -11130.25);
        int int8621 = calculadora792.mulInt(-1000, -500);
        Assertions.assertEquals(int8621, 500000);
    }
    @Test
    public void test1870() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int352 = calculadora792.subInt(100, -100);
        Assertions.assertEquals(int352, 200);
        boolean boolean5110 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean5110, true);
        java.lang.String string7502 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string7502, "lorem");
        boolean boolean3530 = calculadora792.menor(500, 500);
        Assertions.assertEquals(boolean3530, false);
        int int1667 = calculadora792.divInt(-1000, -250);
        Assertions.assertEquals(int1667, 4);
    }
    @Test
    public void test1871() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        double double4574 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double4574, -103.51);
        boolean boolean2048 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean2048, true);
        int int1360 = calculadora792.subInt(1000, 0);
        Assertions.assertEquals(int1360, 1000);
    }
    @Test
    public void test1875() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        double double1772 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1772, 0.0);
        double double1752 = calculadora792.divDouble(-10.953, 3.14159);
        Assertions.assertEquals(double1752, -3.4864511282503443);
    }
    @Test
    public void test1877() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        boolean boolean220 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean220, false);
    }
    @Test
    public void test1878() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        double double5931 = calculadora792.somaDouble(-105.5, 10.953);
        Assertions.assertEquals(double5931, -94.547);
        int int5803 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5803, 0);
        java.lang.String string4146 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string4146, "HI");
    }
    @Test
    public void test1881() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
        int int9292 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int9292, 0);
        boolean boolean3336 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3336, true);
        double double3204 = calculadora792.somaDouble(10.953, -10.953);
        Assertions.assertEquals(double3204, 0.0);
    }
    @Test
    public void test1882() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean2961 = calculadora792.maior(1000, 250);
        Assertions.assertEquals(boolean2961, true);
        boolean boolean8569 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean8569, true);
        java.lang.String string7083 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7083, "go");
    }
    @Test
    public void test1883() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        int int7762 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int7762, 0);
        int int5667 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int5667, -1);
    }
    @Test
    public void test1884() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        boolean boolean6853 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean6853, false);
        boolean boolean9412 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9412, true);
        double double4789 = calculadora792.somaDouble(10.953, 105.5);
        Assertions.assertEquals(double4789, 116.453);
        boolean boolean2655 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean2655, false);
        int int4826 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int4826, 62500);
    }
    @Test
    public void test1885() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        double double1099 = calculadora792.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double1099, -1.0);
        int int246 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int246, 10000);
        java.lang.String string7633 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string7633, "GO");
        java.lang.String string2682 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string2682, "hello");
        boolean boolean7874 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean7874, true);
    }
    @Test
    public void test1886() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int5717 = calculadora792.mulInt(-100, 500);
        Assertions.assertEquals(int5717, -50000);
        double double2988 = calculadora792.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double2988, 5.711981818181817);
        int int589 = calculadora792.divInt(250, -1000);
        Assertions.assertEquals(int589, 0);
        double double8606 = calculadora792.somaDouble(105.5, 105.5);
        Assertions.assertEquals(double8606, 211.0);
    }
    @Test
    public void test1887() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        int int1444 = calculadora792.somaInt(0, -100);
        Assertions.assertEquals(int1444, -100);
    }
    @Test
    public void test1888() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        double double4207 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4207, 34.409835269999995);
        java.lang.String string4949 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string4949, "VALEU");
        int int4491 = calculadora792.somaInt(-500, 500);
        Assertions.assertEquals(int4491, 0);
    }
    @Test
    public void test1889() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int45 = calculadora792.divInt(-100, -250);
        Assertions.assertEquals(int45, 0);
        java.lang.String string4977 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string4977, "lorem");
        boolean boolean6717 = calculadora792.menor(0, 100);
        Assertions.assertEquals(boolean6717, true);
    }
    @Test
    public void test1890() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        double double2693 = calculadora792.mulDouble(-1.55, -105.5);
        Assertions.assertEquals(double2693, 163.525);
        int int8162 = calculadora792.mulInt(500, 500);
        Assertions.assertEquals(int8162, 250000);
        boolean boolean4097 = calculadora792.maior(1000, 1000);
        Assertions.assertEquals(boolean4097, false);
    }
    @Test
    public void test1891() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int43 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int43, 0);
        boolean boolean8572 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean8572, false);
        int int4422 = calculadora792.divInt(-1000, 500);
        Assertions.assertEquals(int4422, -2);
    }
    @Test
    public void test1892() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        int int572 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int572, 0);
        int int9558 = calculadora792.somaInt(-100, -250);
        Assertions.assertEquals(int9558, -350);
        java.lang.String string3334 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string3334, "top");
    }
    @Test
    public void test1893() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int4743 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4743, 62500);
        boolean boolean6507 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean6507, true);
        java.lang.String string3307 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string3307, "go");
        int int2150 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int2150, 0);
        boolean boolean4208 = calculadora792.menor(0, -100);
        Assertions.assertEquals(boolean4208, false);
    }
    @Test
    public void test1894() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int5717 = calculadora792.mulInt(-100, 500);
        Assertions.assertEquals(int5717, -50000);
        boolean boolean1867 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean1867, false);
    }
    @Test
    public void test1895() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double2088 = calculadora792.subDouble(1.99, 1.99);
        Assertions.assertEquals(double2088, 0.0);
        double double4862 = calculadora792.subDouble(0.0, 3.14159);
        Assertions.assertEquals(double4862, -3.14159);
        boolean boolean3659 = calculadora792.menor(1000, 500);
        Assertions.assertEquals(boolean3659, false);
        int int3690 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3690, -2);
    }
    @Test
    public void test1896() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        int int6720 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int6720, -150);
        double double1812 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double1812, 1.7278745);
    }
    @Test
    public void test1897() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5158 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5158, 500000);
        java.lang.String string6765 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string6765, "ipsum");
    }
    @Test
    public void test1898() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        int int6731 = calculadora792.subInt(-250, 100);
        Assertions.assertEquals(int6731, -350);
        boolean boolean4055 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean4055, true);
        int int2366 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int2366, 500000);
    }
    @Test
    public void test1899() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double7638 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double7638, 107.05);
        double double4616 = calculadora792.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double4616, 0.43999999999999995);
        int int2971 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int2971, 0);
        double double6324 = calculadora792.divDouble(-1.55, 3.14159);
        Assertions.assertEquals(double6324, -0.4933807403257586);
    }
    @Test
    public void test1900() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5158 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5158, 500000);
        int int4464 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int4464, -100);
        boolean boolean5511 = calculadora792.menor(-100, 100);
        Assertions.assertEquals(boolean5511, true);
        double double1764 = calculadora792.mulDouble(1.99, 105.5);
        Assertions.assertEquals(double1764, 209.945);
    }
    @Test
    public void test1901() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean3427 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3427, false);
        boolean boolean9223 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean9223, true);
        int int5725 = calculadora792.mulInt(-100, -500);
        Assertions.assertEquals(int5725, 50000);
        boolean boolean4772 = calculadora792.maior(-1000, -500);
        Assertions.assertEquals(boolean4772, false);
    }
    @Test
    public void test1903() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        double double4207 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4207, 34.409835269999995);
        java.lang.String string1466 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string1466, "IPSUM");
        double double8116 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double8116, 0.1750705852768821);
    }
    @Test
    public void test1904() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        double double2031 = calculadora792.divDouble(0.0, 3.14159);
        Assertions.assertEquals(double2031, 0.0);
    }
    @Test
    public void test1906() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean333 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean333, false);
        boolean boolean6770 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean6770, true);
        double double1978 = calculadora792.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double1978, 3.14159);
    }
    @Test
    public void test1907() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        boolean boolean9874 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean9874, false);
        boolean boolean5086 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean5086, true);
        int int1702 = calculadora792.divInt(-500, 500);
        Assertions.assertEquals(int1702, -1);
    }
    @Test
    public void test1908() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
        double double1965 = calculadora792.mulDouble(-1.55, 0.55);
        Assertions.assertEquals(double1965, -0.8525000000000001);
        int int51 = calculadora792.mulInt(500, -500);
        Assertions.assertEquals(int51, -250000);
    }
    @Test
    public void test1909() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
        double double1965 = calculadora792.mulDouble(-1.55, 0.55);
        Assertions.assertEquals(double1965, -0.8525000000000001);
        double double5325 = calculadora792.subDouble(1.99, -10.953);
        Assertions.assertEquals(double5325, 12.943);
        boolean boolean1736 = calculadora792.and(false, boolean916);
        Assertions.assertEquals(boolean1736, false);
    }
    @Test
    public void test1913() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double413 = calculadora792.subDouble(10.953, 1.99);
        Assertions.assertEquals(double413, 8.963);
        int int2343 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int2343, 62500);
    }
    @Test
    public void test1914() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int5047 = calculadora792.mulInt(500, 0);
        Assertions.assertEquals(int5047, 0);
        int int8917 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int8917, 125000);
        double double270 = calculadora792.mulDouble(3.14159, 3.14159);
        Assertions.assertEquals(double270, 9.869587728099999);
    }
    @Test
    public void test1915() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
        java.lang.String string732 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string732, "NICE");
        boolean boolean1575 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean1575, true);
        int int82 = calculadora792.somaInt(-500, -250);
        Assertions.assertEquals(int82, -750);
    }
    @Test
    public void test1916() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        int int5412 = calculadora792.somaInt(-1000, 100);
        Assertions.assertEquals(int5412, -900);
        java.lang.String string2520 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string2520, "valeu");
        boolean boolean3383 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3383, true);
    }
    @Test
    public void test1919() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean4116 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4116, false);
        boolean boolean9281 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean9281, true);
        boolean boolean9454 = calculadora792.maior(500, -100);
        Assertions.assertEquals(boolean9454, true);
        boolean boolean8607 = calculadora792.menor(500, -100);
        Assertions.assertEquals(boolean8607, false);
    }
    @Test
    public void test1920() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        double double6221 = calculadora792.somaDouble(3.14159, 0.55);
        Assertions.assertEquals(double6221, 3.6915899999999997);
        boolean boolean6488 = calculadora792.menor(100, 1000);
        Assertions.assertEquals(boolean6488, true);
    }
    @Test
    public void test1922() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        int int1125 = calculadora792.divInt(500, 1000);
        Assertions.assertEquals(int1125, 0);
    }
    @Test
    public void test1923() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        boolean boolean3575 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean3575, false);
        boolean boolean1087 = calculadora792.and(boolean3575, true);
        Assertions.assertEquals(boolean1087, false);
        double double2350 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double2350, -1.55);
        java.lang.String string6457 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string6457, "GO");
        int int3474 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int3474, 125000);
    }
    @Test
    public void test1924() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        double double3561 = calculadora792.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double3561, 0.6334372085472643);
        java.lang.String string8485 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string8485, "HELLO");
    }
    @Test
    public void test1925() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5826 = calculadora792.divInt(-500, -100);
        Assertions.assertEquals(int5826, 5);
        boolean boolean7107 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean7107, false);
    }
    @Test
    public void test1927() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
        double double1965 = calculadora792.mulDouble(-1.55, 0.55);
        Assertions.assertEquals(double1965, -0.8525000000000001);
        int int51 = calculadora792.mulInt(500, -500);
        Assertions.assertEquals(int51, -250000);
        java.lang.String string6404 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string6404, "HI");
    }
    @Test
    public void test1928() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        java.lang.String string569 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string569, "LOREM");
    }
    @Test
    public void test1929() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        java.lang.String string3279 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3279, "NICE");
        boolean boolean8546 = calculadora792.menor(-500, -100);
        Assertions.assertEquals(boolean8546, true);
        double double3232 = calculadora792.mulDouble(-1.55, 0.0);
        Assertions.assertEquals(double3232, -0.0);
    }
    @Test
    public void test1930() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        boolean boolean220 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean220, false);
        int int5494 = calculadora792.subInt(-1000, 100);
        Assertions.assertEquals(int5494, -1100);
    }
    @Test
    public void test1932() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int1462 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int1462, 500000);
        boolean boolean5184 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5184, false);
        double double9923 = calculadora792.somaDouble(-10.953, 0.55);
        Assertions.assertEquals(double9923, -10.402999999999999);
        boolean boolean3348 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3348, true);
    }
    @Test
    public void test1933() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        java.lang.String string5170 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string5170, "top");
        java.lang.String string3585 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3585, "nice");
        boolean boolean7441 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7441, true);
    }
    @Test
    public void test1934() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean6058 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean6058, true);
        double double9321 = calculadora792.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double9321, -107.05);
    }
    @Test
    public void test1936() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
        double double9163 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9163, 0.0);
        boolean boolean8625 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean8625, false);
        int int3246 = calculadora792.subInt(250, 100);
        Assertions.assertEquals(int3246, 150);
    }
    @Test
    public void test1937() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        int int125 = calculadora792.mulInt(-1000, 1000);
        Assertions.assertEquals(int125, -1000000);
        boolean boolean5571 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5571, true);
        int int3266 = calculadora792.somaInt(0, 100);
        Assertions.assertEquals(int3266, 100);
    }
    @Test
    public void test1939() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double9802 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9802, -4.8694645);
        int int6482 = calculadora792.mulInt(1000, -1000);
        Assertions.assertEquals(int6482, -1000000);
    }
    @Test
    public void test1940() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        java.lang.String string5583 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string5583, "GO");
        boolean boolean1693 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean1693, false);
        java.lang.String string2066 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string2066, "lorem");
        java.lang.String string6536 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string6536, "HI");
        int int3038 = calculadora792.subInt(-500, -500);
        Assertions.assertEquals(int3038, 0);
    }
    @Test
    public void test1941() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
        java.lang.String string4439 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string4439, "HI");
        int int4390 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4390, -250000);
        boolean boolean8765 = calculadora792.or(false, boolean6721);
        Assertions.assertEquals(boolean8765, false);
        java.lang.String string2022 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2022, "VALEU");
        boolean boolean5558 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5558, false);
    }
    @Test
    public void test1945() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        int int2959 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2959, 1250);
    }
    @Test
    public void test1946() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        int int7762 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int7762, 0);
        int int5667 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int5667, -1);
        boolean boolean4752 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4752, false);
    }
    @Test
    public void test1947() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        int int1231 = calculadora792.divInt(100, -500);
        Assertions.assertEquals(int1231, 0);
        double double6028 = calculadora792.divDouble(1.99, 10.953);
        Assertions.assertEquals(double6028, 0.18168538300009132);
        double double4584 = calculadora792.subDouble(3.14159, 10.953);
        Assertions.assertEquals(double4584, -7.8114099999999995);
    }
    @Test
    public void test1949() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        double double152 = calculadora792.divDouble(0.55, 105.5);
        Assertions.assertEquals(double152, 0.005213270142180095);
        int int4032 = calculadora792.subInt(1000, 100);
        Assertions.assertEquals(int4032, 900);
        boolean boolean3902 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean3902, false);
        int int1360 = calculadora792.subInt(-100, 250);
        Assertions.assertEquals(int1360, -350);
    }
    @Test
    public void test1950() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double2396 = calculadora792.somaDouble(-10.953, 0.55);
        Assertions.assertEquals(double2396, -10.402999999999999);
        boolean boolean7858 = calculadora792.menor(250, 500);
        Assertions.assertEquals(boolean7858, true);
        java.lang.String string3356 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string3356, "VALEU");
    }
    @Test
    public void test1951() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        java.lang.String string5092 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string5092, "LOREM");
        boolean boolean4625 = calculadora792.maior(-250, 0);
        Assertions.assertEquals(boolean4625, false);
        double double205 = calculadora792.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double205, -1155.5415);
    }
    @Test
    public void test1952() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean2961 = calculadora792.maior(1000, 250);
        Assertions.assertEquals(boolean2961, true);
        boolean boolean8569 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean8569, true);
        java.lang.String string7083 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7083, "go");
        boolean boolean2265 = calculadora792.maior(-250, 1000);
        Assertions.assertEquals(boolean2265, false);
    }
    @Test
    public void test1953() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double4694 = calculadora792.subDouble(0.0, -1.55);
        Assertions.assertEquals(double4694, 1.55);
        int int1644 = calculadora792.subInt(-500, -250);
        Assertions.assertEquals(int1644, -250);
        boolean boolean3552 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3552, true);
        java.lang.String string3267 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3267, "hi");
    }
    @Test
    public void test1954() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        java.lang.String string9756 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9756, "hello");
        double double7906 = calculadora792.somaDouble(3.14159, -105.5);
        Assertions.assertEquals(double7906, -102.35841);
        boolean boolean4391 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean4391, false);
    }
    @Test
    public void test1955() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        double double6815 = calculadora792.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double6815, -58.025000000000006);
        boolean boolean2971 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2971, true);
        double double4290 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4290, -0.0);
    }
    @Test
    public void test1956() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        java.lang.String string5315 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5315, "valeu");
        double double4243 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4243, -107.05);
        int int6276 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int6276, 10000);
        boolean boolean3588 = calculadora792.menor(-1000, 500);
        Assertions.assertEquals(boolean3588, true);
    }
    @Test
    public void test1958() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean3427 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3427, false);
        boolean boolean9223 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean9223, true);
        int int5725 = calculadora792.mulInt(-100, -500);
        Assertions.assertEquals(int5725, 50000);
        boolean boolean2436 = calculadora792.menor(100, 0);
        Assertions.assertEquals(boolean2436, false);
    }
    @Test
    public void test1959() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        java.lang.String string5315 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5315, "valeu");
        boolean boolean1643 = calculadora792.menor(250, -500);
        Assertions.assertEquals(boolean1643, false);
    }
    @Test
    public void test1960() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        java.lang.String string8102 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string8102, "top");
        int int9682 = calculadora792.mulInt(100, -500);
        Assertions.assertEquals(int9682, -50000);
    }
    @Test
    public void test1961() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
        boolean boolean292 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean292, false);
    }
    @Test
    public void test1962() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int8856 = calculadora792.mulInt(0, 250);
        Assertions.assertEquals(int8856, 0);
        boolean boolean1927 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1927, false);
    }
    @Test
    public void test1963() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double7276 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double7276, -1155.5415);
    }
    @Test
    public void test1965() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5158 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5158, 500000);
        java.lang.String string6765 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string6765, "ipsum");
        double double5477 = calculadora792.mulDouble(10.953, -10.953);
        Assertions.assertEquals(double5477, -119.96820899999999);
    }
    @Test
    public void test1967() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        java.lang.String string3827 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3827, "IPSUM");
        java.lang.String string9028 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string9028, "TOP");
        int int5989 = calculadora792.divInt(-100, -100);
        Assertions.assertEquals(int5989, 1);
    }
    @Test
    public void test1969() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        boolean boolean4216 = calculadora792.menor(100, 500);
        Assertions.assertEquals(boolean4216, true);
    }
    @Test
    public void test1970() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6518 = calculadora792.mulInt(-1000, 0);
        Assertions.assertEquals(int6518, 0);
        int int3231 = calculadora792.subInt(250, -100);
        Assertions.assertEquals(int3231, 350);
        int int7289 = calculadora792.divInt(500, 1000);
        Assertions.assertEquals(int7289, 0);
        int int9544 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int9544, 600);
        java.lang.String string9308 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string9308, "go");
    }
    @Test
    public void test1971() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6518 = calculadora792.mulInt(-1000, 0);
        Assertions.assertEquals(int6518, 0);
        int int3231 = calculadora792.subInt(250, -100);
        Assertions.assertEquals(int3231, 350);
        double double4750 = calculadora792.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double4750, -104.95);
    }
    @Test
    public void test1972() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        java.lang.String string5092 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string5092, "LOREM");
        boolean boolean4625 = calculadora792.maior(-250, 0);
        Assertions.assertEquals(boolean4625, false);
        java.lang.String string4742 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string4742, "IPSUM");
        double double9965 = calculadora792.somaDouble(0.0, -10.953);
        Assertions.assertEquals(double9965, -10.953);
        java.lang.String string3614 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string3614, "HELLO");
    }
    @Test
    public void test1974() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double5081 = calculadora792.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double5081, 0.014691943127962086);
        boolean boolean56 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean56, true);
        int int2378 = calculadora792.divInt(1000, -100);
        Assertions.assertEquals(int2378, -10);
    }
    @Test
    public void test1975() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean6058 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean6058, true);
        double double9321 = calculadora792.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double9321, -107.05);
        int int5302 = calculadora792.mulInt(-250, -1000);
        Assertions.assertEquals(int5302, 250000);
    }
    @Test
    public void test1976() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        int int1490 = calculadora792.somaInt(500, -100);
        Assertions.assertEquals(int1490, 400);
    }
    @Test
    public void test1977() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        boolean boolean6853 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean6853, false);
        boolean boolean9412 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9412, true);
        double double4789 = calculadora792.somaDouble(10.953, 105.5);
        Assertions.assertEquals(double4789, 116.453);
        boolean boolean467 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean467, false);
    }
    @Test
    public void test1978() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        double double1658 = calculadora792.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double1658, 1155.5415);
        java.lang.String string4172 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string4172, "IPSUM");
        boolean boolean862 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean862, false);
        boolean boolean9018 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean9018, false);
    }
    @Test
    public void test1980() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        int int5237 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int5237, 0);
        java.lang.String string3864 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string3864, "ipsum");
        double double1520 = calculadora792.subDouble(-10.953, 0.55);
        Assertions.assertEquals(double1520, -11.503);
    }
    @Test
    public void test1981() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1741 = calculadora792.subInt(-250, 0);
        Assertions.assertEquals(int1741, -250);
        boolean boolean1975 = calculadora792.menor(-1000, 0);
        Assertions.assertEquals(boolean1975, true);
        java.lang.String string2955 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string2955, "top");
        java.lang.String string2976 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string2976, "top");
        int int8108 = calculadora792.somaInt(-250, -500);
        Assertions.assertEquals(int8108, -750);
    }
    @Test
    public void test1982() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5158 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5158, 500000);
        java.lang.String string6765 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string6765, "ipsum");
        int int2734 = calculadora792.divInt(0, -1000);
        Assertions.assertEquals(int2734, 0);
    }
    @Test
    public void test1983() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean2692 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean2692, false);
        java.lang.String string4284 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string4284, "HELLO");
        boolean boolean2830 = calculadora792.maior(100, -500);
        Assertions.assertEquals(boolean2830, true);
    }
    @Test
    public void test1985() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double2978 = calculadora792.mulDouble(0.0, 0.55);
        Assertions.assertEquals(double2978, 0.0);
        boolean boolean6508 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean6508, true);
    }
    @Test
    public void test1986() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean8498 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean8498, false);
        int int9866 = calculadora792.divInt(-250, -250);
        Assertions.assertEquals(int9866, 1);
        int int2759 = calculadora792.subInt(1000, -250);
        Assertions.assertEquals(int2759, 1250);
        boolean boolean5423 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5423, false);
    }
    @Test
    public void test1987() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        int int1786 = calculadora792.divInt(0, -500);
        Assertions.assertEquals(int1786, 0);
    }
    @Test
    public void test1988() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        double double4796 = calculadora792.subDouble(0.55, 0.55);
        Assertions.assertEquals(double4796, 0.0);
        java.lang.String string947 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string947, "VALEU");
        boolean boolean4077 = calculadora792.menor(1000, 250);
        Assertions.assertEquals(boolean4077, false);
    }
    @Test
    public void test1989() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean5909 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5909, true);
        double double4769 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double4769, 58.025000000000006);
        double double4490 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double4490, 108.64159);
        int int9476 = calculadora792.divInt(1000, 250);
        Assertions.assertEquals(int9476, 4);
    }
    @Test
    public void test1991() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        java.lang.String string569 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string569, "LOREM");
        boolean boolean2623 = calculadora792.menor(-100, -500);
        Assertions.assertEquals(boolean2623, false);
    }
    @Test
    public void test1992() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        double double369 = calculadora792.divDouble(0.0, 105.5);
        Assertions.assertEquals(double369, 0.0);
        int int7530 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7530, -1000);
        int int2918 = calculadora792.somaInt(100, -250);
        Assertions.assertEquals(int2918, -150);
    }
    @Test
    public void test1993() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean6719 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean6719, true);
        double double6665 = calculadora792.mulDouble(-1.55, 0.55);
        Assertions.assertEquals(double6665, -0.8525000000000001);
    }
    @Test
    public void test1994() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        java.lang.String string5583 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string5583, "GO");
        boolean boolean1693 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean1693, false);
        java.lang.String string2066 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string2066, "lorem");
        double double7962 = calculadora792.divDouble(105.5, -105.5);
        Assertions.assertEquals(double7962, -1.0);
        boolean boolean3828 = calculadora792.maior(-500, -1000);
        Assertions.assertEquals(boolean3828, true);
    }
    @Test
    public void test1995() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        int int6559 = calculadora792.somaInt(0, 100);
        Assertions.assertEquals(int6559, 100);
    }
    @Test
    public void test1996() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        java.lang.String string5091 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string5091, "VALEU");
        java.lang.String string873 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string873, "NICE");
        int int4994 = calculadora792.somaInt(250, -100);
        Assertions.assertEquals(int4994, 150);
    }
    @Test
    public void test1998() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int1462 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int1462, 500000);
        boolean boolean9107 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean9107, false);
    }
    @Test
    public void test1999() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        int int4787 = calculadora792.somaInt(100, 0);
        Assertions.assertEquals(int4787, 100);
        int int2953 = calculadora792.somaInt(250, -1000);
        Assertions.assertEquals(int2953, -750);
        int int8534 = calculadora792.subInt(500, 100);
        Assertions.assertEquals(int8534, 400);
    }
    @Test
    public void test2000() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean3772 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3772, true);
    }
    @Test
    public void test2001() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        double double369 = calculadora792.divDouble(0.0, 105.5);
        Assertions.assertEquals(double369, 0.0);
        int int1494 = calculadora792.divInt(500, -1000);
        Assertions.assertEquals(int1494, 0);
    }
    @Test
    public void test2002() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean2980 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2980, false);
        double double6288 = calculadora792.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double6288, 0.0);
    }
    @Test
    public void test2003() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double2441 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double2441, 0.0);
        java.lang.String string4919 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string4919, "lorem");
    }
    @Test
    public void test2004() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean3427 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3427, false);
        boolean boolean9223 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean9223, true);
        int int5725 = calculadora792.mulInt(-100, -500);
        Assertions.assertEquals(int5725, 50000);
        double double404 = calculadora792.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double404, 6.2517641);
    }
    @Test
    public void test2005() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        java.lang.String string5091 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string5091, "VALEU");
        java.lang.String string873 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string873, "NICE");
        java.lang.String string576 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string576, "top");
        boolean boolean1061 = calculadora792.and(boolean7494, false);
        Assertions.assertEquals(boolean1061, false);
    }
    @Test
    public void test2007() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double9830 = calculadora792.subDouble(1.99, 0.0);
        Assertions.assertEquals(double9830, 1.99);
        boolean boolean4746 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean4746, false);
    }
    @Test
    public void test2008() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double3536 = calculadora792.divDouble(-1.55, 3.14159);
        Assertions.assertEquals(double3536, -0.4933807403257586);
        boolean boolean3857 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean3857, true);
    }
    @Test
    public void test2009() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        java.lang.String string5613 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5613, "HELLO");
        double double3837 = calculadora792.subDouble(-10.953, -105.5);
        Assertions.assertEquals(double3837, 94.547);
        double double4516 = calculadora792.somaDouble(-1.55, 105.5);
        Assertions.assertEquals(double4516, 103.95);
    }
    @Test
    public void test2010() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double7427 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double7427, 108.64159);
        double double4027 = calculadora792.mulDouble(105.5, 0.55);
        Assertions.assertEquals(double4027, 58.025000000000006);
    }
    @Test
    public void test2011() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
        java.lang.String string4439 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string4439, "HI");
        int int4390 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4390, -250000);
        boolean boolean8765 = calculadora792.or(false, boolean6721);
        Assertions.assertEquals(boolean8765, false);
        java.lang.String string2022 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2022, "VALEU");
        int int6137 = calculadora792.mulInt(-1000, 0);
        Assertions.assertEquals(int6137, 0);
    }
    @Test
    public void test2012() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int4743 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4743, 62500);
        boolean boolean6507 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean6507, true);
        java.lang.String string3307 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string3307, "go");
        int int2150 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int2150, 0);
        boolean boolean4208 = calculadora792.menor(0, -100);
        Assertions.assertEquals(boolean4208, false);
        boolean boolean7555 = calculadora792.or(true, boolean6507);
        Assertions.assertEquals(boolean7555, true);
    }
    @Test
    public void test2013() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        int int6720 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int6720, -150);
        boolean boolean5297 = calculadora792.or(boolean3418, false);
        Assertions.assertEquals(boolean5297, false);
        int int2305 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int2305, 500);
        java.lang.String string6933 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string6933, "TOP");
    }
    @Test
    public void test2015() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int1462 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int1462, 500000);
        double double8669 = calculadora792.mulDouble(-10.953, 0.55);
        Assertions.assertEquals(double8669, -6.024150000000001);
        int int5055 = calculadora792.subInt(100, 250);
        Assertions.assertEquals(int5055, -150);
    }
    @Test
    public void test2016() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        int int7510 = calculadora792.somaInt(-1000, -250);
        Assertions.assertEquals(int7510, -1250);
    }
    @Test
    public void test2017() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3691 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int3691, -600);
        double double153 = calculadora792.mulDouble(3.14159, -1.55);
        Assertions.assertEquals(double153, -4.8694645);
        double double66 = calculadora792.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double66, 0.0);
    }
    @Test
    public void test2018() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double7431 = calculadora792.somaDouble(0.55, 10.953);
        Assertions.assertEquals(double7431, 11.503);
        int int9550 = calculadora792.somaInt(100, -250);
        Assertions.assertEquals(int9550, -150);
    }
    @Test
    public void test2019() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        double double4796 = calculadora792.subDouble(0.55, 0.55);
        Assertions.assertEquals(double4796, 0.0);
        java.lang.String string947 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string947, "VALEU");
        boolean boolean4077 = calculadora792.menor(1000, 250);
        Assertions.assertEquals(boolean4077, false);
        double double3998 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double3998, 0.0);
    }
    @Test
    public void test2020() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        java.lang.String string6658 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string6658, "IPSUM");
        java.lang.String string1113 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string1113, "valeu");
        boolean boolean4684 = calculadora792.or(boolean1170, boolean7494);
        Assertions.assertEquals(boolean4684, false);
    }
    @Test
    public void test2022() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
        int int2251 = calculadora792.subInt(500, 250);
        Assertions.assertEquals(int2251, 250);
    }
    @Test
    public void test2023() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        double double1008 = calculadora792.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double1008, -1.0);
        double double6338 = calculadora792.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double6338, 1.5786884422110552);
    }
    @Test
    public void test2024() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
        double double4032 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double4032, 9.632064274627956);
    }
    @Test
    public void test2026() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean3539 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean3539, true);
    }
    @Test
    public void test2027() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        boolean boolean494 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean494, false);
        int int265 = calculadora792.subInt(500, -500);
        Assertions.assertEquals(int265, 1000);
    }
    @Test
    public void test2028() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        java.lang.String string9756 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9756, "hello");
        int int1917 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int1917, 125000);
        double double3446 = calculadora792.somaDouble(-105.5, 105.5);
        Assertions.assertEquals(double3446, 0.0);
        int int5148 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int5148, -600);
    }
    @Test
    public void test2029() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
        boolean boolean5126 = calculadora792.maior(100, -1000);
        Assertions.assertEquals(boolean5126, true);
        int int4695 = calculadora792.divInt(-250, -500);
        Assertions.assertEquals(int4695, 0);
        int int3963 = calculadora792.mulInt(0, 1000);
        Assertions.assertEquals(int3963, 0);
    }
    @Test
    public void test2031() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5158 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5158, 500000);
        int int4464 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int4464, -100);
        boolean boolean5511 = calculadora792.menor(-100, 100);
        Assertions.assertEquals(boolean5511, true);
        double double1764 = calculadora792.mulDouble(1.99, 105.5);
        Assertions.assertEquals(double1764, 209.945);
        java.lang.String string3497 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string3497, "LOREM");
    }
    @Test
    public void test2032() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double1145 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double1145, -107.05);
        boolean boolean952 = calculadora792.maior(500, -1000);
        Assertions.assertEquals(boolean952, true);
        int int8089 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int8089, 0);
    }
    @Test
    public void test2034() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double157 = calculadora792.divDouble(105.5, -1.55);
        Assertions.assertEquals(double157, -68.06451612903226);
        int int9240 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int9240, -250000);
        java.lang.String string5881 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5881, "valeu");
    }
    @Test
    public void test2035() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        boolean boolean3089 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean3089, false);
        int int977 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int977, -25000);
        double double6040 = calculadora792.subDouble(0.55, 10.953);
        Assertions.assertEquals(double6040, -10.402999999999999);
    }
    @Test
    public void test2036() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean3427 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3427, false);
        double double7289 = calculadora792.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double7289, -107.05);
        boolean boolean4343 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4343, false);
        int int5704 = calculadora792.mulInt(500, -250);
        Assertions.assertEquals(int5704, -125000);
    }
    @Test
    public void test2037() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        double double4400 = calculadora792.somaDouble(3.14159, -10.953);
        Assertions.assertEquals(double4400, -7.8114099999999995);
    }
    @Test
    public void test2038() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        double double3271 = calculadora792.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double3271, 1.0945);
        java.lang.String string8646 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string8646, "HELLO");
    }
    @Test
    public void test2039() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        boolean boolean4216 = calculadora792.menor(100, 500);
        Assertions.assertEquals(boolean4216, true);
        int int145 = calculadora792.subInt(250, 500);
        Assertions.assertEquals(int145, -250);
    }
    @Test
    public void test2040() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean6946 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean6946, false);
        double double1280 = calculadora792.somaDouble(-1.55, -1.55);
        Assertions.assertEquals(double1280, -3.1);
        boolean boolean8407 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean8407, true);
        double double5091 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double5091, 5.13159);
        boolean boolean8506 = calculadora792.maior(-500, -500);
        Assertions.assertEquals(boolean8506, false);
    }
    @Test
    public void test2042() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        double double369 = calculadora792.divDouble(0.0, 105.5);
        Assertions.assertEquals(double369, 0.0);
        int int1494 = calculadora792.divInt(500, -1000);
        Assertions.assertEquals(int1494, 0);
        int int689 = calculadora792.somaInt(0, -500);
        Assertions.assertEquals(int689, -500);
    }
    @Test
    public void test2044() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        java.lang.String string166 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string166, "GO");
        java.lang.String string661 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string661, "NICE");
        int int1028 = calculadora792.subInt(-500, 0);
        Assertions.assertEquals(int1028, -500);
    }
    @Test
    public void test2046() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        double double7102 = calculadora792.divDouble(1.99, 0.55);
        Assertions.assertEquals(double7102, 3.6181818181818177);
    }
    @Test
    public void test2047() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        double double9244 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double9244, 211.0);
    }
    @Test
    public void test2048() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double157 = calculadora792.divDouble(105.5, -1.55);
        Assertions.assertEquals(double157, -68.06451612903226);
        double double4464 = calculadora792.divDouble(-105.5, 0.55);
        Assertions.assertEquals(double4464, -191.8181818181818);
        double double7230 = calculadora792.mulDouble(-105.5, 10.953);
        Assertions.assertEquals(double7230, -1155.5415);
    }
    @Test
    public void test2049() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        double double9269 = calculadora792.mulDouble(10.953, -10.953);
        Assertions.assertEquals(double9269, -119.96820899999999);
    }
    @Test
    public void test2050() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        double double4207 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4207, 34.409835269999995);
        java.lang.String string1466 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string1466, "IPSUM");
        boolean boolean6305 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean6305, false);
    }
    @Test
    public void test2051() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5158 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5158, 500000);
        boolean boolean5969 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5969, true);
    }
    @Test
    public void test2052() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        double double3896 = calculadora792.subDouble(-105.5, 10.953);
        Assertions.assertEquals(double3896, -116.453);
        int int9153 = calculadora792.mulInt(-100, -100);
        Assertions.assertEquals(int9153, 10000);
    }
    @Test
    public void test2053() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1059 = calculadora792.somaInt(0, 500);
        Assertions.assertEquals(int1059, 500);
        boolean boolean3088 = calculadora792.maior(100, -500);
        Assertions.assertEquals(boolean3088, true);
        int int9200 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int9200, -25000);
    }
    @Test
    public void test2054() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        int int6731 = calculadora792.subInt(-250, 100);
        Assertions.assertEquals(int6731, -350);
        boolean boolean4055 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean4055, true);
        int int2366 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int2366, 500000);
        double double8792 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double8792, 1.1);
    }
    @Test
    public void test2055() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double5263 = calculadora792.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double5263, 1.7278745);
        double double2286 = calculadora792.subDouble(-1.55, 10.953);
        Assertions.assertEquals(double2286, -12.503);
    }
    @Test
    public void test2057() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        boolean boolean8892 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8892, true);
    }
    @Test
    public void test2058() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        java.lang.String string5091 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string5091, "VALEU");
        int int6615 = calculadora792.somaInt(-500, -500);
        Assertions.assertEquals(int6615, -1000);
        int int7447 = calculadora792.mulInt(-500, -100);
        Assertions.assertEquals(int7447, 50000);
    }
    @Test
    public void test2059() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        java.lang.String string6335 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string6335, "valeu");
        boolean boolean1154 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1154, false);
        int int521 = calculadora792.divInt(500, 100);
        Assertions.assertEquals(int521, 5);
        java.lang.String string6230 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string6230, "hello");
    }
    @Test
    public void test2060() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean7027 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean7027, false);
        int int2857 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int2857, 500000);
        int int4968 = calculadora792.mulInt(-250, -100);
        Assertions.assertEquals(int4968, 25000);
    }
    @Test
    public void test2061() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5158 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5158, 500000);
        boolean boolean5969 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5969, true);
        int int8889 = calculadora792.mulInt(-1000, -100);
        Assertions.assertEquals(int8889, 100000);
    }
    @Test
    public void test2063() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        java.lang.String string8457 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string8457, "LOREM");
        boolean boolean9374 = calculadora792.maior(-1000, -500);
        Assertions.assertEquals(boolean9374, false);
    }
    @Test
    public void test2064() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double7418 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double7418, -105.5);
        java.lang.String string7396 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string7396, "HI");
        boolean boolean6893 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean6893, true);
        java.lang.String string397 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string397, "ipsum");
        boolean boolean213 = calculadora792.menor(1000, -1000);
        Assertions.assertEquals(boolean213, false);
    }
    @Test
    public void test2065() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1741 = calculadora792.subInt(-250, 0);
        Assertions.assertEquals(int1741, -250);
        boolean boolean1975 = calculadora792.menor(-1000, 0);
        Assertions.assertEquals(boolean1975, true);
        java.lang.String string2955 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string2955, "top");
        int int2536 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2536, 900);
    }
    @Test
    public void test2066() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
        boolean boolean8126 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean8126, true);
        boolean boolean9007 = calculadora792.maior(1000, -500);
        Assertions.assertEquals(boolean9007, true);
        double double1676 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double1676, -1.55);
        java.lang.String string347 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string347, "GO");
        boolean boolean4204 = calculadora792.or(false, boolean9007);
        Assertions.assertEquals(boolean4204, false);
        double double7975 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double7975, -16.977149999999998);
        boolean boolean5792 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean5792, false);
    }
    @Test
    public void test2067() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean7368 = calculadora792.menor(0, 250);
        Assertions.assertEquals(boolean7368, true);
        boolean boolean260 = calculadora792.maior(-100, -1000);
        Assertions.assertEquals(boolean260, true);
    }
    @Test
    public void test2068() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean3011 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3011, true);
        boolean boolean6699 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean6699, false);
        boolean boolean9378 = calculadora792.and(false, boolean3011);
        Assertions.assertEquals(boolean9378, false);
    }
    @Test
    public void test2069() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string5602 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string5602, "hi");
        double double8068 = calculadora792.somaDouble(10.953, 105.5);
        Assertions.assertEquals(double8068, 116.453);
    }
    @Test
    public void test2070() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        double double8439 = calculadora792.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double8439, 0.0);
    }
    @Test
    public void test2071() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        int int8067 = calculadora792.somaInt(-500, 100);
        Assertions.assertEquals(int8067, -400);
        double double4720 = calculadora792.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double4720, 1155.5415);
        boolean boolean6232 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6232, true);
    }
    @Test
    public void test2073() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        boolean boolean6116 = calculadora792.maior(500, 100);
        Assertions.assertEquals(boolean6116, true);
        boolean boolean9512 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean9512, true);
    }
    @Test
    public void test2074() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        double double4796 = calculadora792.subDouble(0.55, 0.55);
        Assertions.assertEquals(double4796, 0.0);
        java.lang.String string947 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string947, "VALEU");
        double double9465 = calculadora792.mulDouble(-10.953, 3.14159);
        Assertions.assertEquals(double9465, -34.409835269999995);
    }
    @Test
    public void test2075() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        java.lang.String string2238 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string2238, "NICE");
        double double7147 = calculadora792.divDouble(10.953, -105.5);
        Assertions.assertEquals(double7147, -0.10381990521327014);
        boolean boolean840 = calculadora792.maior(1000, 100);
        Assertions.assertEquals(boolean840, true);
    }
    @Test
    public void test2076() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string364 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string364, "hello");
        double double8337 = calculadora792.subDouble(105.5, 1.99);
        Assertions.assertEquals(double8337, 103.51);
        int int7251 = calculadora792.mulInt(-100, -500);
        Assertions.assertEquals(int7251, 50000);
        double double2338 = calculadora792.divDouble(10.953, 10.953);
        Assertions.assertEquals(double2338, 1.0);
        boolean boolean1970 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean1970, true);
    }
    @Test
    public void test2077() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5158 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5158, 500000);
        java.lang.String string6765 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string6765, "ipsum");
        int int2734 = calculadora792.divInt(0, -1000);
        Assertions.assertEquals(int2734, 0);
        boolean boolean996 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean996, true);
    }
    @Test
    public void test2079() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int372 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int372, 1000);
    }
    @Test
    public void test2082() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1160 = calculadora792.maior(250, -1000);
        Assertions.assertEquals(boolean1160, true);
        double double9225 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double9225, 0.0);
        java.lang.String string7356 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7356, "go");
        java.lang.String string1408 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string1408, "NICE");
        double double5349 = calculadora792.subDouble(-10.953, -1.55);
        Assertions.assertEquals(double5349, -9.402999999999999);
        int int4630 = calculadora792.subInt(100, -250);
        Assertions.assertEquals(int4630, 350);
    }
    @Test
    public void test2083() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double6355 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double6355, 0.1750705852768821);
        int int580 = calculadora792.mulInt(500, 500);
        Assertions.assertEquals(int580, 250000);
    }
    @Test
    public void test2084() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double7418 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double7418, -105.5);
        java.lang.String string4682 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string4682, "top");
    }
    @Test
    public void test2085() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean3047 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3047, true);
        int int6906 = calculadora792.mulInt(-250, -100);
        Assertions.assertEquals(int6906, 25000);
        java.lang.String string545 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string545, "NICE");
    }
    @Test
    public void test2086() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        java.lang.String string8102 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string8102, "top");
        int int9682 = calculadora792.mulInt(100, -500);
        Assertions.assertEquals(int9682, -50000);
        double double5345 = calculadora792.mulDouble(-105.5, -1.55);
        Assertions.assertEquals(double5345, 163.525);
    }
    @Test
    public void test2087() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double413 = calculadora792.subDouble(10.953, 1.99);
        Assertions.assertEquals(double413, 8.963);
        int int2343 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int2343, 62500);
        boolean boolean7359 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean7359, false);
    }
    @Test
    public void test2088() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean333 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean333, false);
        boolean boolean6770 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean6770, true);
        boolean boolean4068 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean4068, true);
    }
    @Test
    public void test2089() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        double double161 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double161, -1155.5415);
        java.lang.String string4191 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string4191, "go");
        boolean boolean9426 = calculadora792.menor(100, -100);
        Assertions.assertEquals(boolean9426, false);
        int int9793 = calculadora792.subInt(1000, 0);
        Assertions.assertEquals(int9793, 1000);
    }
    @Test
    public void test2090() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        java.lang.String string6939 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string6939, "HELLO");
    }
    @Test
    public void test2091() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean7368 = calculadora792.menor(0, 250);
        Assertions.assertEquals(boolean7368, true);
        int int2435 = calculadora792.divInt(250, -500);
        Assertions.assertEquals(int2435, 0);
        int int686 = calculadora792.somaInt(500, -500);
        Assertions.assertEquals(int686, 0);
    }
    @Test
    public void test2092() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean716 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean716, false);
        boolean boolean6148 = calculadora792.and(boolean6342, true);
        Assertions.assertEquals(boolean6148, false);
        boolean boolean3369 = calculadora792.maior(250, -100);
        Assertions.assertEquals(boolean3369, true);
        boolean boolean6445 = calculadora792.maior(1000, -250);
        Assertions.assertEquals(boolean6445, true);
    }
    @Test
    public void test2093() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        boolean boolean5296 = calculadora792.maior(1000, -100);
        Assertions.assertEquals(boolean5296, true);
    }
    @Test
    public void test2094() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        int int5567 = calculadora792.somaInt(250, -1000);
        Assertions.assertEquals(int5567, -750);
    }
    @Test
    public void test2095() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        boolean boolean6795 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean6795, true);
        boolean boolean3006 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3006, true);
    }
    @Test
    public void test2096() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
        int int2251 = calculadora792.subInt(500, 250);
        Assertions.assertEquals(int2251, 250);
        int int2512 = calculadora792.somaInt(1000, 0);
        Assertions.assertEquals(int2512, 1000);
    }
    @Test
    public void test2097() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        int int6720 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int6720, -150);
        java.lang.String string4484 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string4484, "LOREM");
        java.lang.String string9079 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string9079, "GO");
        java.lang.String string593 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string593, "VALEU");
    }
    @Test
    public void test2098() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        java.lang.String string2852 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2852, "ipsum");
    }
    @Test
    public void test2099() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2061 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2061, "VALEU");
        double double9880 = calculadora792.somaDouble(-1.55, -10.953);
        Assertions.assertEquals(double9880, -12.503);
        boolean boolean4899 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean4899, true);
        java.lang.String string3008 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string3008, "LOREM");
        java.lang.String string9155 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string9155, "top");
    }
    @Test
    public void test2101() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        int int6731 = calculadora792.subInt(-250, 100);
        Assertions.assertEquals(int6731, -350);
        boolean boolean4055 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean4055, true);
        java.lang.String string1302 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string1302, "GO");
    }
    @Test
    public void test2102() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int6318 = calculadora792.mulInt(-250, -1000);
        Assertions.assertEquals(int6318, 250000);
        java.lang.String string4262 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string4262, "HELLO");
        int int709 = calculadora792.somaInt(1000, 0);
        Assertions.assertEquals(int709, 1000);
    }
    @Test
    public void test2105() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        double double1722 = calculadora792.mulDouble(-1.55, -105.5);
        Assertions.assertEquals(double1722, 163.525);
    }
    @Test
    public void test2106() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        boolean boolean39 = calculadora792.menor(500, -1000);
        Assertions.assertEquals(boolean39, false);
        boolean boolean1481 = calculadora792.or(boolean39, false);
        Assertions.assertEquals(boolean1481, false);
    }
    @Test
    public void test2107() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1741 = calculadora792.subInt(-250, 0);
        Assertions.assertEquals(int1741, -250);
        java.lang.String string7554 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string7554, "lorem");
    }
    @Test
    public void test2108() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        boolean boolean6352 = calculadora792.or(false, boolean2390);
        Assertions.assertEquals(boolean6352, false);
        double double827 = calculadora792.divDouble(0.55, -105.5);
        Assertions.assertEquals(double827, -0.005213270142180095);
        int int7788 = calculadora792.somaInt(-1000, -1000);
        Assertions.assertEquals(int7788, -2000);
    }
    @Test
    public void test2109() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string364 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string364, "hello");
        double double8337 = calculadora792.subDouble(105.5, 1.99);
        Assertions.assertEquals(double8337, 103.51);
        int int7251 = calculadora792.mulInt(-100, -500);
        Assertions.assertEquals(int7251, 50000);
        double double2225 = calculadora792.subDouble(1.99, 1.99);
        Assertions.assertEquals(double2225, 0.0);
    }
    @Test
    public void test2110() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int2069 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2069, 900);
        boolean boolean89 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean89, true);
        double double3408 = calculadora792.divDouble(-105.5, 1.99);
        Assertions.assertEquals(double3408, -53.015075376884425);
        double double2575 = calculadora792.divDouble(10.953, 10.953);
        Assertions.assertEquals(double2575, 1.0);
    }
    @Test
    public void test2111() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean6719 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean6719, true);
        double double6665 = calculadora792.mulDouble(-1.55, 0.55);
        Assertions.assertEquals(double6665, -0.8525000000000001);
        java.lang.String string7232 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7232, "HELLO");
    }
    @Test
    public void test2114() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double7431 = calculadora792.somaDouble(0.55, 10.953);
        Assertions.assertEquals(double7431, 11.503);
        double double7098 = calculadora792.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double7098, 4.69159);
        double double7914 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7914, 0.55);
        java.lang.String string5690 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5690, "HELLO");
    }
    @Test
    public void test2115() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        boolean boolean3280 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean3280, false);
        java.lang.String string7022 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7022, "LOREM");
        boolean boolean7650 = calculadora792.maior(500, 250);
        Assertions.assertEquals(boolean7650, true);
    }
    @Test
    public void test2117() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        int int8387 = calculadora792.divInt(-500, -1000);
        Assertions.assertEquals(int8387, 0);
        double double4590 = calculadora792.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double4590, 0.0);
    }
    @Test
    public void test2119() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        java.lang.String string5583 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string5583, "GO");
        boolean boolean1693 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean1693, false);
        java.lang.String string2066 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string2066, "lorem");
        double double7962 = calculadora792.divDouble(105.5, -105.5);
        Assertions.assertEquals(double7962, -1.0);
        double double6182 = calculadora792.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double6182, 1.5786884422110552);
    }
    @Test
    public void test2120() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int2069 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2069, 900);
        int int3743 = calculadora792.mulInt(100, -100);
        Assertions.assertEquals(int3743, -10000);
        boolean boolean4499 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4499, false);
        double double4019 = calculadora792.subDouble(-10.953, 105.5);
        Assertions.assertEquals(double4019, -116.453);
    }
    @Test
    public void test2122() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string4791 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string4791, "lorem");
    }
    @Test
    public void test2124() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
        boolean boolean8126 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean8126, true);
        java.lang.String string9508 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9508, "hello");
    }
    @Test
    public void test2127() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        boolean boolean9874 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean9874, false);
        boolean boolean5086 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean5086, true);
        boolean boolean5568 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean5568, true);
        double double575 = calculadora792.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double575, -14.09459);
        boolean boolean9267 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean9267, true);
        int int8774 = calculadora792.subInt(100, 500);
        Assertions.assertEquals(int8774, -400);
    }
    @Test
    public void test2129() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean8498 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean8498, false);
        int int9866 = calculadora792.divInt(-250, -250);
        Assertions.assertEquals(int9866, 1);
        double double3759 = calculadora792.mulDouble(105.5, 105.5);
        Assertions.assertEquals(double3759, 11130.25);
        int int9600 = calculadora792.subInt(500, 1000);
        Assertions.assertEquals(int9600, -500);
    }
    @Test
    public void test2130() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        boolean boolean5296 = calculadora792.maior(1000, -100);
        Assertions.assertEquals(boolean5296, true);
        boolean boolean2035 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2035, true);
    }
    @Test
    public void test2131() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        boolean boolean9874 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean9874, false);
        boolean boolean5086 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean5086, true);
        boolean boolean5568 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean5568, true);
        double double575 = calculadora792.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double575, -14.09459);
        boolean boolean9267 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean9267, true);
        boolean boolean6206 = calculadora792.maior(250, 250);
        Assertions.assertEquals(boolean6206, false);
    }
    @Test
    public void test2132() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        boolean boolean6645 = calculadora792.or(boolean197, false);
        Assertions.assertEquals(boolean6645, false);
    }
    @Test
    public void test2133() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        boolean boolean3089 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean3089, false);
        int int977 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int977, -25000);
        double double3701 = calculadora792.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double3701, -9.632064274627956);
        double double8722 = calculadora792.somaDouble(-10.953, 1.99);
        Assertions.assertEquals(double8722, -8.963);
        int int7855 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int7855, 350);
    }
    @Test
    public void test2134() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        int int9309 = calculadora792.divInt(1000, 250);
        Assertions.assertEquals(int9309, 4);
        boolean boolean842 = calculadora792.menor(0, 1000);
        Assertions.assertEquals(boolean842, true);
        double double6119 = calculadora792.subDouble(0.0, 1.99);
        Assertions.assertEquals(double6119, -1.99);
    }
    @Test
    public void test2135() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        double double8439 = calculadora792.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double8439, 0.0);
        boolean boolean8856 = calculadora792.menor(-500, 1000);
        Assertions.assertEquals(boolean8856, true);
    }
    @Test
    public void test2136() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean2980 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2980, false);
        int int2304 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int2304, -250000);
        java.lang.String string5386 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string5386, "NICE");
    }
    @Test
    public void test2137() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int6458 = calculadora792.subInt(0, 250);
        Assertions.assertEquals(int6458, -250);
        boolean boolean2061 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2061, false);
        java.lang.String string1250 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string1250, "IPSUM");
        double double868 = calculadora792.mulDouble(-10.953, 0.0);
        Assertions.assertEquals(double868, -0.0);
    }
    @Test
    public void test2138() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        int int6258 = calculadora792.mulInt(500, 1000);
        Assertions.assertEquals(int6258, 500000);
        double double6609 = calculadora792.somaDouble(3.14159, 105.5);
        Assertions.assertEquals(double6609, 108.64159);
        boolean boolean8344 = calculadora792.menor(-250, -500);
        Assertions.assertEquals(boolean8344, false);
        boolean boolean9728 = calculadora792.menor(-250, 0);
        Assertions.assertEquals(boolean9728, true);
    }
    @Test
    public void test2139() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
        boolean boolean712 = calculadora792.maior(250, 0);
        Assertions.assertEquals(boolean712, true);
        java.lang.String string1684 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string1684, "ipsum");
    }
    @Test
    public void test2140() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean8079 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8079, true);
    }
    @Test
    public void test2142() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double6675 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double6675, 1.7278745);
        double double4173 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4173, -107.05);
        java.lang.String string3159 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string3159, "HELLO");
        double double4647 = calculadora792.subDouble(-10.953, 0.0);
        Assertions.assertEquals(double4647, -10.953);
        boolean boolean4312 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean4312, true);
        java.lang.String string1069 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string1069, "ipsum");
    }
    @Test
    public void test2143() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        boolean boolean8523 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8523, true);
        boolean boolean3029 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3029, true);
        boolean boolean297 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean297, true);
        boolean boolean246 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean246, false);
    }
    @Test
    public void test2144() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        int int9309 = calculadora792.divInt(1000, 250);
        Assertions.assertEquals(int9309, 4);
        boolean boolean842 = calculadora792.menor(0, 1000);
        Assertions.assertEquals(boolean842, true);
        int int6140 = calculadora792.somaInt(-500, 500);
        Assertions.assertEquals(int6140, 0);
    }
    @Test
    public void test2145() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        boolean boolean3575 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean3575, false);
        java.lang.String string7065 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string7065, "hello");
        boolean boolean1554 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1554, false);
    }
    @Test
    public void test2146() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean3047 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3047, true);
        boolean boolean5809 = calculadora792.maior(1000, -500);
        Assertions.assertEquals(boolean5809, true);
        boolean boolean5910 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5910, false);
    }
    @Test
    public void test2147() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        java.lang.String string401 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string401, "HELLO");
        double double1080 = calculadora792.somaDouble(0.0, 0.55);
        Assertions.assertEquals(double1080, 0.55);
    }
    @Test
    public void test2148() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        boolean boolean4371 = calculadora792.maior(0, 250);
        Assertions.assertEquals(boolean4371, false);
    }
    @Test
    public void test2150() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        java.lang.String string559 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string559, "lorem");
    }
    @Test
    public void test2151() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
        java.lang.String string5913 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5913, "valeu");
        double double9157 = calculadora792.somaDouble(10.953, 3.14159);
        Assertions.assertEquals(double9157, 14.09459);
        int int8266 = calculadora792.mulInt(-1000, 250);
        Assertions.assertEquals(int8266, -250000);
    }
    @Test
    public void test2152() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string364 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string364, "hello");
        double double8337 = calculadora792.subDouble(105.5, 1.99);
        Assertions.assertEquals(double8337, 103.51);
        boolean boolean1024 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean1024, false);
        boolean boolean8976 = calculadora792.maior(250, 100);
        Assertions.assertEquals(boolean8976, true);
    }
    @Test
    public void test2153() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        java.lang.String string1403 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string1403, "LOREM");
        boolean boolean5582 = calculadora792.menor(-100, -250);
        Assertions.assertEquals(boolean5582, false);
        boolean boolean594 = calculadora792.maior(-250, -100);
        Assertions.assertEquals(boolean594, false);
        double double6907 = calculadora792.mulDouble(-105.5, 105.5);
        Assertions.assertEquals(double6907, -11130.25);
        boolean boolean6658 = calculadora792.maior(250, 0);
        Assertions.assertEquals(boolean6658, true);
    }
    @Test
    public void test2154() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        boolean boolean1166 = calculadora792.menor(1000, 500);
        Assertions.assertEquals(boolean1166, false);
        double double8990 = calculadora792.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double8990, -104.95);
        int int6263 = calculadora792.somaInt(250, 0);
        Assertions.assertEquals(int6263, 250);
    }
    @Test
    public void test2155() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        int int8067 = calculadora792.somaInt(-500, 100);
        Assertions.assertEquals(int8067, -400);
        double double4720 = calculadora792.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double4720, 1155.5415);
        boolean boolean6232 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6232, true);
        java.lang.String string8911 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string8911, "ipsum");
    }
    @Test
    public void test2157() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        int int6089 = calculadora792.divInt(0, 500);
        Assertions.assertEquals(int6089, 0);
        boolean boolean9978 = calculadora792.menor(250, 250);
        Assertions.assertEquals(boolean9978, false);
        double double909 = calculadora792.divDouble(0.55, 105.5);
        Assertions.assertEquals(double909, 0.005213270142180095);
        boolean boolean5538 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean5538, false);
    }
    @Test
    public void test2158() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        boolean boolean7219 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean7219, true);
        double double4967 = calculadora792.somaDouble(0.0, 1.99);
        Assertions.assertEquals(double4967, 1.99);
        double double3300 = calculadora792.divDouble(-105.5, -105.5);
        Assertions.assertEquals(double3300, 1.0);
        double double2066 = calculadora792.divDouble(10.953, 0.55);
        Assertions.assertEquals(double2066, 19.91454545454545);
    }
    @Test
    public void test2159() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        double double3232 = calculadora792.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double3232, -9.632064274627956);
        boolean boolean5734 = calculadora792.menor(-250, 250);
        Assertions.assertEquals(boolean5734, true);
        int int3230 = calculadora792.divInt(500, 100);
        Assertions.assertEquals(int3230, 5);
        java.lang.String string2356 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string2356, "LOREM");
    }
    @Test
    public void test2160() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
        java.lang.String string2110 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string2110, "nice");
        java.lang.String string7133 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string7133, "hi");
        java.lang.String string9488 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string9488, "ipsum");
    }
    @Test
    public void test2161() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        java.lang.String string3796 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3796, "nice");
        double double5550 = calculadora792.somaDouble(-1.55, 105.5);
        Assertions.assertEquals(double5550, 103.95);
        boolean boolean733 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean733, false);
    }
    @Test
    public void test2162() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        java.lang.String string6063 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6063, "LOREM");
        int int6573 = calculadora792.somaInt(500, 0);
        Assertions.assertEquals(int6573, 500);
    }
    @Test
    public void test2163() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int8945 = calculadora792.divInt(-500, 1000);
        Assertions.assertEquals(int8945, 0);
        double double9569 = calculadora792.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double9569, -209.945);
        double double4089 = calculadora792.divDouble(105.5, 1.99);
        Assertions.assertEquals(double4089, 53.015075376884425);
        boolean boolean7289 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean7289, true);
    }
    @Test
    public void test2164() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        int int4464 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int4464, -600);
        double double8811 = calculadora792.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double8811, 0.43999999999999995);
    }
    @Test
    public void test2165() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        boolean boolean7322 = calculadora792.maior(1000, 250);
        Assertions.assertEquals(boolean7322, true);
        int int1768 = calculadora792.subInt(1000, -100);
        Assertions.assertEquals(int1768, 1100);
    }
    @Test
    public void test2167() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        boolean boolean5296 = calculadora792.maior(1000, -100);
        Assertions.assertEquals(boolean5296, true);
        double double4566 = calculadora792.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double4566, 0.0);
    }
    @Test
    public void test2169() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int352 = calculadora792.subInt(100, -100);
        Assertions.assertEquals(int352, 200);
        boolean boolean5110 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean5110, true);
        java.lang.String string7502 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string7502, "lorem");
        double double8279 = calculadora792.subDouble(-105.5, -10.953);
        Assertions.assertEquals(double8279, -94.547);
    }
    @Test
    public void test2171() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        java.lang.String string5315 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5315, "valeu");
        double double4243 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4243, -107.05);
        int int2115 = calculadora792.subInt(-1000, 100);
        Assertions.assertEquals(int2115, -1100);
        boolean boolean3018 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean3018, false);
        boolean boolean4196 = calculadora792.menor(1000, 0);
        Assertions.assertEquals(boolean4196, false);
    }
    @Test
    public void test2172() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1709 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1709, false);
        boolean boolean17 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean17, false);
    }
    @Test
    public void test2173() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        boolean boolean3280 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean3280, false);
        java.lang.String string7478 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string7478, "nice");
        int int8685 = calculadora792.mulInt(100, 0);
        Assertions.assertEquals(int8685, 0);
    }
    @Test
    public void test2174() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9528 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double9528, 0.0);
        double double8971 = calculadora792.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double8971, -0.0);
        double double9288 = calculadora792.subDouble(-10.953, 0.0);
        Assertions.assertEquals(double9288, -10.953);
    }
    @Test
    public void test2175() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int2875 = calculadora792.subInt(1000, -500);
        Assertions.assertEquals(int2875, 1500);
        double double294 = calculadora792.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double294, 119.96820899999999);
        double double2243 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double2243, 0.0502145530904775);
        boolean boolean9617 = calculadora792.maior(-100, 100);
        Assertions.assertEquals(boolean9617, false);
    }
    @Test
    public void test2176() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double6204 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double6204, -0.0);
        double double2246 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2246, 3.14159);
        double double5598 = calculadora792.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double5598, 1.0945);
        java.lang.String string7820 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string7820, "VALEU");
        double double8594 = calculadora792.mulDouble(1.99, -10.953);
        Assertions.assertEquals(double8594, -21.79647);
    }
    @Test
    public void test2177() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double6204 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double6204, -0.0);
        boolean boolean7226 = calculadora792.maior(1000, 100);
        Assertions.assertEquals(boolean7226, true);
        double double7007 = calculadora792.subDouble(0.55, 0.55);
        Assertions.assertEquals(double7007, 0.0);
    }
    @Test
    public void test2179() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        int int4464 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int4464, -600);
        boolean boolean2170 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean2170, false);
        double double8543 = calculadora792.mulDouble(-105.5, 105.5);
        Assertions.assertEquals(double8543, -11130.25);
        double double1829 = calculadora792.subDouble(0.55, 10.953);
        Assertions.assertEquals(double1829, -10.402999999999999);
        boolean boolean175 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean175, true);
    }
    @Test
    public void test2180() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        boolean boolean2238 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean2238, false);
        int int9833 = calculadora792.divInt(-250, 1000);
        Assertions.assertEquals(int9833, 0);
        java.lang.String string7632 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7632, "go");
    }
    @Test
    public void test2181() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        int int272 = calculadora792.mulInt(250, 100);
        Assertions.assertEquals(int272, 25000);
        boolean boolean2320 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean2320, true);
        double double122 = calculadora792.divDouble(-10.953, 105.5);
        Assertions.assertEquals(double122, -0.10381990521327014);
    }
    @Test
    public void test2182() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        java.lang.String string5315 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5315, "valeu");
        boolean boolean8167 = calculadora792.menor(-1000, -100);
        Assertions.assertEquals(boolean8167, true);
    }
    @Test
    public void test2183() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean1470 = calculadora792.maior(100, 1000);
        Assertions.assertEquals(boolean1470, false);
    }
    @Test
    public void test2187() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        boolean boolean7924 = calculadora792.and(boolean203, true);
        Assertions.assertEquals(boolean7924, false);
    }
    @Test
    public void test2188() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        java.lang.String string4372 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4372, "GO");
        int int9899 = calculadora792.divInt(-1000, 1000);
        Assertions.assertEquals(int9899, -1);
        boolean boolean9307 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9307, true);
        java.lang.String string8705 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string8705, "NICE");
    }
    @Test
    public void test2189() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        boolean boolean4322 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4322, false);
        boolean boolean9436 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean9436, false);
    }
    @Test
    public void test2190() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        boolean boolean3575 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean3575, false);
        boolean boolean1087 = calculadora792.and(boolean3575, true);
        Assertions.assertEquals(boolean1087, false);
        double double2350 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double2350, -1.55);
        java.lang.String string6457 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string6457, "GO");
        int int3474 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int3474, 125000);
        double double3341 = calculadora792.somaDouble(105.5, 1.99);
        Assertions.assertEquals(double3341, 107.49);
    }
    @Test
    public void test2191() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string1743 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string1743, "nice");
        int int7881 = calculadora792.divInt(-1000, -250);
        Assertions.assertEquals(int7881, 4);
    }
    @Test
    public void test2192() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double7081 = calculadora792.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double7081, 0.0);
    }
    @Test
    public void test2193() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        boolean boolean5993 = calculadora792.menor(1000, -100);
        Assertions.assertEquals(boolean5993, false);
        double double7626 = calculadora792.somaDouble(10.953, -1.55);
        Assertions.assertEquals(double7626, 9.402999999999999);
    }
    @Test
    public void test2194() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        int int6720 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int6720, -150);
        boolean boolean5297 = calculadora792.or(boolean3418, false);
        Assertions.assertEquals(boolean5297, false);
        int int2305 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int2305, 500);
        java.lang.String string6933 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string6933, "TOP");
        double double5335 = calculadora792.subDouble(1.99, 10.953);
        Assertions.assertEquals(double5335, -8.963);
    }
    @Test
    public void test2195() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
        double double9163 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9163, 0.0);
        boolean boolean9315 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9315, true);
        boolean boolean6910 = calculadora792.menor(-1000, -500);
        Assertions.assertEquals(boolean6910, true);
    }
    @Test
    public void test2197() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        java.lang.String string3636 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3636, "IPSUM");
    }
    @Test
    public void test2198() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double157 = calculadora792.divDouble(105.5, -1.55);
        Assertions.assertEquals(double157, -68.06451612903226);
        int int9240 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int9240, -250000);
        boolean boolean4312 = calculadora792.maior(-100, 250);
        Assertions.assertEquals(boolean4312, false);
    }
    @Test
    public void test2199() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1741 = calculadora792.subInt(-250, 0);
        Assertions.assertEquals(int1741, -250);
        boolean boolean1975 = calculadora792.menor(-1000, 0);
        Assertions.assertEquals(boolean1975, true);
        java.lang.String string2955 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string2955, "top");
        java.lang.String string2968 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string2968, "go");
    }
    @Test
    public void test2200() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
        boolean boolean6417 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean6417, false);
        boolean boolean42 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean42, true);
    }
    @Test
    public void test2201() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean3329 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean3329, true);
        int int4064 = calculadora792.divInt(500, 100);
        Assertions.assertEquals(int4064, 5);
    }
    @Test
    public void test2203() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean6602 = calculadora792.maior(0, 500);
        Assertions.assertEquals(boolean6602, false);
        int int9941 = calculadora792.somaInt(100, 100);
        Assertions.assertEquals(int9941, 200);
        int int9092 = calculadora792.subInt(250, -100);
        Assertions.assertEquals(int9092, 350);
    }
    @Test
    public void test2204() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        boolean boolean4322 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4322, false);
        int int5619 = calculadora792.subInt(500, 1000);
        Assertions.assertEquals(int5619, -500);
    }
    @Test
    public void test2205() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        boolean boolean2893 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2893, true);
        double double9726 = calculadora792.subDouble(0.55, 0.0);
        Assertions.assertEquals(double9726, 0.55);
        java.lang.String string4374 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4374, "GO");
        java.lang.String string2085 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string2085, "TOP");
    }
    @Test
    public void test2206() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean3011 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3011, true);
        int int5745 = calculadora792.divInt(-500, -500);
        Assertions.assertEquals(int5745, 1);
        boolean boolean3842 = calculadora792.menor(1000, 500);
        Assertions.assertEquals(boolean3842, false);
    }
    @Test
    public void test2207() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
        double double4938 = calculadora792.subDouble(10.953, 105.5);
        Assertions.assertEquals(double4938, -94.547);
        boolean boolean8772 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean8772, false);
        boolean boolean2602 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2602, true);
    }
    @Test
    public void test2209() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        int int8771 = calculadora792.mulInt(-1000, -250);
        Assertions.assertEquals(int8771, 250000);
        double double2694 = calculadora792.subDouble(1.99, 0.55);
        Assertions.assertEquals(double2694, 1.44);
    }
    @Test
    public void test2210() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
        double double4938 = calculadora792.subDouble(10.953, 105.5);
        Assertions.assertEquals(double4938, -94.547);
        int int5102 = calculadora792.somaInt(-1000, 250);
        Assertions.assertEquals(int5102, -750);
        java.lang.String string7438 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string7438, "HI");
    }
    @Test
    public void test2212() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int4727 = calculadora792.somaInt(-1000, 100);
        Assertions.assertEquals(int4727, -900);
        java.lang.String string3153 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string3153, "top");
    }
    @Test
    public void test2214() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        java.lang.String string7699 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7699, "top");
        double double191 = calculadora792.divDouble(0.0, -10.953);
        Assertions.assertEquals(double191, -0.0);
        java.lang.String string6489 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string6489, "HI");
        int int9923 = calculadora792.divInt(100, -500);
        Assertions.assertEquals(int9923, 0);
    }
    @Test
    public void test2215() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean4468 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean4468, true);
        java.lang.String string9420 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string9420, "top");
        double double3840 = calculadora792.divDouble(-105.5, 1.99);
        Assertions.assertEquals(double3840, -53.015075376884425);
        boolean boolean1442 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean1442, true);
    }
    @Test
    public void test2217() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        java.lang.String string4501 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string4501, "TOP");
        double double9893 = calculadora792.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double9893, -58.025000000000006);
        boolean boolean9981 = calculadora792.menor(-500, -250);
        Assertions.assertEquals(boolean9981, true);
    }
    @Test
    public void test2218() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        double double3982 = calculadora792.somaDouble(10.953, 3.14159);
        Assertions.assertEquals(double3982, 14.09459);
    }
    @Test
    public void test2220() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        double double7535 = calculadora792.somaDouble(0.0, 0.55);
        Assertions.assertEquals(double7535, 0.55);
        int int8967 = calculadora792.divInt(0, -1000);
        Assertions.assertEquals(int8967, 0);
    }
    @Test
    public void test2221() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean2961 = calculadora792.maior(1000, 250);
        Assertions.assertEquals(boolean2961, true);
        boolean boolean8569 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean8569, true);
        boolean boolean6161 = calculadora792.and(boolean8569, true);
        Assertions.assertEquals(boolean6161, false);
    }
    @Test
    public void test2223() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        int int522 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int522, 125000);
        boolean boolean4855 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean4855, false);
    }
    @Test
    public void test2224() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean3047 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3047, true);
        double double8713 = calculadora792.somaDouble(105.5, -105.5);
        Assertions.assertEquals(double8713, 0.0);
    }
    @Test
    public void test2225() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1680 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int1680, 350);
        int int4646 = calculadora792.mulInt(-100, 0);
        Assertions.assertEquals(int4646, 0);
        boolean boolean4498 = calculadora792.or(boolean2390, false);
        Assertions.assertEquals(boolean4498, false);
        double double9244 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double9244, 1.7278745);
        boolean boolean4563 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean4563, true);
    }
    @Test
    public void test2226() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
        double double4938 = calculadora792.subDouble(10.953, 105.5);
        Assertions.assertEquals(double4938, -94.547);
        boolean boolean8772 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean8772, false);
        int int5980 = calculadora792.somaInt(500, 1000);
        Assertions.assertEquals(int5980, 1500);
    }
    @Test
    public void test2227() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double7427 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double7427, 108.64159);
        double double4284 = calculadora792.somaDouble(1.99, 0.55);
        Assertions.assertEquals(double4284, 2.54);
    }
    @Test
    public void test2228() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean5835 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5835, false);
        java.lang.String string3307 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string3307, "valeu");
        boolean boolean3237 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3237, false);
        double double6351 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double6351, -16.977149999999998);
        boolean boolean925 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean925, false);
    }
    @Test
    public void test2229() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int4743 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4743, 62500);
        boolean boolean6507 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean6507, true);
        java.lang.String string3307 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string3307, "go");
        boolean boolean2614 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean2614, false);
        boolean boolean5007 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean5007, true);
    }
    @Test
    public void test2230() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        boolean boolean6853 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean6853, false);
        boolean boolean9412 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9412, true);
        boolean boolean5920 = calculadora792.menor(-250, 0);
        Assertions.assertEquals(boolean5920, true);
    }
    @Test
    public void test2231() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        boolean boolean1166 = calculadora792.menor(1000, 500);
        Assertions.assertEquals(boolean1166, false);
        double double8990 = calculadora792.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double8990, -104.95);
        int int2230 = calculadora792.somaInt(1000, -250);
        Assertions.assertEquals(int2230, 750);
    }
    @Test
    public void test2232() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        java.lang.String string1284 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string1284, "hello");
        java.lang.String string2270 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string2270, "hello");
    }
    @Test
    public void test2233() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        java.lang.String string3279 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3279, "NICE");
        int int5004 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int5004, -600);
        int int8410 = calculadora792.mulInt(-100, 250);
        Assertions.assertEquals(int8410, -25000);
        java.lang.String string8271 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string8271, "VALEU");
    }
    @Test
    public void test2234() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        boolean boolean3089 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean3089, false);
        int int977 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int977, -25000);
        double double3701 = calculadora792.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double3701, -9.632064274627956);
        double double59 = calculadora792.subDouble(1.99, 10.953);
        Assertions.assertEquals(double59, -8.963);
    }
    @Test
    public void test2235() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double6204 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double6204, -0.0);
        boolean boolean7226 = calculadora792.maior(1000, 100);
        Assertions.assertEquals(boolean7226, true);
        boolean boolean7916 = calculadora792.maior(500, -250);
        Assertions.assertEquals(boolean7916, true);
    }
    @Test
    public void test2236() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
        java.lang.String string4439 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string4439, "HI");
        int int4390 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4390, -250000);
        boolean boolean8765 = calculadora792.or(false, boolean6721);
        Assertions.assertEquals(boolean8765, false);
        java.lang.String string2022 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2022, "VALEU");
        boolean boolean8248 = calculadora792.menor(-500, -500);
        Assertions.assertEquals(boolean8248, false);
        boolean boolean2004 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean2004, false);
    }
    @Test
    public void test2237() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        double double5117 = calculadora792.mulDouble(-105.5, 1.99);
        Assertions.assertEquals(double5117, -209.945);
        java.lang.String string7176 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string7176, "hi");
        java.lang.String string936 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string936, "hi");
    }
    @Test
    public void test2238() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double4694 = calculadora792.subDouble(0.0, -1.55);
        Assertions.assertEquals(double4694, 1.55);
        int int1644 = calculadora792.subInt(-500, -250);
        Assertions.assertEquals(int1644, -250);
        boolean boolean3552 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3552, true);
        java.lang.String string3267 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3267, "hi");
        boolean boolean8728 = calculadora792.menor(1000, -1000);
        Assertions.assertEquals(boolean8728, false);
    }
    @Test
    public void test2240() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean3618 = calculadora792.menor(-500, 0);
        Assertions.assertEquals(boolean3618, true);
    }
    @Test
    public void test2241() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        int int8067 = calculadora792.somaInt(-500, 100);
        Assertions.assertEquals(int8067, -400);
        int int7856 = calculadora792.divInt(-250, -250);
        Assertions.assertEquals(int7856, 1);
        double double2887 = calculadora792.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double2887, -21.906);
    }
    @Test
    public void test2242() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean4468 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean4468, true);
        double double4304 = calculadora792.somaDouble(-105.5, -105.5);
        Assertions.assertEquals(double4304, -211.0);
        int int9570 = calculadora792.divInt(1000, -100);
        Assertions.assertEquals(int9570, -10);
    }
    @Test
    public void test2243() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        int int4710 = calculadora792.subInt(1000, 0);
        Assertions.assertEquals(int4710, 1000);
        double double5943 = calculadora792.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double5943, 6.2517641);
        int int8890 = calculadora792.subInt(-250, 250);
        Assertions.assertEquals(int8890, -500);
        double double2239 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double2239, 2.59159);
    }
    @Test
    public void test2244() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        double double6221 = calculadora792.somaDouble(3.14159, 0.55);
        Assertions.assertEquals(double6221, 3.6915899999999997);
        java.lang.String string6378 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string6378, "VALEU");
        java.lang.String string7943 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string7943, "GO");
    }
    @Test
    public void test2245() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean5835 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5835, false);
        boolean boolean7745 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean7745, true);
        double double155 = calculadora792.divDouble(0.55, -105.5);
        Assertions.assertEquals(double155, -0.005213270142180095);
    }
    @Test
    public void test2247() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int6586 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int6586, 62500);
        double double3049 = calculadora792.mulDouble(105.5, -105.5);
        Assertions.assertEquals(double3049, -11130.25);
        java.lang.String string5205 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5205, "valeu");
    }
    @Test
    public void test2248() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        double double1516 = calculadora792.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double1516, -102.35841);
        double double1218 = calculadora792.subDouble(105.5, -10.953);
        Assertions.assertEquals(double1218, 116.453);
    }
    @Test
    public void test2249() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean1470 = calculadora792.maior(100, 1000);
        Assertions.assertEquals(boolean1470, false);
        boolean boolean5032 = calculadora792.maior(-100, 100);
        Assertions.assertEquals(boolean5032, false);
    }
    @Test
    public void test2251() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean6946 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean6946, false);
        double double1280 = calculadora792.somaDouble(-1.55, -1.55);
        Assertions.assertEquals(double1280, -3.1);
        boolean boolean8407 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean8407, true);
        double double5091 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double5091, 5.13159);
        java.lang.String string646 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string646, "hi");
    }
    @Test
    public void test2253() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        java.lang.String string8102 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string8102, "top");
        int int9682 = calculadora792.mulInt(100, -500);
        Assertions.assertEquals(int9682, -50000);
        boolean boolean5944 = calculadora792.maior(250, -250);
        Assertions.assertEquals(boolean5944, true);
    }
    @Test
    public void test2254() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        java.lang.String string401 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string401, "HELLO");
        java.lang.String string7739 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string7739, "GO");
    }
    @Test
    public void test2255() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        double double4574 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double4574, -103.51);
        boolean boolean2048 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean2048, true);
        int int7545 = calculadora792.mulInt(250, 1000);
        Assertions.assertEquals(int7545, 250000);
    }
    @Test
    public void test2257() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string1743 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string1743, "nice");
        boolean boolean3713 = calculadora792.maior(-500, 0);
        Assertions.assertEquals(boolean3713, false);
    }
    @Test
    public void test2258() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        int int4972 = calculadora792.mulInt(500, 250);
        Assertions.assertEquals(int4972, 125000);
        java.lang.String string6510 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string6510, "valeu");
    }
    @Test
    public void test2259() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean6333 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6333, false);
        int int8783 = calculadora792.divInt(100, 1000);
        Assertions.assertEquals(int8783, 0);
        java.lang.String string5278 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5278, "valeu");
        boolean boolean5320 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5320, false);
    }
    @Test
    public void test2260() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        int int1251 = calculadora792.somaInt(100, 500);
        Assertions.assertEquals(int1251, 600);
    }
    @Test
    public void test2261() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        java.lang.String string812 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string812, "hello");
        java.lang.String string1838 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string1838, "hi");
        int int58 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int58, 0);
    }
    @Test
    public void test2262() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        double double4207 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4207, 34.409835269999995);
        java.lang.String string1466 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string1466, "IPSUM");
        boolean boolean6305 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean6305, false);
        double double3772 = calculadora792.somaDouble(1.99, 3.14159);
        Assertions.assertEquals(double3772, 5.13159);
    }
    @Test
    public void test2263() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double157 = calculadora792.divDouble(105.5, -1.55);
        Assertions.assertEquals(double157, -68.06451612903226);
        double double4464 = calculadora792.divDouble(-105.5, 0.55);
        Assertions.assertEquals(double4464, -191.8181818181818);
        java.lang.String string1431 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string1431, "HELLO");
    }
    @Test
    public void test2264() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        java.lang.String string446 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string446, "TOP");
        java.lang.String string9767 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string9767, "TOP");
    }
    @Test
    public void test2267() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double586 = calculadora792.subDouble(-105.5, 10.953);
        Assertions.assertEquals(double586, -116.453);
    }
    @Test
    public void test2268() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8229 = calculadora792.divDouble(-10.953, -1.55);
        Assertions.assertEquals(double8229, 7.066451612903225);
        boolean boolean1792 = calculadora792.maior(-500, -250);
        Assertions.assertEquals(boolean1792, false);
        int int8769 = calculadora792.subInt(100, 500);
        Assertions.assertEquals(int8769, -400);
    }
    @Test
    public void test2269() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        int int5237 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int5237, 0);
        boolean boolean7786 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean7786, false);
        double double1317 = calculadora792.somaDouble(1.99, 0.55);
        Assertions.assertEquals(double1317, 2.54);
    }
    @Test
    public void test2271() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        boolean boolean2893 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2893, true);
        double double9726 = calculadora792.subDouble(0.55, 0.0);
        Assertions.assertEquals(double9726, 0.55);
        java.lang.String string4374 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4374, "GO");
        java.lang.String string2085 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string2085, "TOP");
        double double3512 = calculadora792.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double3512, 6.024150000000001);
    }
    @Test
    public void test2272() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        int int7587 = calculadora792.subInt(-100, -250);
        Assertions.assertEquals(int7587, 150);
    }
    @Test
    public void test2273() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1680 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int1680, 350);
        int int4646 = calculadora792.mulInt(-100, 0);
        Assertions.assertEquals(int4646, 0);
        boolean boolean4498 = calculadora792.or(boolean2390, false);
        Assertions.assertEquals(boolean4498, false);
        double double9244 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double9244, 1.7278745);
        boolean boolean6195 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean6195, false);
    }
    @Test
    public void test2274() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int4888 = calculadora792.subInt(1000, 100);
        Assertions.assertEquals(int4888, 900);
        double double5270 = calculadora792.subDouble(-1.55, -105.5);
        Assertions.assertEquals(double5270, 103.95);
    }
    @Test
    public void test2275() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int8945 = calculadora792.divInt(-500, 1000);
        Assertions.assertEquals(int8945, 0);
        double double9569 = calculadora792.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double9569, -209.945);
        boolean boolean8654 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8654, true);
        boolean boolean9426 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean9426, false);
    }
    @Test
    public void test2276() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean2980 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2980, false);
        int int1144 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int1144, 50000);
    }
    @Test
    public void test2278() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
        boolean boolean8126 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean8126, true);
        boolean boolean9007 = calculadora792.maior(1000, -500);
        Assertions.assertEquals(boolean9007, true);
        double double1676 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double1676, -1.55);
        java.lang.String string347 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string347, "GO");
        boolean boolean4204 = calculadora792.or(false, boolean9007);
        Assertions.assertEquals(boolean4204, false);
        double double7975 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double7975, -16.977149999999998);
        double double7598 = calculadora792.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double7598, 1.5786884422110552);
    }
    @Test
    public void test2281() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        int int742 = calculadora792.subInt(-100, 500);
        Assertions.assertEquals(int742, -600);
        java.lang.String string9547 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string9547, "VALEU");
    }
    @Test
    public void test2282() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        double double1266 = calculadora792.somaDouble(-10.953, 1.99);
        Assertions.assertEquals(double1266, -8.963);
        boolean boolean7872 = calculadora792.maior(250, 250);
        Assertions.assertEquals(boolean7872, false);
    }
    @Test
    public void test2283() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double4694 = calculadora792.subDouble(0.0, -1.55);
        Assertions.assertEquals(double4694, 1.55);
        int int1644 = calculadora792.subInt(-500, -250);
        Assertions.assertEquals(int1644, -250);
        int int6377 = calculadora792.somaInt(1000, -500);
        Assertions.assertEquals(int6377, 500);
    }
    @Test
    public void test2285() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        boolean boolean9784 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean9784, false);
    }
    @Test
    public void test2286() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean716 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean716, false);
        java.lang.String string7211 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string7211, "hi");
        boolean boolean5389 = calculadora792.and(boolean6342, true);
        Assertions.assertEquals(boolean5389, false);
    }
    @Test
    public void test2287() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        java.lang.String string6622 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string6622, "nice");
        double double6989 = calculadora792.somaDouble(-10.953, 105.5);
        Assertions.assertEquals(double6989, 94.547);
        boolean boolean3296 = calculadora792.maior(500, 0);
        Assertions.assertEquals(boolean3296, true);
    }
    @Test
    public void test2288() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
        java.lang.String string5528 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string5528, "nice");
        double double9196 = calculadora792.divDouble(10.953, 105.5);
        Assertions.assertEquals(double9196, 0.10381990521327014);
        int int8472 = calculadora792.mulInt(-1000, 100);
        Assertions.assertEquals(int8472, -100000);
    }
    @Test
    public void test2289() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int4727 = calculadora792.somaInt(-1000, 100);
        Assertions.assertEquals(int4727, -900);
        boolean boolean8151 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean8151, false);
        int int7994 = calculadora792.subInt(-500, 500);
        Assertions.assertEquals(int7994, -1000);
        boolean boolean3927 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean3927, false);
    }
    @Test
    public void test2290() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
        int int2251 = calculadora792.subInt(500, 250);
        Assertions.assertEquals(int2251, 250);
        int int2512 = calculadora792.somaInt(1000, 0);
        Assertions.assertEquals(int2512, 1000);
        java.lang.String string3522 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string3522, "GO");
    }
    @Test
    public void test2291() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        double double369 = calculadora792.divDouble(0.0, 105.5);
        Assertions.assertEquals(double369, 0.0);
        int int1494 = calculadora792.divInt(500, -1000);
        Assertions.assertEquals(int1494, 0);
        int int689 = calculadora792.somaInt(0, -500);
        Assertions.assertEquals(int689, -500);
        double double2707 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double2707, 211.0);
    }
    @Test
    public void test2292() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        java.lang.String string1195 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string1195, "HI");
        boolean boolean9737 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9737, true);
        boolean boolean9366 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9366, true);
        boolean boolean5303 = calculadora792.maior(250, -500);
        Assertions.assertEquals(boolean5303, true);
    }
    @Test
    public void test2293() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        double double3673 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double3673, 94.547);
        int int9228 = calculadora792.mulInt(500, -500);
        Assertions.assertEquals(int9228, -250000);
        double double7008 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double7008, -116.453);
        java.lang.String string1046 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string1046, "lorem");
    }
    @Test
    public void test2294() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int835 = calculadora792.mulInt(-500, -500);
        Assertions.assertEquals(int835, 250000);
        double double2466 = calculadora792.divDouble(-10.953, 3.14159);
        Assertions.assertEquals(double2466, -3.4864511282503443);
    }
    @Test
    public void test2295() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean1869 = calculadora792.menor(-500, 250);
        Assertions.assertEquals(boolean1869, true);
        java.lang.String string9182 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string9182, "valeu");
    }
    @Test
    public void test2296() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        boolean boolean4321 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4321, false);
        double double9731 = calculadora792.subDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9731, -4.69159);
        double double6955 = calculadora792.divDouble(-105.5, -105.5);
        Assertions.assertEquals(double6955, 1.0);
    }
    @Test
    public void test2297() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int3003 = calculadora792.subInt(-500, -500);
        Assertions.assertEquals(int3003, 0);
        boolean boolean4632 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean4632, false);
        boolean boolean4591 = calculadora792.menor(500, -1000);
        Assertions.assertEquals(boolean4591, false);
        int int1933 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int1933, -600);
    }
    @Test
    public void test2298() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        double double4207 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4207, 34.409835269999995);
        java.lang.String string1466 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string1466, "IPSUM");
        boolean boolean6305 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean6305, false);
        int int425 = calculadora792.mulInt(100, -500);
        Assertions.assertEquals(int425, -50000);
    }
    @Test
    public void test2300() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean6946 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean6946, false);
        double double1280 = calculadora792.somaDouble(-1.55, -1.55);
        Assertions.assertEquals(double1280, -3.1);
        boolean boolean8407 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean8407, true);
        double double5091 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double5091, 5.13159);
        boolean boolean8506 = calculadora792.maior(-500, -500);
        Assertions.assertEquals(boolean8506, false);
        double double1088 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double1088, 94.547);
    }
    @Test
    public void test2301() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int6318 = calculadora792.mulInt(-250, -1000);
        Assertions.assertEquals(int6318, 250000);
        java.lang.String string4262 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string4262, "HELLO");
        java.lang.String string6017 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string6017, "NICE");
    }
    @Test
    public void test2302() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1741 = calculadora792.subInt(-250, 0);
        Assertions.assertEquals(int1741, -250);
        java.lang.String string7554 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string7554, "lorem");
        java.lang.String string7551 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string7551, "NICE");
    }
    @Test
    public void test2303() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean6602 = calculadora792.maior(0, 500);
        Assertions.assertEquals(boolean6602, false);
        int int9941 = calculadora792.somaInt(100, 100);
        Assertions.assertEquals(int9941, 200);
        int int9092 = calculadora792.subInt(250, -100);
        Assertions.assertEquals(int9092, 350);
        java.lang.String string469 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string469, "valeu");
    }
    @Test
    public void test2304() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1160 = calculadora792.maior(250, -1000);
        Assertions.assertEquals(boolean1160, true);
        boolean boolean3118 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean3118, true);
        int int5230 = calculadora792.somaInt(-500, 250);
        Assertions.assertEquals(int5230, -250);
    }
    @Test
    public void test2305() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        double double1870 = calculadora792.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double1870, 0.014691943127962086);
        int int9035 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int9035, -600);
    }
    @Test
    public void test2306() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        boolean boolean3089 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean3089, false);
        int int977 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int977, -25000);
        double double6040 = calculadora792.subDouble(0.55, 10.953);
        Assertions.assertEquals(double6040, -10.402999999999999);
        double double1600 = calculadora792.subDouble(-1.55, 0.0);
        Assertions.assertEquals(double1600, -1.55);
    }
    @Test
    public void test2307() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double6204 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double6204, -0.0);
        double double2246 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2246, 3.14159);
        java.lang.String string7203 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string7203, "NICE");
        int int9154 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int9154, 0);
    }
    @Test
    public void test2308() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        java.lang.String string1860 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string1860, "go");
        boolean boolean3046 = calculadora792.or(boolean203, false);
        Assertions.assertEquals(boolean3046, false);
        boolean boolean366 = calculadora792.or(boolean7494, boolean7709);
        Assertions.assertEquals(boolean366, false);
        int int497 = calculadora792.mulInt(0, 500);
        Assertions.assertEquals(int497, 0);
    }
    @Test
    public void test2309() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1160 = calculadora792.maior(250, -1000);
        Assertions.assertEquals(boolean1160, true);
        double double9225 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double9225, 0.0);
        java.lang.String string7356 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7356, "go");
        java.lang.String string1408 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string1408, "NICE");
        double double5349 = calculadora792.subDouble(-10.953, -1.55);
        Assertions.assertEquals(double5349, -9.402999999999999);
        int int4630 = calculadora792.subInt(100, -250);
        Assertions.assertEquals(int4630, 350);
        boolean boolean5126 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5126, false);
    }
    @Test
    public void test2310() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double9802 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9802, -4.8694645);
        boolean boolean4583 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4583, false);
        double double618 = calculadora792.somaDouble(3.14159, 3.14159);
        Assertions.assertEquals(double618, 6.28318);
    }
    @Test
    public void test2311() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        int int5015 = calculadora792.somaInt(-1000, 250);
        Assertions.assertEquals(int5015, -750);
        boolean boolean8833 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean8833, true);
        boolean boolean9154 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean9154, false);
    }
    @Test
    public void test2312() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        double double9269 = calculadora792.mulDouble(10.953, -10.953);
        Assertions.assertEquals(double9269, -119.96820899999999);
        double double2478 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double2478, 9.632064274627956);
    }
    @Test
    public void test2313() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int372 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int372, 1000);
        boolean boolean4476 = calculadora792.menor(100, 0);
        Assertions.assertEquals(boolean4476, false);
    }
    @Test
    public void test2315() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        double double4574 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double4574, -103.51);
        boolean boolean2048 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean2048, true);
        int int4981 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int4981, 0);
    }
    @Test
    public void test2317() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        java.lang.String string4168 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string4168, "hello");
        boolean boolean8087 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8087, true);
    }
    @Test
    public void test2318() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double586 = calculadora792.subDouble(-105.5, 10.953);
        Assertions.assertEquals(double586, -116.453);
        boolean boolean263 = calculadora792.menor(-250, -500);
        Assertions.assertEquals(boolean263, false);
    }
    @Test
    public void test2319() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        int int522 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int522, 125000);
        boolean boolean4855 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean4855, false);
        boolean boolean935 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean935, false);
    }
    @Test
    public void test2320() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int1535 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int1535, 0);
        boolean boolean47 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean47, true);
        boolean boolean6524 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean6524, true);
        double double8431 = calculadora792.mulDouble(3.14159, 105.5);
        Assertions.assertEquals(double8431, 331.437745);
    }
    @Test
    public void test2324() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        java.lang.String string1195 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string1195, "HI");
        boolean boolean628 = calculadora792.menor(250, 500);
        Assertions.assertEquals(boolean628, true);
        double double9749 = calculadora792.somaDouble(-105.5, -105.5);
        Assertions.assertEquals(double9749, -211.0);
    }
    @Test
    public void test2325() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double3758 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double3758, 0.0);
        double double3447 = calculadora792.subDouble(0.55, 0.55);
        Assertions.assertEquals(double3447, 0.0);
        int int5480 = calculadora792.divInt(1000, -250);
        Assertions.assertEquals(int5480, -4);
    }
    @Test
    public void test2326() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int9726 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int9726, -25000);
        int int5255 = calculadora792.somaInt(-100, -500);
        Assertions.assertEquals(int5255, -600);
        java.lang.String string9489 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9489, "hello");
    }
    @Test
    public void test2327() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double157 = calculadora792.divDouble(105.5, -1.55);
        Assertions.assertEquals(double157, -68.06451612903226);
        int int9240 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int9240, -250000);
        boolean boolean4312 = calculadora792.maior(-100, 250);
        Assertions.assertEquals(boolean4312, false);
        boolean boolean366 = calculadora792.menor(-250, 100);
        Assertions.assertEquals(boolean366, true);
    }
    @Test
    public void test2328() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        int int3856 = calculadora792.somaInt(1000, -500);
        Assertions.assertEquals(int3856, 500);
    }
    @Test
    public void test2329() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double7638 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double7638, 107.05);
        java.lang.String string4511 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string4511, "valeu");
        int int653 = calculadora792.subInt(-1000, -500);
        Assertions.assertEquals(int653, -500);
    }
    @Test
    public void test2330() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double5961 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double5961, 0.55);
        int int1774 = calculadora792.divInt(-1000, -100);
        Assertions.assertEquals(int1774, 10);
    }
    @Test
    public void test2331() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean3895 = calculadora792.maior(1000, -250);
        Assertions.assertEquals(boolean3895, true);
        java.lang.String string4484 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string4484, "ipsum");
        double double3665 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double3665, 0.0);
    }
    @Test
    public void test2332() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        double double3673 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double3673, 94.547);
        int int9228 = calculadora792.mulInt(500, -500);
        Assertions.assertEquals(int9228, -250000);
        double double7008 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double7008, -116.453);
        boolean boolean9555 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean9555, false);
    }
    @Test
    public void test2333() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        java.lang.String string6658 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string6658, "IPSUM");
        java.lang.String string1113 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string1113, "valeu");
        boolean boolean4684 = calculadora792.or(boolean1170, boolean7494);
        Assertions.assertEquals(boolean4684, false);
        double double5890 = calculadora792.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double5890, -107.05);
    }
    @Test
    public void test2335() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string5602 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string5602, "hi");
        double double8068 = calculadora792.somaDouble(10.953, 105.5);
        Assertions.assertEquals(double8068, 116.453);
        double double3106 = calculadora792.subDouble(105.5, 10.953);
        Assertions.assertEquals(double3106, 94.547);
    }
    @Test
    public void test2336() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        int int4350 = calculadora792.somaInt(-250, -500);
        Assertions.assertEquals(int4350, -750);
    }
    @Test
    public void test2337() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string3675 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string3675, "lorem");
        boolean boolean9689 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean9689, false);
        double double3371 = calculadora792.mulDouble(-10.953, 0.55);
        Assertions.assertEquals(double3371, -6.024150000000001);
        boolean boolean692 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean692, false);
    }
    @Test
    public void test2339() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double2301 = calculadora792.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double2301, -104.95);
        int int1333 = calculadora792.divInt(-500, 250);
        Assertions.assertEquals(int1333, -2);
        boolean boolean9636 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean9636, false);
        boolean boolean3937 = calculadora792.menor(-500, 250);
        Assertions.assertEquals(boolean3937, true);
    }
    @Test
    public void test2340() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double4676 = calculadora792.subDouble(105.5, 0.0);
        Assertions.assertEquals(double4676, 105.5);
        boolean boolean8800 = calculadora792.and(true, boolean79);
        Assertions.assertEquals(boolean8800, false);
    }
    @Test
    public void test2342() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        int int8753 = calculadora792.divInt(-250, -1000);
        Assertions.assertEquals(int8753, 0);
    }
    @Test
    public void test2343() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        java.lang.String string3827 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3827, "IPSUM");
        java.lang.String string2686 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string2686, "IPSUM");
        boolean boolean6324 = calculadora792.maior(0, -250);
        Assertions.assertEquals(boolean6324, true);
        int int2968 = calculadora792.divInt(0, 250);
        Assertions.assertEquals(int2968, 0);
        java.lang.String string6981 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string6981, "GO");
    }
    @Test
    public void test2344() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
        java.lang.String string732 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string732, "NICE");
        boolean boolean1575 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean1575, true);
        int int82 = calculadora792.somaInt(-500, -250);
        Assertions.assertEquals(int82, -750);
        boolean boolean3770 = calculadora792.menor(0, 250);
        Assertions.assertEquals(boolean3770, true);
    }
    @Test
    public void test2345() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean7027 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean7027, false);
        int int2857 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int2857, 500000);
        boolean boolean9043 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9043, true);
    }
    @Test
    public void test2346() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean615 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean615, false);
        int int819 = calculadora792.somaInt(0, -250);
        Assertions.assertEquals(int819, -250);
        boolean boolean6101 = calculadora792.or(boolean615, true);
        Assertions.assertEquals(boolean6101, true);
        int int8054 = calculadora792.subInt(250, -500);
        Assertions.assertEquals(int8054, 750);
    }
    @Test
    public void test2347() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        java.lang.String string6622 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string6622, "nice");
        double double6989 = calculadora792.somaDouble(-10.953, 105.5);
        Assertions.assertEquals(double6989, 94.547);
        boolean boolean3296 = calculadora792.maior(500, 0);
        Assertions.assertEquals(boolean3296, true);
        boolean boolean7534 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean7534, true);
    }
    @Test
    public void test2349() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int5109 = calculadora792.mulInt(100, -500);
        Assertions.assertEquals(int5109, -50000);
    }
    @Test
    public void test2352() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2702 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2702, "VALEU");
        int int7224 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int7224, 0);
        int int8120 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int8120, -25000);
        boolean boolean8441 = calculadora792.maior(500, 250);
        Assertions.assertEquals(boolean8441, true);
    }
    @Test
    public void test2354() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        int int7762 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int7762, 0);
        int int5667 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int5667, -1);
        int int146 = calculadora792.somaInt(-1000, -250);
        Assertions.assertEquals(int146, -1250);
    }
    @Test
    public void test2355() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        boolean boolean9246 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean9246, false);
        boolean boolean472 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean472, true);
        boolean boolean8939 = calculadora792.maior(1000, 100);
        Assertions.assertEquals(boolean8939, true);
    }
    @Test
    public void test2356() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
        boolean boolean5444 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5444, false);
        double double4975 = calculadora792.mulDouble(10.953, 105.5);
        Assertions.assertEquals(double4975, 1155.5415);
    }
    @Test
    public void test2357() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
        boolean boolean8126 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean8126, true);
        int int3142 = calculadora792.subInt(1000, -250);
        Assertions.assertEquals(int3142, 1250);
    }
    @Test
    public void test2359() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        boolean boolean4157 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean4157, false);
        boolean boolean3204 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean3204, false);
        java.lang.String string9393 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string9393, "VALEU");
        boolean boolean9872 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9872, false);
        double double4439 = calculadora792.mulDouble(-105.5, 105.5);
        Assertions.assertEquals(double4439, -11130.25);
        boolean boolean9157 = calculadora792.or(true, boolean9872);
        Assertions.assertEquals(boolean9157, true);
    }
    @Test
    public void test2360() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6619 = calculadora792.subInt(-250, -100);
        Assertions.assertEquals(int6619, -150);
    }
    @Test
    public void test2361() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean6946 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean6946, false);
        int int4422 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int4422, 0);
        boolean boolean1833 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1833, true);
    }
    @Test
    public void test2362() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        int int5449 = calculadora792.mulInt(250, -500);
        Assertions.assertEquals(int5449, -125000);
        double double4912 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double4912, 3.14159);
        boolean boolean8772 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean8772, false);
    }
    @Test
    public void test2363() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        java.lang.String string2238 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string2238, "NICE");
        double double6459 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double6459, 0.0);
        double double7424 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double7424, 0.0);
    }
    @Test
    public void test2364() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double2441 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double2441, 0.0);
        java.lang.String string8290 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string8290, "top");
    }
    @Test
    public void test2365() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        java.lang.String string5530 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string5530, "TOP");
        boolean boolean3551 = calculadora792.menor(500, 100);
        Assertions.assertEquals(boolean3551, false);
        java.lang.String string8440 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string8440, "go");
        boolean boolean279 = calculadora792.menor(1000, -500);
        Assertions.assertEquals(boolean279, false);
    }
    @Test
    public void test2366() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int4888 = calculadora792.subInt(1000, 100);
        Assertions.assertEquals(int4888, 900);
        double double5270 = calculadora792.subDouble(-1.55, -105.5);
        Assertions.assertEquals(double5270, 103.95);
        boolean boolean2769 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2769, true);
    }
    @Test
    public void test2367() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean4116 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4116, false);
        boolean boolean9281 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean9281, true);
        double double9640 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double9640, 34.409835269999995);
        boolean boolean3483 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3483, false);
    }
    @Test
    public void test2368() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double7427 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double7427, 108.64159);
        double double4027 = calculadora792.mulDouble(105.5, 0.55);
        Assertions.assertEquals(double4027, 58.025000000000006);
        java.lang.String string2548 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string2548, "hi");
    }
    @Test
    public void test2369() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        double double5117 = calculadora792.mulDouble(-105.5, 1.99);
        Assertions.assertEquals(double5117, -209.945);
        java.lang.String string7176 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string7176, "hi");
        int int6947 = calculadora792.mulInt(-100, -100);
        Assertions.assertEquals(int6947, 10000);
    }
    @Test
    public void test2370() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean615 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean615, false);
        int int819 = calculadora792.somaInt(0, -250);
        Assertions.assertEquals(int819, -250);
        boolean boolean3223 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3223, true);
        int int7238 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7238, 500000);
        boolean boolean1464 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1464, false);
    }
    @Test
    public void test2372() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        double double1099 = calculadora792.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double1099, -1.0);
        boolean boolean5421 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5421, true);
    }
    @Test
    public void test2373() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        java.lang.String string3279 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3279, "NICE");
        double double5484 = calculadora792.somaDouble(10.953, 0.0);
        Assertions.assertEquals(double5484, 10.953);
        int int7131 = calculadora792.subInt(250, 500);
        Assertions.assertEquals(int7131, -250);
    }
    @Test
    public void test2374() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        boolean boolean2863 = calculadora792.maior(-1000, -250);
        Assertions.assertEquals(boolean2863, false);
        java.lang.String string9524 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9524, "hello");
        double double6816 = calculadora792.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double6816, -107.05);
    }
    @Test
    public void test2375() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        int int4787 = calculadora792.somaInt(100, 0);
        Assertions.assertEquals(int4787, 100);
        int int2953 = calculadora792.somaInt(250, -1000);
        Assertions.assertEquals(int2953, -750);
        int int8534 = calculadora792.subInt(500, 100);
        Assertions.assertEquals(int8534, 400);
        boolean boolean3668 = calculadora792.menor(0, -100);
        Assertions.assertEquals(boolean3668, false);
    }
    @Test
    public void test2376() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        boolean boolean9262 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9262, false);
        double double9560 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9560, 0.0);
    }
    @Test
    public void test2377() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int1535 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int1535, 0);
        boolean boolean47 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean47, true);
        boolean boolean6524 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean6524, true);
        boolean boolean3094 = calculadora792.menor(-1000, -100);
        Assertions.assertEquals(boolean3094, true);
    }
    @Test
    public void test2378() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double7431 = calculadora792.somaDouble(0.55, 10.953);
        Assertions.assertEquals(double7431, 11.503);
        double double7098 = calculadora792.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double7098, 4.69159);
        double double7914 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7914, 0.55);
        double double5510 = calculadora792.somaDouble(105.5, 105.5);
        Assertions.assertEquals(double5510, 211.0);
        boolean boolean6715 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6715, true);
    }
    @Test
    public void test2379() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
        double double1965 = calculadora792.mulDouble(-1.55, 0.55);
        Assertions.assertEquals(double1965, -0.8525000000000001);
        double double5325 = calculadora792.subDouble(1.99, -10.953);
        Assertions.assertEquals(double5325, 12.943);
        boolean boolean6379 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6379, false);
    }
    @Test
    public void test2380() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int6586 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int6586, 62500);
        double double3049 = calculadora792.mulDouble(105.5, -105.5);
        Assertions.assertEquals(double3049, -11130.25);
        java.lang.String string5205 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5205, "valeu");
        boolean boolean2215 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean2215, true);
    }
    @Test
    public void test2381() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        int int8771 = calculadora792.mulInt(-1000, -250);
        Assertions.assertEquals(int8771, 250000);
        double double2694 = calculadora792.subDouble(1.99, 0.55);
        Assertions.assertEquals(double2694, 1.44);
        double double8658 = calculadora792.subDouble(0.55, 3.14159);
        Assertions.assertEquals(double8658, -2.59159);
    }
    @Test
    public void test2382() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        boolean boolean6352 = calculadora792.or(false, boolean2390);
        Assertions.assertEquals(boolean6352, false);
        double double827 = calculadora792.divDouble(0.55, -105.5);
        Assertions.assertEquals(double827, -0.005213270142180095);
        boolean boolean2283 = calculadora792.menor(500, 500);
        Assertions.assertEquals(boolean2283, false);
    }
    @Test
    public void test2383() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        java.lang.String string5091 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string5091, "VALEU");
        java.lang.String string873 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string873, "NICE");
        java.lang.String string576 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string576, "top");
        int int4103 = calculadora792.divInt(-500, -250);
        Assertions.assertEquals(int4103, 2);
        double double3740 = calculadora792.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double3740, 119.96820899999999);
    }
    @Test
    public void test2384() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double2441 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double2441, 0.0);
        java.lang.String string4919 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string4919, "lorem");
        boolean boolean4095 = calculadora792.menor(-250, 250);
        Assertions.assertEquals(boolean4095, true);
    }
    @Test
    public void test2385() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        int int4170 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int4170, -1100);
        int int8733 = calculadora792.mulInt(-250, 0);
        Assertions.assertEquals(int8733, 0);
        int int6489 = calculadora792.subInt(-1000, -1000);
        Assertions.assertEquals(int6489, 0);
        boolean boolean814 = calculadora792.maior(1000, -250);
        Assertions.assertEquals(boolean814, true);
    }
    @Test
    public void test2386() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string3675 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string3675, "lorem");
        boolean boolean5884 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5884, false);
    }
    @Test
    public void test2387() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        java.lang.String string569 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string569, "LOREM");
        boolean boolean9313 = calculadora792.maior(0, 250);
        Assertions.assertEquals(boolean9313, false);
    }
    @Test
    public void test2388() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1160 = calculadora792.maior(250, -1000);
        Assertions.assertEquals(boolean1160, true);
        double double9225 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double9225, 0.0);
        boolean boolean3559 = calculadora792.maior(500, 250);
        Assertions.assertEquals(boolean3559, true);
    }
    @Test
    public void test2389() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean6333 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6333, false);
        java.lang.String string4646 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string4646, "IPSUM");
        double double549 = calculadora792.somaDouble(3.14159, -10.953);
        Assertions.assertEquals(double549, -7.8114099999999995);
    }
    @Test
    public void test2390() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int7705 = calculadora792.subInt(-500, 0);
        Assertions.assertEquals(int7705, -500);
        java.lang.String string408 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string408, "top");
    }
    @Test
    public void test2391() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean2980 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2980, false);
        int int2304 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int2304, -250000);
        double double9832 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double9832, -116.453);
        double double7111 = calculadora792.somaDouble(105.5, 105.5);
        Assertions.assertEquals(double7111, 211.0);
        java.lang.String string4367 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string4367, "hello");
    }
    @Test
    public void test2392() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        java.lang.String string3827 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3827, "IPSUM");
        java.lang.String string2686 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string2686, "IPSUM");
        boolean boolean6324 = calculadora792.maior(0, -250);
        Assertions.assertEquals(boolean6324, true);
        boolean boolean2570 = calculadora792.menor(100, -250);
        Assertions.assertEquals(boolean2570, false);
    }
    @Test
    public void test2393() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        int int4170 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int4170, -1100);
        int int8733 = calculadora792.mulInt(-250, 0);
        Assertions.assertEquals(int8733, 0);
        int int6489 = calculadora792.subInt(-1000, -1000);
        Assertions.assertEquals(int6489, 0);
        boolean boolean814 = calculadora792.maior(1000, -250);
        Assertions.assertEquals(boolean814, true);
        boolean boolean6006 = calculadora792.maior(100, 250);
        Assertions.assertEquals(boolean6006, false);
    }
    @Test
    public void test2395() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        boolean boolean9246 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean9246, false);
        java.lang.String string6266 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string6266, "HELLO");
    }
    @Test
    public void test2396() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string197 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string197, "lorem");
        java.lang.String string2224 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string2224, "IPSUM");
        double double2319 = calculadora792.subDouble(0.0, -105.5);
        Assertions.assertEquals(double2319, 105.5);
    }
    @Test
    public void test2397() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        java.lang.String string6167 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string6167, "NICE");
        double double741 = calculadora792.mulDouble(0.0, 105.5);
        Assertions.assertEquals(double741, 0.0);
    }
    @Test
    public void test2398() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        int int1529 = calculadora792.mulInt(500, -250);
        Assertions.assertEquals(int1529, -125000);
        boolean boolean1411 = calculadora792.menor(250, -250);
        Assertions.assertEquals(boolean1411, false);
        double double3794 = calculadora792.subDouble(-10.953, 10.953);
        Assertions.assertEquals(double3794, -21.906);
    }
    @Test
    public void test2399() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        boolean boolean3280 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean3280, false);
        java.lang.String string7478 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string7478, "nice");
        boolean boolean2085 = calculadora792.and(boolean3280, boolean3280);
        Assertions.assertEquals(boolean2085, false);
    }
    @Test
    public void test2400() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double8267 = calculadora792.divDouble(0.0, 0.55);
        Assertions.assertEquals(double8267, 0.0);
        java.lang.String string6502 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string6502, "HELLO");
        int int6992 = calculadora792.subInt(-1000, -500);
        Assertions.assertEquals(int6992, -500);
        double double1565 = calculadora792.somaDouble(3.14159, 10.953);
        Assertions.assertEquals(double1565, 14.09459);
        java.lang.String string1690 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string1690, "lorem");
        int int8953 = calculadora792.subInt(-500, 250);
        Assertions.assertEquals(int8953, -750);
        boolean boolean1197 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean1197, true);
    }
    @Test
    public void test2401() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        double double6206 = calculadora792.subDouble(0.55, -10.953);
        Assertions.assertEquals(double6206, 11.503);
        double double2005 = calculadora792.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double2005, 0.0);
        boolean boolean5821 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean5821, false);
    }
    @Test
    public void test2402() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        boolean boolean295 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean295, false);
    }
    @Test
    public void test2403() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        boolean boolean3089 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean3089, false);
        int int977 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int977, -25000);
        double double6040 = calculadora792.subDouble(0.55, 10.953);
        Assertions.assertEquals(double6040, -10.402999999999999);
        java.lang.String string3946 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string3946, "ipsum");
    }
    @Test
    public void test2405() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        double double3232 = calculadora792.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double3232, -9.632064274627956);
        boolean boolean5734 = calculadora792.menor(-250, 250);
        Assertions.assertEquals(boolean5734, true);
        int int3230 = calculadora792.divInt(500, 100);
        Assertions.assertEquals(int3230, 5);
        double double6148 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double6148, 107.05);
        double double4999 = calculadora792.subDouble(10.953, 0.55);
        Assertions.assertEquals(double4999, 10.402999999999999);
    }
    @Test
    public void test2406() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        int int7872 = calculadora792.subInt(-250, -500);
        Assertions.assertEquals(int7872, 250);
    }
    @Test
    public void test2407() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int2069 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2069, 900);
        boolean boolean89 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean89, true);
        double double3408 = calculadora792.divDouble(-105.5, 1.99);
        Assertions.assertEquals(double3408, -53.015075376884425);
        double double2575 = calculadora792.divDouble(10.953, 10.953);
        Assertions.assertEquals(double2575, 1.0);
        double double4010 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double4010, 1.1);
    }
    @Test
    public void test2408() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        int int5449 = calculadora792.mulInt(250, -500);
        Assertions.assertEquals(int5449, -125000);
        double double4912 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double4912, 3.14159);
        boolean boolean8020 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean8020, true);
        int int2922 = calculadora792.somaInt(250, 500);
        Assertions.assertEquals(int2922, 750);
    }
    @Test
    public void test2409() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
        boolean boolean8126 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean8126, true);
        int int3142 = calculadora792.subInt(1000, -250);
        Assertions.assertEquals(int3142, 1250);
        double double878 = calculadora792.mulDouble(10.953, 10.953);
        Assertions.assertEquals(double878, 119.96820899999999);
    }
    @Test
    public void test2410() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double5081 = calculadora792.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double5081, 0.014691943127962086);
        boolean boolean56 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean56, true);
        double double3744 = calculadora792.somaDouble(0.0, 0.55);
        Assertions.assertEquals(double3744, 0.55);
    }
    @Test
    public void test2411() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        java.lang.String string7699 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7699, "top");
        double double191 = calculadora792.divDouble(0.0, -10.953);
        Assertions.assertEquals(double191, -0.0);
        boolean boolean4736 = calculadora792.and(boolean8907, true);
        Assertions.assertEquals(boolean4736, false);
        java.lang.String string2227 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string2227, "hi");
    }
    @Test
    public void test2412() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        double double6221 = calculadora792.somaDouble(3.14159, 0.55);
        Assertions.assertEquals(double6221, 3.6915899999999997);
        boolean boolean6488 = calculadora792.menor(100, 1000);
        Assertions.assertEquals(boolean6488, true);
        double double4959 = calculadora792.divDouble(3.14159, 105.5);
        Assertions.assertEquals(double4959, 0.029778104265402842);
    }
    @Test
    public void test2413() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
        java.lang.String string4439 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string4439, "HI");
        int int4390 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4390, -250000);
        boolean boolean8765 = calculadora792.or(false, boolean6721);
        Assertions.assertEquals(boolean8765, false);
        java.lang.String string2022 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2022, "VALEU");
        java.lang.String string315 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string315, "HELLO");
    }
    @Test
    public void test2414() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        int int6258 = calculadora792.mulInt(500, 1000);
        Assertions.assertEquals(int6258, 500000);
        boolean boolean3396 = calculadora792.maior(-500, 1000);
        Assertions.assertEquals(boolean3396, false);
    }
    @Test
    public void test2415() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean2961 = calculadora792.maior(1000, 250);
        Assertions.assertEquals(boolean2961, true);
        boolean boolean8569 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean8569, true);
        java.lang.String string7083 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7083, "go");
        java.lang.String string6983 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string6983, "valeu");
    }
    @Test
    public void test2416() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        double double4574 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double4574, -103.51);
        boolean boolean2048 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean2048, true);
        int int1360 = calculadora792.subInt(1000, 0);
        Assertions.assertEquals(int1360, 1000);
        boolean boolean7179 = calculadora792.or(false, boolean2048);
        Assertions.assertEquals(boolean7179, false);
    }
    @Test
    public void test2417() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        double double1772 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1772, 0.0);
        double double1752 = calculadora792.divDouble(-10.953, 3.14159);
        Assertions.assertEquals(double1752, -3.4864511282503443);
        boolean boolean3101 = calculadora792.or(false, boolean4855);
        Assertions.assertEquals(boolean3101, false);
    }
    @Test
    public void test2418() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean5835 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean5835, false);
        int int9324 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9324, 10000);
        java.lang.String string1859 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string1859, "valeu");
        boolean boolean4960 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean4960, true);
    }
    @Test
    public void test2419() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        int int8387 = calculadora792.divInt(-500, -1000);
        Assertions.assertEquals(int8387, 0);
        double double4590 = calculadora792.mulDouble(0.0, 10.953);
        Assertions.assertEquals(double4590, 0.0);
        int int2361 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int2361, 0);
    }
    @Test
    public void test2420() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean3427 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3427, false);
        boolean boolean9223 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean9223, true);
        int int5725 = calculadora792.mulInt(-100, -500);
        Assertions.assertEquals(int5725, 50000);
        double double404 = calculadora792.mulDouble(1.99, 3.14159);
        Assertions.assertEquals(double404, 6.2517641);
        double double9105 = calculadora792.mulDouble(105.5, 0.55);
        Assertions.assertEquals(double9105, 58.025000000000006);
    }
    @Test
    public void test2422() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean3329 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean3329, true);
        boolean boolean4633 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean4633, true);
    }
    @Test
    public void test2423() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int9314 = calculadora792.somaInt(-250, 0);
        Assertions.assertEquals(int9314, -250);
        double double2491 = calculadora792.divDouble(0.55, -105.5);
        Assertions.assertEquals(double2491, -0.005213270142180095);
    }
    @Test
    public void test2424() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        java.lang.String string787 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string787, "TOP");
        java.lang.String string1960 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string1960, "VALEU");
    }
    @Test
    public void test2425() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        int int2949 = calculadora792.mulInt(-500, 250);
        Assertions.assertEquals(int2949, -125000);
        boolean boolean9218 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9218, false);
        int int9841 = calculadora792.mulInt(-1000, 100);
        Assertions.assertEquals(int9841, -100000);
    }
    @Test
    public void test2426() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean4468 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean4468, true);
        java.lang.String string9420 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string9420, "top");
        double double3840 = calculadora792.divDouble(-105.5, 1.99);
        Assertions.assertEquals(double3840, -53.015075376884425);
        boolean boolean1442 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean1442, true);
        double double5622 = calculadora792.somaDouble(3.14159, -10.953);
        Assertions.assertEquals(double5622, -7.8114099999999995);
    }
    @Test
    public void test2427() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
        java.lang.String string2110 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string2110, "nice");
        boolean boolean7904 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean7904, false);
        boolean boolean7328 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean7328, true);
    }
    @Test
    public void test2428() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string4626 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string4626, "top");
        double double7911 = calculadora792.mulDouble(0.55, -1.55);
        Assertions.assertEquals(double7911, -0.8525000000000001);
        int int2537 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int2537, 500);
    }
    @Test
    public void test2429() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        boolean boolean2965 = calculadora792.menor(1000, -250);
        Assertions.assertEquals(boolean2965, false);
        java.lang.String string6073 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6073, "top");
        double double9349 = calculadora792.divDouble(-1.55, 0.55);
        Assertions.assertEquals(double9349, -2.818181818181818);
    }
    @Test
    public void test2430() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int5717 = calculadora792.mulInt(-100, 500);
        Assertions.assertEquals(int5717, -50000);
        int int4565 = calculadora792.divInt(0, -1000);
        Assertions.assertEquals(int4565, 0);
        double double4916 = calculadora792.subDouble(0.55, -105.5);
        Assertions.assertEquals(double4916, 106.05);
    }
    @Test
    public void test2431() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        boolean boolean1958 = calculadora792.or(false, boolean9692);
        Assertions.assertEquals(boolean1958, false);
        double double1957 = calculadora792.somaDouble(105.5, 1.99);
        Assertions.assertEquals(double1957, 107.49);
    }
    @Test
    public void test2432() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int1394 = calculadora792.somaInt(500, 0);
        Assertions.assertEquals(int1394, 500);
    }
    @Test
    public void test2433() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int2069 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2069, 900);
        boolean boolean89 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean89, true);
        double double3408 = calculadora792.divDouble(-105.5, 1.99);
        Assertions.assertEquals(double3408, -53.015075376884425);
        boolean boolean9372 = calculadora792.menor(500, 0);
        Assertions.assertEquals(boolean9372, false);
        int int867 = calculadora792.divInt(-250, -500);
        Assertions.assertEquals(int867, 0);
    }
    @Test
    public void test2434() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        java.lang.String string569 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string569, "LOREM");
        boolean boolean9313 = calculadora792.maior(0, 250);
        Assertions.assertEquals(boolean9313, false);
        int int1333 = calculadora792.mulInt(1000, -100);
        Assertions.assertEquals(int1333, -100000);
    }
    @Test
    public void test2435() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
        int int9292 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int9292, 0);
        boolean boolean2533 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean2533, true);
    }
    @Test
    public void test2436() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        boolean boolean5642 = calculadora792.menor(0, -250);
        Assertions.assertEquals(boolean5642, false);
        boolean boolean5665 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5665, false);
        java.lang.String string6954 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string6954, "hi");
    }
    @Test
    public void test2437() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int7705 = calculadora792.subInt(-500, 0);
        Assertions.assertEquals(int7705, -500);
        int int7150 = calculadora792.mulInt(-250, 100);
        Assertions.assertEquals(int7150, -25000);
    }
    @Test
    public void test2438() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        double double6206 = calculadora792.subDouble(0.55, -10.953);
        Assertions.assertEquals(double6206, 11.503);
        double double3939 = calculadora792.divDouble(1.99, -10.953);
        Assertions.assertEquals(double3939, -0.18168538300009132);
        java.lang.String string345 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string345, "HELLO");
    }
    @Test
    public void test2441() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        boolean boolean7219 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean7219, true);
        boolean boolean9935 = calculadora792.menor(-100, 100);
        Assertions.assertEquals(boolean9935, true);
    }
    @Test
    public void test2442() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        boolean boolean4157 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean4157, false);
        boolean boolean7989 = calculadora792.menor(-100, 100);
        Assertions.assertEquals(boolean7989, true);
    }
    @Test
    public void test2443() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        java.lang.String string3279 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3279, "NICE");
        double double5484 = calculadora792.somaDouble(10.953, 0.0);
        Assertions.assertEquals(double5484, 10.953);
        int int7131 = calculadora792.subInt(250, 500);
        Assertions.assertEquals(int7131, -250);
        int int8244 = calculadora792.mulInt(500, 1000);
        Assertions.assertEquals(int8244, 500000);
    }
    @Test
    public void test2444() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string1743 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string1743, "nice");
        boolean boolean9433 = calculadora792.menor(250, -1000);
        Assertions.assertEquals(boolean9433, false);
        boolean boolean3326 = calculadora792.menor(-250, -500);
        Assertions.assertEquals(boolean3326, false);
        double double6338 = calculadora792.divDouble(-105.5, 3.14159);
        Assertions.assertEquals(double6338, -33.58172135765648);
    }
    @Test
    public void test2445() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        boolean boolean6795 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean6795, true);
        java.lang.String string9393 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string9393, "GO");
    }
    @Test
    public void test2446() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int6458 = calculadora792.subInt(0, 250);
        Assertions.assertEquals(int6458, -250);
        boolean boolean2061 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2061, false);
        java.lang.String string1250 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string1250, "IPSUM");
        java.lang.String string9110 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string9110, "IPSUM");
    }
    @Test
    public void test2448() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        boolean boolean1000 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean1000, true);
        boolean boolean1578 = calculadora792.menor(500, 500);
        Assertions.assertEquals(boolean1578, false);
        boolean boolean1011 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1011, false);
        int int9102 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int9102, 0);
    }
    @Test
    public void test2449() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean615 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean615, false);
        int int3742 = calculadora792.subInt(0, -250);
        Assertions.assertEquals(int3742, 250);
        int int1582 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int1582, -1);
        boolean boolean4825 = calculadora792.or(boolean7494, false);
        Assertions.assertEquals(boolean4825, false);
    }
    @Test
    public void test2450() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        double double3208 = calculadora792.somaDouble(-1.55, -1.55);
        Assertions.assertEquals(double3208, -3.1);
    }
    @Test
    public void test2451() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        double double6616 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double6616, -5.504020100502513);
        java.lang.String string7095 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string7095, "lorem");
    }
    @Test
    public void test2454() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        int int2024 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int2024, -25000);
        boolean boolean9239 = calculadora792.maior(-500, 250);
        Assertions.assertEquals(boolean9239, false);
    }
    @Test
    public void test2455() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        int int194 = calculadora792.somaInt(250, -500);
        Assertions.assertEquals(int194, -250);
        boolean boolean8526 = calculadora792.menor(1000, -500);
        Assertions.assertEquals(boolean8526, false);
        int int1010 = calculadora792.somaInt(0, -250);
        Assertions.assertEquals(int1010, -250);
        java.lang.String string4946 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string4946, "hi");
    }
    @Test
    public void test2456() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        java.lang.String string812 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string812, "hello");
        java.lang.String string1838 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string1838, "hi");
        int int58 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int58, 0);
        boolean boolean6435 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6435, false);
    }
    @Test
    public void test2457() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        double double112 = calculadora792.somaDouble(10.953, -105.5);
        Assertions.assertEquals(double112, -94.547);
    }
    @Test
    public void test2458() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        int int7734 = calculadora792.divInt(-100, -250);
        Assertions.assertEquals(int7734, 0);
        int int4850 = calculadora792.somaInt(250, -500);
        Assertions.assertEquals(int4850, -250);
        int int8004 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int8004, 0);
    }
    @Test
    public void test2460() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        boolean boolean7014 = calculadora792.menor(500, -500);
        Assertions.assertEquals(boolean7014, false);
        java.lang.String string3351 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3351, "nice");
    }
    @Test
    public void test2461() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string3675 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string3675, "lorem");
        boolean boolean9689 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean9689, false);
        double double3371 = calculadora792.mulDouble(-10.953, 0.55);
        Assertions.assertEquals(double3371, -6.024150000000001);
        boolean boolean692 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean692, false);
        boolean boolean3945 = calculadora792.menor(-500, 1000);
        Assertions.assertEquals(boolean3945, true);
    }
    @Test
    public void test2462() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int8945 = calculadora792.divInt(-500, 1000);
        Assertions.assertEquals(int8945, 0);
        double double9569 = calculadora792.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double9569, -209.945);
        boolean boolean8654 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8654, true);
        int int7445 = calculadora792.subInt(-1000, -250);
        Assertions.assertEquals(int7445, -750);
    }
    @Test
    public void test2463() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string364 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string364, "hello");
        double double8337 = calculadora792.subDouble(105.5, 1.99);
        Assertions.assertEquals(double8337, 103.51);
        boolean boolean1024 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean1024, false);
        boolean boolean8976 = calculadora792.maior(250, 100);
        Assertions.assertEquals(boolean8976, true);
        boolean boolean8002 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean8002, false);
    }
    @Test
    public void test2465() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double9802 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9802, -4.8694645);
        double double8626 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double8626, 0.0502145530904775);
        int int4285 = calculadora792.mulInt(-250, 250);
        Assertions.assertEquals(int4285, -62500);
    }
    @Test
    public void test2467() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int2875 = calculadora792.subInt(1000, -500);
        Assertions.assertEquals(int2875, 1500);
        double double294 = calculadora792.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double294, 119.96820899999999);
        boolean boolean5807 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5807, true);
    }
    @Test
    public void test2468() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        java.lang.String string9756 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9756, "hello");
        java.lang.String string4389 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string4389, "LOREM");
        double double7117 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double7117, -0.0502145530904775);
    }
    @Test
    public void test2469() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        java.lang.String string4372 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4372, "GO");
        int int9899 = calculadora792.divInt(-1000, 1000);
        Assertions.assertEquals(int9899, -1);
        int int148 = calculadora792.subInt(500, 250);
        Assertions.assertEquals(int148, 250);
        double double2514 = calculadora792.somaDouble(0.55, 3.14159);
        Assertions.assertEquals(double2514, 3.6915899999999997);
    }
    @Test
    public void test2470() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        boolean boolean2893 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2893, true);
        double double9726 = calculadora792.subDouble(0.55, 0.0);
        Assertions.assertEquals(double9726, 0.55);
        java.lang.String string4374 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4374, "GO");
        boolean boolean2158 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2158, true);
        java.lang.String string2964 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string2964, "hello");
        java.lang.String string412 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string412, "HELLO");
    }
    @Test
    public void test2471() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        int int1535 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int1535, 0);
        boolean boolean47 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean47, true);
        boolean boolean6524 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean6524, true);
        boolean boolean3094 = calculadora792.menor(-1000, -100);
        Assertions.assertEquals(boolean3094, true);
        double double3431 = calculadora792.subDouble(3.14159, 0.0);
        Assertions.assertEquals(double3431, 3.14159);
    }
    @Test
    public void test2472() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        boolean boolean1000 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean1000, true);
        boolean boolean1578 = calculadora792.menor(500, 500);
        Assertions.assertEquals(boolean1578, false);
        boolean boolean1011 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1011, false);
        boolean boolean6576 = calculadora792.or(boolean1011, boolean1000);
        Assertions.assertEquals(boolean6576, false);
    }
    @Test
    public void test2473() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        java.lang.String string3079 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string3079, "VALEU");
        boolean boolean5305 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean5305, false);
        int int9248 = calculadora792.mulInt(-500, 100);
        Assertions.assertEquals(int9248, -50000);
    }
    @Test
    public void test2474() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double7427 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double7427, 108.64159);
        boolean boolean7441 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean7441, true);
        boolean boolean3178 = calculadora792.and(false, boolean916);
        Assertions.assertEquals(boolean3178, false);
    }
    @Test
    public void test2475() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        boolean boolean8523 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8523, true);
        java.lang.String string77 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string77, "HELLO");
        int int648 = calculadora792.divInt(-1000, -1000);
        Assertions.assertEquals(int648, 1);
    }
    @Test
    public void test2476() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        double double4694 = calculadora792.subDouble(0.0, -1.55);
        Assertions.assertEquals(double4694, 1.55);
        int int1644 = calculadora792.subInt(-500, -250);
        Assertions.assertEquals(int1644, -250);
        boolean boolean2883 = calculadora792.or(false, boolean269);
        Assertions.assertEquals(boolean2883, false);
        boolean boolean9188 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean9188, false);
    }
    @Test
    public void test2477() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        int int572 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int572, 0);
        java.lang.String string8646 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string8646, "valeu");
        double double8868 = calculadora792.somaDouble(10.953, 0.0);
        Assertions.assertEquals(double8868, 10.953);
    }
    @Test
    public void test2478() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double6204 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double6204, -0.0);
        double double2246 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2246, 3.14159);
        double double5598 = calculadora792.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double5598, 1.0945);
        boolean boolean6102 = calculadora792.maior(-500, -250);
        Assertions.assertEquals(boolean6102, false);
        int int2171 = calculadora792.subInt(1000, 250);
        Assertions.assertEquals(int2171, 750);
        boolean boolean8947 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean8947, true);
    }
    @Test
    public void test2479() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        boolean boolean4202 = calculadora792.or(boolean6240, true);
        Assertions.assertEquals(boolean4202, true);
        boolean boolean1980 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1980, false);
        double double5489 = calculadora792.somaDouble(0.55, 1.99);
        Assertions.assertEquals(double5489, 2.54);
    }
    @Test
    public void test2481() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
        java.lang.String string4439 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string4439, "HI");
        int int4390 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4390, -250000);
        boolean boolean8765 = calculadora792.or(false, boolean6721);
        Assertions.assertEquals(boolean8765, false);
        java.lang.String string2022 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2022, "VALEU");
        boolean boolean8248 = calculadora792.menor(-500, -500);
        Assertions.assertEquals(boolean8248, false);
        boolean boolean2004 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean2004, false);
        double double154 = calculadora792.divDouble(105.5, -1.55);
        Assertions.assertEquals(double154, -68.06451612903226);
    }
    @Test
    public void test2483() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean5909 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5909, true);
        boolean boolean4302 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean4302, true);
        boolean boolean2733 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean2733, true);
    }
    @Test
    public void test2484() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double1145 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double1145, -107.05);
        boolean boolean695 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean695, false);
    }
    @Test
    public void test2485() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
        double double3160 = calculadora792.mulDouble(-10.953, -1.55);
        Assertions.assertEquals(double3160, 16.977149999999998);
        boolean boolean9756 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9756, true);
    }
    @Test
    public void test2486() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int9726 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int9726, -25000);
        int int5255 = calculadora792.somaInt(-100, -500);
        Assertions.assertEquals(int5255, -600);
        double double3432 = calculadora792.subDouble(0.55, -105.5);
        Assertions.assertEquals(double3432, 106.05);
    }
    @Test
    public void test2488() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        boolean boolean4360 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4360, false);
    }
    @Test
    public void test2489() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double7638 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double7638, 107.05);
        java.lang.String string4511 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string4511, "valeu");
        double double6263 = calculadora792.subDouble(0.55, 0.0);
        Assertions.assertEquals(double6263, 0.55);
    }
    @Test
    public void test2490() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int4743 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4743, 62500);
        boolean boolean6507 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean6507, true);
        java.lang.String string3307 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string3307, "go");
        boolean boolean2614 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean2614, false);
        java.lang.String string1643 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string1643, "HI");
    }
    @Test
    public void test2491() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        int int8067 = calculadora792.somaInt(-500, 100);
        Assertions.assertEquals(int8067, -400);
        double double4720 = calculadora792.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double4720, 1155.5415);
        int int3239 = calculadora792.subInt(1000, -500);
        Assertions.assertEquals(int3239, 1500);
    }
    @Test
    public void test2493() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        int int125 = calculadora792.mulInt(-1000, 1000);
        Assertions.assertEquals(int125, -1000000);
        boolean boolean5571 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5571, true);
        int int3266 = calculadora792.somaInt(0, 100);
        Assertions.assertEquals(int3266, 100);
        boolean boolean7022 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean7022, false);
    }
    @Test
    public void test2494() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2702 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2702, "VALEU");
        boolean boolean1965 = calculadora792.maior(-100, -1000);
        Assertions.assertEquals(boolean1965, true);
        int int7762 = calculadora792.somaInt(-100, 0);
        Assertions.assertEquals(int7762, -100);
    }
    @Test
    public void test2495() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean5909 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5909, true);
        double double4769 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double4769, 58.025000000000006);
        int int3790 = calculadora792.subInt(250, -500);
        Assertions.assertEquals(int3790, 750);
    }
    @Test
    public void test2496() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        int int2949 = calculadora792.mulInt(-500, 250);
        Assertions.assertEquals(int2949, -125000);
        boolean boolean9218 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9218, false);
        int int9841 = calculadora792.mulInt(-1000, 100);
        Assertions.assertEquals(int9841, -100000);
        int int6302 = calculadora792.subInt(250, 0);
        Assertions.assertEquals(int6302, 250);
    }
    @Test
    public void test2497() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        java.lang.String string326 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string326, "TOP");
        boolean boolean8574 = calculadora792.menor(1000, -1000);
        Assertions.assertEquals(boolean8574, false);
    }
    @Test
    public void test2498() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        java.lang.String string3796 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3796, "nice");
        double double5550 = calculadora792.somaDouble(-1.55, 105.5);
        Assertions.assertEquals(double5550, 103.95);
        boolean boolean9040 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean9040, true);
    }
    @Test
    public void test2499() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        int int7585 = calculadora792.mulInt(-1000, -1000);
        Assertions.assertEquals(int7585, 1000000);
        double double578 = calculadora792.divDouble(-1.55, 3.14159);
        Assertions.assertEquals(double578, -0.4933807403257586);
        int int424 = calculadora792.divInt(500, -100);
        Assertions.assertEquals(int424, -5);
    }
    @Test
    public void test2500() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        int int3041 = calculadora792.somaInt(100, -500);
        Assertions.assertEquals(int3041, -400);
        java.lang.String string2238 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string2238, "NICE");
        double double6459 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double6459, 0.0);
        double double7424 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double7424, 0.0);
        int int9907 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int9907, 125000);
    }
    @Test
    public void test2501() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
        boolean boolean6417 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean6417, false);
        double double2611 = calculadora792.mulDouble(3.14159, 3.14159);
        Assertions.assertEquals(double2611, 9.869587728099999);
        double double4414 = calculadora792.divDouble(3.14159, 10.953);
        Assertions.assertEquals(double4414, 0.2868246142609331);
        java.lang.String string9531 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string9531, "NICE");
    }
    @Test
    public void test2502() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean4116 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4116, false);
        boolean boolean9281 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean9281, true);
        boolean boolean9454 = calculadora792.maior(500, -100);
        Assertions.assertEquals(boolean9454, true);
        double double5136 = calculadora792.somaDouble(1.99, 10.953);
        Assertions.assertEquals(double5136, 12.943);
    }
    @Test
    public void test2503() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int9319 = calculadora792.divInt(-100, -250);
        Assertions.assertEquals(int9319, 0);
    }
    @Test
    public void test2506() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean716 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean716, false);
        boolean boolean6148 = calculadora792.and(boolean6342, true);
        Assertions.assertEquals(boolean6148, false);
        boolean boolean3580 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3580, false);
        boolean boolean8003 = calculadora792.menor(-1000, 1000);
        Assertions.assertEquals(boolean8003, true);
    }
    @Test
    public void test2507() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean8498 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean8498, false);
        boolean boolean2725 = calculadora792.or(boolean8498, false);
        Assertions.assertEquals(boolean2725, false);
    }
    @Test
    public void test2508() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        java.lang.String string7699 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7699, "top");
        double double191 = calculadora792.divDouble(0.0, -10.953);
        Assertions.assertEquals(double191, -0.0);
        boolean boolean4736 = calculadora792.and(boolean8907, true);
        Assertions.assertEquals(boolean4736, false);
        boolean boolean146 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean146, true);
    }
    @Test
    public void test2509() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        int int2267 = calculadora792.mulInt(-1000, 100);
        Assertions.assertEquals(int2267, -100000);
    }
    @Test
    public void test2510() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double3095 = calculadora792.mulDouble(-10.953, -105.5);
        Assertions.assertEquals(double3095, 1155.5415);
        int int2512 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int2512, 62500);
    }
    @Test
    public void test2511() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        int int2500 = calculadora792.divInt(0, 250);
        Assertions.assertEquals(int2500, 0);
        boolean boolean3738 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3738, true);
        java.lang.String string7337 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7337, "top");
    }
    @Test
    public void test2512() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        int int5412 = calculadora792.somaInt(-1000, 100);
        Assertions.assertEquals(int5412, -900);
        java.lang.String string2520 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string2520, "valeu");
        boolean boolean3383 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3383, true);
        boolean boolean9849 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean9849, true);
    }
    @Test
    public void test2513() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean3427 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3427, false);
        boolean boolean9223 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean9223, true);
        int int5725 = calculadora792.mulInt(-100, -500);
        Assertions.assertEquals(int5725, 50000);
        double double375 = calculadora792.mulDouble(1.99, 0.0);
        Assertions.assertEquals(double375, 0.0);
    }
    @Test
    public void test2514() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int835 = calculadora792.mulInt(-500, -500);
        Assertions.assertEquals(int835, 250000);
        double double7390 = calculadora792.divDouble(105.5, 105.5);
        Assertions.assertEquals(double7390, 1.0);
        boolean boolean2145 = calculadora792.menor(250, 1000);
        Assertions.assertEquals(boolean2145, true);
    }
    @Test
    public void test2516() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        int int4972 = calculadora792.mulInt(500, 250);
        Assertions.assertEquals(int4972, 125000);
        java.lang.String string6510 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string6510, "valeu");
        double double1838 = calculadora792.subDouble(10.953, 10.953);
        Assertions.assertEquals(double1838, 0.0);
    }
    @Test
    public void test2518() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        int int5158 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5158, 500000);
        int int4464 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int4464, -100);
        double double7243 = calculadora792.subDouble(0.55, -1.55);
        Assertions.assertEquals(double7243, 2.1);
        int int4521 = calculadora792.somaInt(500, -500);
        Assertions.assertEquals(int4521, 0);
    }
    @Test
    public void test2519() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double7638 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double7638, 107.05);
        double double4616 = calculadora792.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double4616, 0.43999999999999995);
        int int2971 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int2971, 0);
        int int928 = calculadora792.mulInt(500, -250);
        Assertions.assertEquals(int928, -125000);
    }
    @Test
    public void test2521() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        int int572 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int572, 0);
        java.lang.String string8646 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string8646, "valeu");
        int int8704 = calculadora792.mulInt(-100, -250);
        Assertions.assertEquals(int8704, 25000);
    }
    @Test
    public void test2522() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        java.lang.String string7104 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7104, "HELLO");
        boolean boolean4151 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean4151, true);
        boolean boolean9675 = calculadora792.maior(500, -1000);
        Assertions.assertEquals(boolean9675, true);
        boolean boolean5584 = calculadora792.maior(250, -100);
        Assertions.assertEquals(boolean5584, true);
    }
    @Test
    public void test2523() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int4743 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4743, 62500);
        boolean boolean6507 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean6507, true);
        int int2433 = calculadora792.divInt(250, 1000);
        Assertions.assertEquals(int2433, 0);
    }
    @Test
    public void test2524() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        int int1490 = calculadora792.divInt(-100, 250);
        Assertions.assertEquals(int1490, 0);
        int int587 = calculadora792.mulInt(-100, -100);
        Assertions.assertEquals(int587, 10000);
    }
    @Test
    public void test2525() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        java.lang.String string401 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string401, "HELLO");
        java.lang.String string3826 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3826, "NICE");
    }
    @Test
    public void test2526() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        double double1839 = calculadora792.somaDouble(-105.5, 0.0);
        Assertions.assertEquals(double1839, -105.5);
        int int9292 = calculadora792.mulInt(0, 0);
        Assertions.assertEquals(int9292, 0);
        boolean boolean5244 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5244, false);
        java.lang.String string681 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string681, "HELLO");
        java.lang.String string4950 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string4950, "HELLO");
    }
    @Test
    public void test2527() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        java.lang.String string3279 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string3279, "NICE");
        double double5484 = calculadora792.somaDouble(10.953, 0.0);
        Assertions.assertEquals(double5484, 10.953);
        int int8925 = calculadora792.somaInt(250, -100);
        Assertions.assertEquals(int8925, 150);
    }
    @Test
    public void test2528() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int1621 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int1621, 600);
        int int4261 = calculadora792.somaInt(-100, 500);
        Assertions.assertEquals(int4261, 400);
    }
    @Test
    public void test2529() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        double double2810 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double2810, -116.453);
        int int5189 = calculadora792.divInt(0, -500);
        Assertions.assertEquals(int5189, 0);
    }
    @Test
    public void test2530() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        boolean boolean39 = calculadora792.menor(500, -1000);
        Assertions.assertEquals(boolean39, false);
        boolean boolean1481 = calculadora792.or(boolean39, false);
        Assertions.assertEquals(boolean1481, false);
        double double5136 = calculadora792.somaDouble(1.99, -10.953);
        Assertions.assertEquals(double5136, -8.963);
    }
    @Test
    public void test2531() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        int int1042 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int1042, 0);
        java.lang.String string1469 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string1469, "hi");
    }
    @Test
    public void test2532() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double1145 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double1145, -107.05);
        boolean boolean695 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean695, false);
        int int9745 = calculadora792.mulInt(-100, -500);
        Assertions.assertEquals(int9745, 50000);
    }
    @Test
    public void test2535() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        double double369 = calculadora792.divDouble(0.0, 105.5);
        Assertions.assertEquals(double369, 0.0);
        boolean boolean1060 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean1060, true);
        double double5887 = calculadora792.subDouble(10.953, 10.953);
        Assertions.assertEquals(double5887, 0.0);
        java.lang.String string4125 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string4125, "TOP");
        int int5 = calculadora792.mulInt(1000, -1000);
        Assertions.assertEquals(int5, -1000000);
    }
    @Test
    public void test2536() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        int int7734 = calculadora792.divInt(-100, -250);
        Assertions.assertEquals(int7734, 0);
        int int2557 = calculadora792.somaInt(500, -250);
        Assertions.assertEquals(int2557, 250);
    }
    @Test
    public void test2537() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
        double double9163 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9163, 0.0);
        boolean boolean8625 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean8625, false);
        int int3246 = calculadora792.subInt(250, 100);
        Assertions.assertEquals(int3246, 150);
        double double4780 = calculadora792.somaDouble(1.99, 1.99);
        Assertions.assertEquals(double4780, 3.98);
    }
    @Test
    public void test2540() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double7638 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double7638, 107.05);
        double double4616 = calculadora792.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double4616, 0.43999999999999995);
        double double2483 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double2483, -116.453);
        int int1943 = calculadora792.subInt(1000, 250);
        Assertions.assertEquals(int1943, 750);
    }
    @Test
    public void test2541() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double7638 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double7638, 107.05);
        double double4616 = calculadora792.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double4616, 0.43999999999999995);
        int int2971 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int2971, 0);
        boolean boolean3998 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean3998, true);
    }
    @Test
    public void test2542() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int8945 = calculadora792.divInt(-500, 1000);
        Assertions.assertEquals(int8945, 0);
        double double9569 = calculadora792.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double9569, -209.945);
        boolean boolean8654 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8654, true);
        boolean boolean739 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean739, false);
    }
    @Test
    public void test2543() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        double double1516 = calculadora792.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double1516, -102.35841);
        double double1218 = calculadora792.subDouble(105.5, -10.953);
        Assertions.assertEquals(double1218, 116.453);
        double double9783 = calculadora792.somaDouble(0.0, -10.953);
        Assertions.assertEquals(double9783, -10.953);
    }
    @Test
    public void test2544() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
        double double1965 = calculadora792.mulDouble(-1.55, 0.55);
        Assertions.assertEquals(double1965, -0.8525000000000001);
        java.lang.String string2811 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2811, "ipsum");
        double double4515 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4515, 0.0502145530904775);
    }
    @Test
    public void test2545() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int1934 = calculadora792.subInt(-250, 250);
        Assertions.assertEquals(int1934, -500);
        double double6203 = calculadora792.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double6203, -14.09459);
        int int7426 = calculadora792.mulInt(0, 1000);
        Assertions.assertEquals(int7426, 0);
        java.lang.String string7140 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string7140, "VALEU");
    }
    @Test
    public void test2546() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double157 = calculadora792.divDouble(105.5, -1.55);
        Assertions.assertEquals(double157, -68.06451612903226);
        int int9240 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int9240, -250000);
        boolean boolean2931 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2931, true);
        java.lang.String string7626 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7626, "top");
    }
    @Test
    public void test2547() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double9091 = calculadora792.subDouble(1.99, -105.5);
        Assertions.assertEquals(double9091, 107.49);
        boolean boolean2390 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2390, true);
        int int1680 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int1680, 350);
        java.lang.String string673 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string673, "hi");
    }
    @Test
    public void test2548() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean4116 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4116, false);
        boolean boolean9281 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean9281, true);
        boolean boolean9454 = calculadora792.maior(500, -100);
        Assertions.assertEquals(boolean9454, true);
        double double8818 = calculadora792.divDouble(-10.953, 3.14159);
        Assertions.assertEquals(double8818, -3.4864511282503443);
        boolean boolean7116 = calculadora792.and(boolean9454, true);
        Assertions.assertEquals(boolean7116, false);
    }
    @Test
    public void test2549() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        double double9238 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9238, 0.0);
        boolean boolean4515 = calculadora792.maior(1000, 250);
        Assertions.assertEquals(boolean4515, true);
        double double512 = calculadora792.divDouble(-105.5, -105.5);
        Assertions.assertEquals(double512, 1.0);
    }
    @Test
    public void test2550() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double2088 = calculadora792.subDouble(1.99, 1.99);
        Assertions.assertEquals(double2088, 0.0);
        double double4862 = calculadora792.subDouble(0.0, 3.14159);
        Assertions.assertEquals(double4862, -3.14159);
        boolean boolean3657 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3657, true);
    }
    @Test
    public void test2551() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        boolean boolean7219 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean7219, true);
        java.lang.String string8421 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8421, "hello");
    }
    @Test
    public void test2552() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        boolean boolean7322 = calculadora792.maior(1000, 250);
        Assertions.assertEquals(boolean7322, true);
        int int1768 = calculadora792.subInt(1000, -100);
        Assertions.assertEquals(int1768, 1100);
        int int8677 = calculadora792.subInt(250, -500);
        Assertions.assertEquals(int8677, 750);
    }
    @Test
    public void test2553() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        java.lang.String string5092 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string5092, "LOREM");
        boolean boolean5960 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean5960, true);
    }
    @Test
    public void test2554() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        boolean boolean220 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean220, false);
        int int5494 = calculadora792.subInt(-1000, 100);
        Assertions.assertEquals(int5494, -1100);
        double double3055 = calculadora792.subDouble(0.55, 0.0);
        Assertions.assertEquals(double3055, 0.55);
    }
    @Test
    public void test2556() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        int int3475 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int3475, -1);
        java.lang.String string7145 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string7145, "lorem");
        boolean boolean5908 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5908, false);
        double double5618 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double5618, -103.51);
    }
    @Test
    public void test2557() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean2980 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2980, false);
        double double6658 = calculadora792.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double6658, 1.5786884422110552);
    }
    @Test
    public void test2558() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double7427 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double7427, 108.64159);
        boolean boolean5196 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5196, true);
    }
    @Test
    public void test2560() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
        java.lang.String string4439 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string4439, "HI");
        int int4390 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4390, -250000);
        boolean boolean8765 = calculadora792.or(false, boolean6721);
        Assertions.assertEquals(boolean8765, false);
        boolean boolean9163 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean9163, false);
    }
    @Test
    public void test2561() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        double double6206 = calculadora792.subDouble(0.55, -10.953);
        Assertions.assertEquals(double6206, 11.503);
        boolean boolean8757 = calculadora792.menor(500, -250);
        Assertions.assertEquals(boolean8757, false);
        int int1097 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int1097, -150);
    }
    @Test
    public void test2562() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        int int6731 = calculadora792.subInt(-250, 100);
        Assertions.assertEquals(int6731, -350);
        boolean boolean4055 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean4055, true);
        int int2366 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int2366, 500000);
        int int5954 = calculadora792.somaInt(1000, 0);
        Assertions.assertEquals(int5954, 1000);
    }
    @Test
    public void test2564() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        double double6000 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double6000, 94.547);
        boolean boolean8880 = calculadora792.maior(100, 1000);
        Assertions.assertEquals(boolean8880, false);
        double double8182 = calculadora792.subDouble(-1.55, 0.0);
        Assertions.assertEquals(double8182, -1.55);
        boolean boolean1662 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1662, false);
    }
    @Test
    public void test2565() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        double double161 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double161, -1155.5415);
        java.lang.String string4191 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string4191, "go");
        boolean boolean9426 = calculadora792.menor(100, -100);
        Assertions.assertEquals(boolean9426, false);
        int int9793 = calculadora792.subInt(1000, 0);
        Assertions.assertEquals(int9793, 1000);
        boolean boolean4471 = calculadora792.menor(500, -100);
        Assertions.assertEquals(boolean4471, false);
    }
    @Test
    public void test2566() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        java.lang.String string4372 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4372, "GO");
        int int9899 = calculadora792.divInt(-1000, 1000);
        Assertions.assertEquals(int9899, -1);
        int int148 = calculadora792.subInt(500, 250);
        Assertions.assertEquals(int148, 250);
        boolean boolean4707 = calculadora792.and(false, boolean5875);
        Assertions.assertEquals(boolean4707, false);
        boolean boolean5545 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean5545, false);
        int int2087 = calculadora792.divInt(-1000, -100);
        Assertions.assertEquals(int2087, 10);
    }
    @Test
    public void test2568() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int6586 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int6586, 62500);
        double double3049 = calculadora792.mulDouble(105.5, -105.5);
        Assertions.assertEquals(double3049, -11130.25);
        java.lang.String string5205 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5205, "valeu");
        boolean boolean9042 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9042, true);
    }
    @Test
    public void test2571() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        boolean boolean1595 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean1595, true);
        int int1251 = calculadora792.somaInt(100, 500);
        Assertions.assertEquals(int1251, 600);
        double double6181 = calculadora792.subDouble(105.5, 105.5);
        Assertions.assertEquals(double6181, 0.0);
    }
    @Test
    public void test2572() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean4116 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4116, false);
        boolean boolean9281 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean9281, true);
        boolean boolean9454 = calculadora792.maior(500, -100);
        Assertions.assertEquals(boolean9454, true);
        double double8818 = calculadora792.divDouble(-10.953, 3.14159);
        Assertions.assertEquals(double8818, -3.4864511282503443);
        boolean boolean7116 = calculadora792.and(boolean9454, true);
        Assertions.assertEquals(boolean7116, false);
        java.lang.String string2021 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string2021, "TOP");
    }
    @Test
    public void test2573() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean6333 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6333, false);
        boolean boolean3400 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3400, true);
        boolean boolean9233 = calculadora792.and(boolean6333, true);
        Assertions.assertEquals(boolean9233, false);
    }
    @Test
    public void test2575() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        int int5077 = calculadora792.subInt(0, 250);
        Assertions.assertEquals(int5077, -250);
    }
    @Test
    public void test2576() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        double double3271 = calculadora792.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double3271, 1.0945);
        boolean boolean7095 = calculadora792.menor(1000, -500);
        Assertions.assertEquals(boolean7095, false);
    }
    @Test
    public void test2577() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean333 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean333, false);
        boolean boolean6770 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean6770, true);
        boolean boolean4068 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean4068, true);
        double double1704 = calculadora792.mulDouble(1.99, -1.55);
        Assertions.assertEquals(double1704, -3.0845000000000002);
    }
    @Test
    public void test2578() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
        java.lang.String string2110 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string2110, "nice");
        java.lang.String string7133 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string7133, "hi");
        int int617 = calculadora792.divInt(-250, 250);
        Assertions.assertEquals(int617, -1);
    }
    @Test
    public void test2579() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        boolean boolean497 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean497, false);
        boolean boolean8951 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8951, true);
    }
    @Test
    public void test2580() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        boolean boolean6853 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean6853, false);
        boolean boolean9412 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9412, true);
        double double4789 = calculadora792.somaDouble(10.953, 105.5);
        Assertions.assertEquals(double4789, 116.453);
        boolean boolean2655 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean2655, false);
        double double2634 = calculadora792.subDouble(1.99, -10.953);
        Assertions.assertEquals(double2634, 12.943);
    }
    @Test
    public void test2582() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean7411 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7411, true);
        double double6206 = calculadora792.subDouble(0.55, -10.953);
        Assertions.assertEquals(double6206, 11.503);
        boolean boolean8757 = calculadora792.menor(500, -250);
        Assertions.assertEquals(boolean8757, false);
        boolean boolean422 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean422, false);
    }
    @Test
    public void test2583() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int835 = calculadora792.mulInt(-500, -500);
        Assertions.assertEquals(int835, 250000);
        double double2466 = calculadora792.divDouble(-10.953, 3.14159);
        Assertions.assertEquals(double2466, -3.4864511282503443);
        int int9668 = calculadora792.somaInt(1000, 250);
        Assertions.assertEquals(int9668, 1250);
    }
    @Test
    public void test2584() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        java.lang.String string5583 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string5583, "GO");
        java.lang.String string5955 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5955, "HELLO");
        boolean boolean1802 = calculadora792.menor(100, -100);
        Assertions.assertEquals(boolean1802, false);
    }
    @Test
    public void test2585() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean6602 = calculadora792.maior(0, 500);
        Assertions.assertEquals(boolean6602, false);
        int int9941 = calculadora792.somaInt(100, 100);
        Assertions.assertEquals(int9941, 200);
        java.lang.String string8593 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string8593, "ipsum");
    }
    @Test
    public void test2586() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean2980 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2980, false);
        int int2304 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int2304, -250000);
        java.lang.String string7529 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7529, "HELLO");
    }
    @Test
    public void test2588() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        boolean boolean8809 = calculadora792.maior(100, -1000);
        Assertions.assertEquals(boolean8809, true);
        boolean boolean9140 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean9140, true);
    }
    @Test
    public void test2589() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
        boolean boolean5126 = calculadora792.maior(100, -1000);
        Assertions.assertEquals(boolean5126, true);
        boolean boolean2852 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2852, true);
    }
    @Test
    public void test2590() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        int int1658 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int1658, -250000);
        double double4574 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double4574, -103.51);
        boolean boolean2048 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean2048, true);
        int int4981 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int4981, 0);
        int int9648 = calculadora792.subInt(0, -1000);
        Assertions.assertEquals(int9648, 1000);
    }
    @Test
    public void test2592() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
        java.lang.String string5913 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5913, "valeu");
        double double9157 = calculadora792.somaDouble(10.953, 3.14159);
        Assertions.assertEquals(double9157, 14.09459);
        int int6115 = calculadora792.somaInt(500, -250);
        Assertions.assertEquals(int6115, 250);
    }
    @Test
    public void test2593() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean6372 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6372, true);
        double double1857 = calculadora792.divDouble(10.953, 105.5);
        Assertions.assertEquals(double1857, 0.10381990521327014);
        double double217 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double217, 94.547);
    }
    @Test
    public void test2596() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean1506 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1506, false);
        boolean boolean4181 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean4181, true);
    }
    @Test
    public void test2597() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean6946 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean6946, false);
        double double1280 = calculadora792.somaDouble(-1.55, -1.55);
        Assertions.assertEquals(double1280, -3.1);
        boolean boolean8407 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean8407, true);
        double double5091 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double5091, 5.13159);
        java.lang.String string646 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string646, "hi");
        boolean boolean5388 = calculadora792.or(false, boolean8907);
        Assertions.assertEquals(boolean5388, false);
    }
    @Test
    public void test2598() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        java.lang.String string3079 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string3079, "VALEU");
        boolean boolean5305 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean5305, false);
        boolean boolean2914 = calculadora792.maior(-250, -250);
        Assertions.assertEquals(boolean2914, false);
        double double6564 = calculadora792.divDouble(1.99, -10.953);
        Assertions.assertEquals(double6564, -0.18168538300009132);
    }
    @Test
    public void test2599() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean2980 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2980, false);
        int int1144 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int1144, 50000);
        double double1126 = calculadora792.somaDouble(-10.953, 0.55);
        Assertions.assertEquals(double1126, -10.402999999999999);
    }
    @Test
    public void test2600() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string5224 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string5224, "top");
        boolean boolean7805 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7805, true);
    }
    @Test
    public void test2601() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
        java.lang.String string3151 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string3151, "lorem");
        int int8946 = calculadora792.subInt(250, -500);
        Assertions.assertEquals(int8946, 750);
    }
    @Test
    public void test2603() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double2301 = calculadora792.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double2301, -104.95);
        int int1333 = calculadora792.divInt(-500, 250);
        Assertions.assertEquals(int1333, -2);
        boolean boolean9636 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean9636, false);
        java.lang.String string2235 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string2235, "LOREM");
    }
    @Test
    public void test2605() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6619 = calculadora792.subInt(-250, -100);
        Assertions.assertEquals(int6619, -150);
        double double2435 = calculadora792.divDouble(0.55, -1.55);
        Assertions.assertEquals(double2435, -0.3548387096774194);
    }
    @Test
    public void test2606() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int4888 = calculadora792.subInt(1000, 100);
        Assertions.assertEquals(int4888, 900);
        double double5270 = calculadora792.subDouble(-1.55, -105.5);
        Assertions.assertEquals(double5270, 103.95);
        boolean boolean3605 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean3605, false);
    }
    @Test
    public void test2607() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean4855 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4855, false);
        boolean boolean2863 = calculadora792.maior(-1000, -250);
        Assertions.assertEquals(boolean2863, false);
        boolean boolean4688 = calculadora792.and(false, boolean7494);
        Assertions.assertEquals(boolean4688, false);
        double double2424 = calculadora792.subDouble(-1.55, -105.5);
        Assertions.assertEquals(double2424, 103.95);
        int int5185 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int5185, 500000);
    }
    @Test
    public void test2608() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean1390 = calculadora792.maior(500, -250);
        Assertions.assertEquals(boolean1390, true);
        double double2745 = calculadora792.somaDouble(-105.5, -105.5);
        Assertions.assertEquals(double2745, -211.0);
        boolean boolean4761 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean4761, false);
        double double1983 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double1983, 9.402999999999999);
        int int10 = calculadora792.mulInt(-250, 100);
        Assertions.assertEquals(int10, -25000);
    }
    @Test
    public void test2609() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int1621 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int1621, 600);
        int int9441 = calculadora792.mulInt(-1000, 1000);
        Assertions.assertEquals(int9441, -1000000);
        boolean boolean9503 = calculadora792.menor(250, -250);
        Assertions.assertEquals(boolean9503, false);
        int int6040 = calculadora792.somaInt(-250, -1000);
        Assertions.assertEquals(int6040, -1250);
        double double3911 = calculadora792.somaDouble(1.99, -10.953);
        Assertions.assertEquals(double3911, -8.963);
    }
    @Test
    public void test2610() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        java.lang.String string401 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string401, "HELLO");
        double double1080 = calculadora792.somaDouble(0.0, 0.55);
        Assertions.assertEquals(double1080, 0.55);
        boolean boolean8368 = calculadora792.and(boolean3614, boolean3614);
        Assertions.assertEquals(boolean8368, false);
    }
    @Test
    public void test2612() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int8945 = calculadora792.divInt(-500, 1000);
        Assertions.assertEquals(int8945, 0);
        double double9569 = calculadora792.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double9569, -209.945);
        int int6998 = calculadora792.subInt(1000, 1000);
        Assertions.assertEquals(int6998, 0);
    }
    @Test
    public void test2613() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        int int5237 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int5237, 0);
        int int465 = calculadora792.divInt(1000, 1000);
        Assertions.assertEquals(int465, 1);
        boolean boolean6896 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean6896, false);
        double double1395 = calculadora792.subDouble(1.99, -1.55);
        Assertions.assertEquals(double1395, 3.54);
    }
    @Test
    public void test2614() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int7705 = calculadora792.subInt(-500, 0);
        Assertions.assertEquals(int7705, -500);
        boolean boolean9037 = calculadora792.menor(-250, 100);
        Assertions.assertEquals(boolean9037, true);
    }
    @Test
    public void test2615() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        int int1490 = calculadora792.divInt(-100, 250);
        Assertions.assertEquals(int1490, 0);
        boolean boolean1806 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1806, false);
    }
    @Test
    public void test2616() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        java.lang.String string5988 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string5988, "go");
        boolean boolean6192 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6192, true);
        java.lang.String string9791 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string9791, "HELLO");
        int int3222 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int3222, -600);
    }
    @Test
    public void test2618() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double6675 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double6675, 1.7278745);
        double double4173 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4173, -107.05);
        java.lang.String string3159 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string3159, "HELLO");
        double double4647 = calculadora792.subDouble(-10.953, 0.0);
        Assertions.assertEquals(double4647, -10.953);
        boolean boolean4312 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean4312, true);
        java.lang.String string1069 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string1069, "ipsum");
        java.lang.String string435 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string435, "go");
    }
    @Test
    public void test2620() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
        java.lang.String string6530 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6530, "LOREM");
        int int6694 = calculadora792.subInt(0, -1000);
        Assertions.assertEquals(int6694, 1000);
        boolean boolean3674 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean3674, true);
    }
    @Test
    public void test2623() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        boolean boolean8523 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8523, true);
        int int7469 = calculadora792.divInt(0, 1000);
        Assertions.assertEquals(int7469, 0);
        int int9555 = calculadora792.somaInt(-1000, 100);
        Assertions.assertEquals(int9555, -900);
    }
    @Test
    public void test2624() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        int int9309 = calculadora792.divInt(1000, 250);
        Assertions.assertEquals(int9309, 4);
        double double1653 = calculadora792.divDouble(10.953, -105.5);
        Assertions.assertEquals(double1653, -0.10381990521327014);
        int int3108 = calculadora792.somaInt(250, -1000);
        Assertions.assertEquals(int3108, -750);
    }
    @Test
    public void test2626() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        java.lang.String string7528 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7528, "go");
        boolean boolean2327 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean2327, false);
        int int3351 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int3351, 0);
    }
    @Test
    public void test2627() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean914 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean914, false);
        double double1109 = calculadora792.somaDouble(-1.55, -1.55);
        Assertions.assertEquals(double1109, -3.1);
    }
    @Test
    public void test2628() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean7427 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean7427, false);
        double double554 = calculadora792.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double554, 1.7278745);
    }
    @Test
    public void test2629() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        int int5567 = calculadora792.somaInt(250, -1000);
        Assertions.assertEquals(int5567, -750);
        java.lang.String string2789 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2789, "ipsum");
    }
    @Test
    public void test2630() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        java.lang.String string6830 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string6830, "lorem");
        boolean boolean3355 = calculadora792.or(false, boolean8907);
        Assertions.assertEquals(boolean3355, false);
        boolean boolean6696 = calculadora792.menor(-250, 0);
        Assertions.assertEquals(boolean6696, true);
        int int753 = calculadora792.mulInt(1000, -100);
        Assertions.assertEquals(int753, -100000);
    }
    @Test
    public void test2631() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        int int6720 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int6720, -150);
        java.lang.String string4484 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string4484, "LOREM");
        double double9415 = calculadora792.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double9415, -58.025000000000006);
    }
    @Test
    public void test2633() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        java.lang.String string1860 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string1860, "go");
        boolean boolean4038 = calculadora792.menor(1000, 100);
        Assertions.assertEquals(boolean4038, false);
    }
    @Test
    public void test2634() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        int int6731 = calculadora792.subInt(-250, 100);
        Assertions.assertEquals(int6731, -350);
        boolean boolean4055 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean4055, true);
        double double5872 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double5872, 2.59159);
    }
    @Test
    public void test2635() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean6508 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6508, true);
        double double3844 = calculadora792.subDouble(-1.55, 0.0);
        Assertions.assertEquals(double3844, -1.55);
    }
    @Test
    public void test2636() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int1462 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int1462, 500000);
        double double8669 = calculadora792.mulDouble(-10.953, 0.55);
        Assertions.assertEquals(double8669, -6.024150000000001);
        int int5055 = calculadora792.subInt(100, 250);
        Assertions.assertEquals(int5055, -150);
        boolean boolean9887 = calculadora792.menor(-250, 0);
        Assertions.assertEquals(boolean9887, true);
    }
    @Test
    public void test2637() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        double double466 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double466, 108.64159);
        boolean boolean3918 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3918, true);
    }
    @Test
    public void test2639() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        java.lang.String string9756 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9756, "hello");
        java.lang.String string4389 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string4389, "LOREM");
        double double7117 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double7117, -0.0502145530904775);
        boolean boolean2823 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean2823, false);
    }
    @Test
    public void test2640() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        boolean boolean8455 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean8455, false);
        java.lang.String string8182 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string8182, "ipsum");
        java.lang.String string5284 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string5284, "LOREM");
    }
    @Test
    public void test2641() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean5909 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5909, true);
        double double4769 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double4769, 58.025000000000006);
        int int4643 = calculadora792.divInt(-100, 500);
        Assertions.assertEquals(int4643, 0);
    }
    @Test
    public void test2642() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        boolean boolean4457 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean4457, true);
    }
    @Test
    public void test2643() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double7427 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double7427, 108.64159);
        double double4027 = calculadora792.mulDouble(105.5, 0.55);
        Assertions.assertEquals(double4027, 58.025000000000006);
        int int1993 = calculadora792.subInt(-1000, 1000);
        Assertions.assertEquals(int1993, -2000);
    }
    @Test
    public void test2644() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        int int194 = calculadora792.somaInt(250, -500);
        Assertions.assertEquals(int194, -250);
        boolean boolean8526 = calculadora792.menor(1000, -500);
        Assertions.assertEquals(boolean8526, false);
        int int1010 = calculadora792.somaInt(0, -250);
        Assertions.assertEquals(int1010, -250);
        java.lang.String string966 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string966, "GO");
    }
    @Test
    public void test2645() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        int int4630 = calculadora792.divInt(0, 100);
        Assertions.assertEquals(int4630, 0);
        int int3467 = calculadora792.subInt(500, -250);
        Assertions.assertEquals(int3467, 750);
        boolean boolean1565 = calculadora792.menor(1000, 250);
        Assertions.assertEquals(boolean1565, false);
    }
    @Test
    public void test2646() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double3758 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double3758, 0.0);
        double double3447 = calculadora792.subDouble(0.55, 0.55);
        Assertions.assertEquals(double3447, 0.0);
        int int5480 = calculadora792.divInt(1000, -250);
        Assertions.assertEquals(int5480, -4);
        int int3177 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int3177, 250);
    }
    @Test
    public void test2647() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        java.lang.String string9514 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string9514, "HI");
    }
    @Test
    public void test2648() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        java.lang.String string2702 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string2702, "VALEU");
        int int7224 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int7224, 0);
        int int8120 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int8120, -25000);
        double double5195 = calculadora792.somaDouble(1.99, 0.0);
        Assertions.assertEquals(double5195, 1.99);
    }
    @Test
    public void test2649() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int1462 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int1462, 500000);
        boolean boolean9107 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean9107, false);
        boolean boolean5789 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5789, false);
    }
    @Test
    public void test2650() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        int int2024 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int2024, -25000);
        double double6307 = calculadora792.mulDouble(-105.5, 0.0);
        Assertions.assertEquals(double6307, -0.0);
    }
    @Test
    public void test2651() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean2692 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean2692, false);
        java.lang.String string4284 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string4284, "HELLO");
        boolean boolean2830 = calculadora792.maior(100, -500);
        Assertions.assertEquals(boolean2830, true);
        boolean boolean7942 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean7942, true);
    }
    @Test
    public void test2652() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int6586 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int6586, 62500);
        double double3049 = calculadora792.mulDouble(105.5, -105.5);
        Assertions.assertEquals(double3049, -11130.25);
        java.lang.String string5205 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5205, "valeu");
        boolean boolean9042 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9042, true);
        double double1349 = calculadora792.subDouble(-1.55, 0.55);
        Assertions.assertEquals(double1349, -2.1);
    }
    @Test
    public void test2653() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int6318 = calculadora792.mulInt(-250, -1000);
        Assertions.assertEquals(int6318, 250000);
        java.lang.String string4262 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string4262, "HELLO");
        boolean boolean9119 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean9119, false);
    }
    @Test
    public void test2654() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        double double3673 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double3673, 94.547);
        int int9228 = calculadora792.mulInt(500, -500);
        Assertions.assertEquals(int9228, -250000);
        double double7008 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double7008, -116.453);
        boolean boolean9555 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean9555, false);
        boolean boolean9467 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9467, true);
    }
    @Test
    public void test2656() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int1664 = calculadora792.divInt(-100, -500);
        Assertions.assertEquals(int1664, 0);
        boolean boolean5875 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5875, true);
        java.lang.String string4372 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4372, "GO");
        int int2005 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int2005, -150);
    }
    @Test
    public void test2658() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
        java.lang.String string5528 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string5528, "nice");
        double double6927 = calculadora792.somaDouble(3.14159, 10.953);
        Assertions.assertEquals(double6927, 14.09459);
        double double7737 = calculadora792.divDouble(0.0, 105.5);
        Assertions.assertEquals(double7737, 0.0);
        boolean boolean4148 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4148, false);
    }
    @Test
    public void test2659() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int8571 = calculadora792.somaInt(500, 0);
        Assertions.assertEquals(int8571, 500);
        java.lang.String string743 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string743, "nice");
    }
    @Test
    public void test2661() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
        java.lang.String string5528 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string5528, "nice");
        double double9196 = calculadora792.divDouble(10.953, 105.5);
        Assertions.assertEquals(double9196, 0.10381990521327014);
        int int8472 = calculadora792.mulInt(-1000, 100);
        Assertions.assertEquals(int8472, -100000);
        double double519 = calculadora792.mulDouble(0.0, -1.55);
        Assertions.assertEquals(double519, -0.0);
    }
    @Test
    public void test2662() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        double double6631 = calculadora792.somaDouble(-105.5, 1.99);
        Assertions.assertEquals(double6631, -103.51);
        java.lang.String string3827 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string3827, "IPSUM");
        java.lang.String string9028 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string9028, "TOP");
        double double842 = calculadora792.mulDouble(-1.55, -1.55);
        Assertions.assertEquals(double842, 2.4025000000000003);
    }
    @Test
    public void test2664() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        double double1099 = calculadora792.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double1099, -1.0);
        int int246 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int246, 10000);
        java.lang.String string1830 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string1830, "nice");
    }
    @Test
    public void test2666() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        int int2024 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int2024, -25000);
        boolean boolean9239 = calculadora792.maior(-500, 250);
        Assertions.assertEquals(boolean9239, false);
        double double2851 = calculadora792.somaDouble(-1.55, -10.953);
        Assertions.assertEquals(double2851, -12.503);
    }
    @Test
    public void test2667() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double4216 = calculadora792.mulDouble(0.0, 1.99);
        Assertions.assertEquals(double4216, 0.0);
        boolean boolean4097 = calculadora792.menor(-500, 500);
        Assertions.assertEquals(boolean4097, true);
        boolean boolean4248 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean4248, true);
        int int1640 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int1640, -100);
    }
    @Test
    public void test2668() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        double double8120 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double8120, -103.51);
    }
    @Test
    public void test2670() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        int int4350 = calculadora792.somaInt(-250, -500);
        Assertions.assertEquals(int4350, -750);
        boolean boolean5416 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean5416, false);
    }
    @Test
    public void test2672() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        int int1502 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int1502, 0);
        double double6905 = calculadora792.divDouble(-105.5, 0.55);
        Assertions.assertEquals(double6905, -191.8181818181818);
        int int6118 = calculadora792.mulInt(500, 250);
        Assertions.assertEquals(int6118, 125000);
    }
    @Test
    public void test2673() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean3047 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3047, true);
        int int6906 = calculadora792.mulInt(-250, -100);
        Assertions.assertEquals(int6906, 25000);
        double double8672 = calculadora792.subDouble(3.14159, 3.14159);
        Assertions.assertEquals(double8672, 0.0);
    }
    @Test
    public void test2674() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        java.lang.String string6622 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string6622, "nice");
        double double1092 = calculadora792.mulDouble(-1.55, 1.99);
        Assertions.assertEquals(double1092, -3.0845000000000002);
    }
    @Test
    public void test2675() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        java.lang.String string5091 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string5091, "VALEU");
        java.lang.String string873 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string873, "NICE");
        boolean boolean2175 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2175, false);
    }
    @Test
    public void test2677() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        double double3561 = calculadora792.divDouble(1.99, 3.14159);
        Assertions.assertEquals(double3561, 0.6334372085472643);
        double double4586 = calculadora792.subDouble(10.953, -10.953);
        Assertions.assertEquals(double4586, 21.906);
        java.lang.String string8763 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string8763, "VALEU");
        double double2273 = calculadora792.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double2273, 0.0);
    }
    @Test
    public void test2680() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int7292 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int7292, 500000);
        int int4464 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int4464, -600);
        double double7902 = calculadora792.mulDouble(-10.953, 105.5);
        Assertions.assertEquals(double7902, -1155.5415);
        double double6140 = calculadora792.mulDouble(-1.55, 0.0);
        Assertions.assertEquals(double6140, -0.0);
    }
    @Test
    public void test2682() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
        boolean boolean9153 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9153, true);
        int int1174 = calculadora792.divInt(250, 500);
        Assertions.assertEquals(int1174, 0);
    }
    @Test
    public void test2683() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        java.lang.String string787 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string787, "TOP");
        int int5548 = calculadora792.somaInt(-100, -100);
        Assertions.assertEquals(int5548, -200);
        double double4495 = calculadora792.subDouble(0.55, 0.0);
        Assertions.assertEquals(double4495, 0.55);
    }
    @Test
    public void test2684() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string8875 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string8875, "TOP");
        int int4972 = calculadora792.mulInt(500, 250);
        Assertions.assertEquals(int4972, 125000);
        java.lang.String string6510 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string6510, "valeu");
        boolean boolean7922 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean7922, true);
    }
    @Test
    public void test2685() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        double double2810 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double2810, -116.453);
        int int5189 = calculadora792.divInt(0, -500);
        Assertions.assertEquals(int5189, 0);
        java.lang.String string2900 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string2900, "valeu");
    }
    @Test
    public void test2687() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        int int9309 = calculadora792.divInt(1000, 250);
        Assertions.assertEquals(int9309, 4);
        boolean boolean842 = calculadora792.menor(0, 1000);
        Assertions.assertEquals(boolean842, true);
        int int6140 = calculadora792.somaInt(-500, 500);
        Assertions.assertEquals(int6140, 0);
        double double1250 = calculadora792.somaDouble(-10.953, -10.953);
        Assertions.assertEquals(double1250, -21.906);
    }
    @Test
    public void test2688() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int4743 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4743, 62500);
        boolean boolean6507 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean6507, true);
        java.lang.String string3307 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string3307, "go");
        int int2150 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int2150, 0);
        boolean boolean4208 = calculadora792.menor(0, -100);
        Assertions.assertEquals(boolean4208, false);
        double double6910 = calculadora792.somaDouble(105.5, -1.55);
        Assertions.assertEquals(double6910, 103.95);
    }
    @Test
    public void test2689() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int8571 = calculadora792.somaInt(500, 0);
        Assertions.assertEquals(int8571, 500);
        double double3021 = calculadora792.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double3021, -102.35841);
        double double795 = calculadora792.somaDouble(-105.5, -1.55);
        Assertions.assertEquals(double795, -107.05);
    }
    @Test
    public void test2690() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        double double1008 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double1008, -16.977149999999998);
        double double466 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double466, 108.64159);
        boolean boolean410 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean410, false);
    }
    @Test
    public void test2691() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        java.lang.String string5988 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string5988, "go");
        java.lang.String string8961 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string8961, "go");
        double double7675 = calculadora792.somaDouble(10.953, 10.953);
        Assertions.assertEquals(double7675, 21.906);
        boolean boolean6336 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean6336, false);
    }
    @Test
    public void test2692() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        boolean boolean6946 = calculadora792.menor(100, 100);
        Assertions.assertEquals(boolean6946, false);
        int int4422 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int4422, 0);
        boolean boolean4149 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4149, false);
    }
    @Test
    public void test2693() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        boolean boolean497 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean497, false);
        java.lang.String string3249 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3249, "hi");
    }
    @Test
    public void test2695() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9252 = calculadora792.subInt(-250, -250);
        Assertions.assertEquals(int9252, 0);
        boolean boolean79 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean79, false);
        double double8054 = calculadora792.subDouble(105.5, -105.5);
        Assertions.assertEquals(double8054, 211.0);
        double double663 = calculadora792.somaDouble(0.55, -105.5);
        Assertions.assertEquals(double663, -104.95);
        java.lang.String string4626 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string4626, "top");
        int int5347 = calculadora792.somaInt(500, 0);
        Assertions.assertEquals(int5347, 500);
        int int8860 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int8860, -1100);
    }
    @Test
    public void test2696() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        int int5419 = calculadora792.mulInt(-100, -500);
        Assertions.assertEquals(int5419, 50000);
    }
    @Test
    public void test2700() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean1506 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1506, false);
        int int7673 = calculadora792.subInt(-1000, -100);
        Assertions.assertEquals(int7673, -900);
    }
    @Test
    public void test2701() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        double double6601 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double6601, 0.0);
        boolean boolean8498 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean8498, false);
        int int9866 = calculadora792.divInt(-250, -250);
        Assertions.assertEquals(int9866, 1);
        boolean boolean1051 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1051, false);
    }
    @Test
    public void test2702() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double5263 = calculadora792.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double5263, 1.7278745);
        java.lang.String string5089 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5089, "lorem");
        double double2072 = calculadora792.subDouble(-10.953, 0.0);
        Assertions.assertEquals(double2072, -10.953);
    }
    @Test
    public void test2703() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        boolean boolean3280 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean3280, false);
        int int3965 = calculadora792.subInt(100, 1000);
        Assertions.assertEquals(int3965, -900);
        boolean boolean5024 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean5024, true);
    }
    @Test
    public void test2704() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        double double498 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double498, -107.05);
    }
    @Test
    public void test2705() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        int int9309 = calculadora792.divInt(1000, 250);
        Assertions.assertEquals(int9309, 4);
        double double3232 = calculadora792.mulDouble(-10.953, 1.99);
        Assertions.assertEquals(double3232, -21.79647);
    }
    @Test
    public void test2706() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double7431 = calculadora792.somaDouble(0.55, 10.953);
        Assertions.assertEquals(double7431, 11.503);
        double double7098 = calculadora792.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double7098, 4.69159);
        double double7914 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7914, 0.55);
        java.lang.String string5690 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5690, "HELLO");
        java.lang.String string4883 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string4883, "NICE");
    }
    @Test
    public void test2707() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double6930 = calculadora792.somaDouble(0.55, 3.14159);
        Assertions.assertEquals(double6930, 3.6915899999999997);
    }
    @Test
    public void test2708() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        java.lang.String string5170 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string5170, "top");
        double double8658 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double8658, -105.5);
        int int9724 = calculadora792.somaInt(-100, -500);
        Assertions.assertEquals(int9724, -600);
    }
    @Test
    public void test2709() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean5909 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5909, true);
        double double4769 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double4769, 58.025000000000006);
        int int4643 = calculadora792.divInt(-100, 500);
        Assertions.assertEquals(int4643, 0);
        double double2304 = calculadora792.somaDouble(1.99, -10.953);
        Assertions.assertEquals(double2304, -8.963);
    }
    @Test
    public void test2710() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int959 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int959, 0);
        boolean boolean3280 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean3280, false);
        int int3965 = calculadora792.subInt(100, 1000);
        Assertions.assertEquals(int3965, -900);
        boolean boolean5024 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean5024, true);
        boolean boolean4315 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean4315, false);
    }
    @Test
    public void test2713() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        double double9269 = calculadora792.mulDouble(10.953, -10.953);
        Assertions.assertEquals(double9269, -119.96820899999999);
        double double2478 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double2478, 9.632064274627956);
        java.lang.String string9978 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string9978, "HI");
    }
    @Test
    public void test2715() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int3642 = calculadora792.subInt(-100, 500);
        Assertions.assertEquals(int3642, -600);
        int int8297 = calculadora792.mulInt(-100, 250);
        Assertions.assertEquals(int8297, -25000);
    }
    @Test
    public void test2716() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int6462 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int6462, 500);
        java.lang.String string6658 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string6658, "IPSUM");
        int int5055 = calculadora792.subInt(1000, 250);
        Assertions.assertEquals(int5055, 750);
        double double5514 = calculadora792.divDouble(3.14159, -1.55);
        Assertions.assertEquals(double5514, -2.026832258064516);
    }
    @Test
    public void test2717() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double413 = calculadora792.subDouble(10.953, 1.99);
        Assertions.assertEquals(double413, 8.963);
        int int2343 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int2343, 62500);
        int int7020 = calculadora792.mulInt(1000, 0);
        Assertions.assertEquals(int7020, 0);
    }
    @Test
    public void test2718() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double2301 = calculadora792.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double2301, -104.95);
        int int1333 = calculadora792.divInt(-500, 250);
        Assertions.assertEquals(int1333, -2);
        boolean boolean9636 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean9636, false);
        boolean boolean4914 = calculadora792.maior(-500, 1000);
        Assertions.assertEquals(boolean4914, false);
        boolean boolean4581 = calculadora792.or(false, boolean9636);
        Assertions.assertEquals(boolean4581, false);
    }
    @Test
    public void test2721() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int3880 = calculadora792.divInt(-100, 500);
        Assertions.assertEquals(int3880, 0);
    }
    @Test
    public void test2722() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double2978 = calculadora792.mulDouble(0.0, 0.55);
        Assertions.assertEquals(double2978, 0.0);
        java.lang.String string9359 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string9359, "go");
        double double2136 = calculadora792.divDouble(1.99, 1.99);
        Assertions.assertEquals(double2136, 1.0);
    }
    @Test
    public void test2723() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        double double3673 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double3673, 94.547);
        int int6414 = calculadora792.somaInt(1000, -100);
        Assertions.assertEquals(int6414, 900);
        boolean boolean6359 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6359, true);
    }
    @Test
    public void test2724() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        boolean boolean4681 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4681, false);
        int int2069 = calculadora792.subInt(-100, -1000);
        Assertions.assertEquals(int2069, 900);
        boolean boolean89 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean89, true);
        double double3408 = calculadora792.divDouble(-105.5, 1.99);
        Assertions.assertEquals(double3408, -53.015075376884425);
        double double2575 = calculadora792.divDouble(10.953, 10.953);
        Assertions.assertEquals(double2575, 1.0);
        double double4010 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double4010, 1.1);
        java.lang.String string7732 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string7732, "HELLO");
    }
    @Test
    public void test2725() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int835 = calculadora792.mulInt(-500, -500);
        Assertions.assertEquals(int835, 250000);
        double double2466 = calculadora792.divDouble(-10.953, 3.14159);
        Assertions.assertEquals(double2466, -3.4864511282503443);
        boolean boolean5679 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean5679, false);
    }
    @Test
    public void test2726() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        boolean boolean3342 = calculadora792.menor(-1000, -250);
        Assertions.assertEquals(boolean3342, true);
        int int4785 = calculadora792.subInt(100, -100);
        Assertions.assertEquals(int4785, 200);
    }
    @Test
    public void test2728() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        int int6720 = calculadora792.somaInt(-250, 100);
        Assertions.assertEquals(int6720, -150);
        boolean boolean5297 = calculadora792.or(boolean3418, false);
        Assertions.assertEquals(boolean5297, false);
        int int2305 = calculadora792.subInt(250, -250);
        Assertions.assertEquals(int2305, 500);
        java.lang.String string6933 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string6933, "TOP");
        boolean boolean1559 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1559, false);
    }
    @Test
    public void test2729() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double2532 = calculadora792.somaDouble(0.55, 105.5);
        Assertions.assertEquals(double2532, 106.05);
    }
    @Test
    public void test2730() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        double double4366 = calculadora792.divDouble(0.55, 3.14159);
        Assertions.assertEquals(double4366, 0.1750705852768821);
        java.lang.String string2110 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string2110, "nice");
        java.lang.String string7133 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string7133, "hi");
        java.lang.String string9488 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string9488, "ipsum");
        boolean boolean9231 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean9231, true);
    }
    @Test
    public void test2731() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean4116 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4116, false);
        boolean boolean9281 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean9281, true);
        boolean boolean9454 = calculadora792.maior(500, -100);
        Assertions.assertEquals(boolean9454, true);
        double double8818 = calculadora792.divDouble(-10.953, 3.14159);
        Assertions.assertEquals(double8818, -3.4864511282503443);
        int int1880 = calculadora792.subInt(0, 250);
        Assertions.assertEquals(int1880, -250);
    }
    @Test
    public void test2733() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        boolean boolean220 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean220, false);
        int int2197 = calculadora792.subInt(250, 0);
        Assertions.assertEquals(int2197, 250);
    }
    @Test
    public void test2735() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double9802 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9802, -4.8694645);
        int int7984 = calculadora792.subInt(100, -1000);
        Assertions.assertEquals(int7984, 1100);
        int int627 = calculadora792.subInt(250, 0);
        Assertions.assertEquals(int627, 250);
    }
    @Test
    public void test2738() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        boolean boolean8455 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean8455, false);
        java.lang.String string8182 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string8182, "ipsum");
        int int8712 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int8712, 62500);
    }
    @Test
    public void test2739() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        boolean boolean8060 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8060, true);
        double double1008 = calculadora792.divDouble(-105.5, 105.5);
        Assertions.assertEquals(double1008, -1.0);
        int int5189 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int5189, 0);
        boolean boolean9402 = calculadora792.or(boolean8060, false);
        Assertions.assertEquals(boolean9402, false);
        boolean boolean5284 = calculadora792.maior(-500, 250);
        Assertions.assertEquals(boolean5284, false);
    }
    @Test
    public void test2740() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        int int2396 = calculadora792.subInt(250, -1000);
        Assertions.assertEquals(int2396, 1250);
        boolean boolean2783 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2783, false);
        boolean boolean3929 = calculadora792.menor(0, -1000);
        Assertions.assertEquals(boolean3929, false);
    }
    @Test
    public void test2741() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        double double498 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double498, -107.05);
        boolean boolean8177 = calculadora792.menor(-250, 100);
        Assertions.assertEquals(boolean8177, true);
    }
    @Test
    public void test2742() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        java.lang.String string9514 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string9514, "HI");
        double double9829 = calculadora792.subDouble(10.953, -1.55);
        Assertions.assertEquals(double9829, 12.503);
    }
    @Test
    public void test2743() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        java.lang.String string9756 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9756, "hello");
        int int1917 = calculadora792.mulInt(-500, -250);
        Assertions.assertEquals(int1917, 125000);
        double double269 = calculadora792.subDouble(0.55, -1.55);
        Assertions.assertEquals(double269, 2.1);
    }
    @Test
    public void test2745() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int352 = calculadora792.subInt(100, -100);
        Assertions.assertEquals(int352, 200);
        boolean boolean5110 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean5110, true);
        java.lang.String string7502 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string7502, "lorem");
        double double8279 = calculadora792.subDouble(-105.5, -10.953);
        Assertions.assertEquals(double8279, -94.547);
        boolean boolean4600 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean4600, false);
    }
    @Test
    public void test2746() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        double double3516 = calculadora792.mulDouble(-10.953, 10.953);
        Assertions.assertEquals(double3516, -119.96820899999999);
        int int5554 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int5554, 0);
        boolean boolean1468 = calculadora792.maior(-1000, 0);
        Assertions.assertEquals(boolean1468, false);
    }
    @Test
    public void test2747() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
        boolean boolean6814 = calculadora792.or(true, boolean6721);
        Assertions.assertEquals(boolean6814, true);
    }
    @Test
    public void test2748() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        double double3232 = calculadora792.divDouble(-105.5, 10.953);
        Assertions.assertEquals(double3232, -9.632064274627956);
        boolean boolean5734 = calculadora792.menor(-250, 250);
        Assertions.assertEquals(boolean5734, true);
        int int3230 = calculadora792.divInt(500, 100);
        Assertions.assertEquals(int3230, 5);
        double double6148 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double6148, 107.05);
        double double4999 = calculadora792.subDouble(10.953, 0.55);
        Assertions.assertEquals(double4999, 10.402999999999999);
        boolean boolean2307 = calculadora792.or(false, boolean916);
        Assertions.assertEquals(boolean2307, false);
    }
    @Test
    public void test2749() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
        java.lang.String string732 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string732, "NICE");
        boolean boolean1575 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean1575, true);
        int int82 = calculadora792.somaInt(-500, -250);
        Assertions.assertEquals(int82, -750);
        double double8998 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double8998, -0.2868246142609331);
    }
    @Test
    public void test2750() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int4743 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4743, 62500);
        boolean boolean6507 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean6507, true);
        java.lang.String string3307 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string3307, "go");
        int int2150 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int2150, 0);
        boolean boolean4208 = calculadora792.menor(0, -100);
        Assertions.assertEquals(boolean4208, false);
        boolean boolean7555 = calculadora792.or(true, boolean6507);
        Assertions.assertEquals(boolean7555, true);
        java.lang.String string1541 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string1541, "valeu");
    }
    @Test
    public void test2751() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
        boolean boolean3985 = calculadora792.maior(100, -500);
        Assertions.assertEquals(boolean3985, true);
    }
    @Test
    public void test2753() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean899 = calculadora792.maior(1000, 250);
        Assertions.assertEquals(boolean899, true);
    }
    @Test
    public void test2754() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6372 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean6372, true);
        double double6815 = calculadora792.mulDouble(0.55, -105.5);
        Assertions.assertEquals(double6815, -58.025000000000006);
        boolean boolean2971 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2971, true);
        boolean boolean9287 = calculadora792.maior(-100, -250);
        Assertions.assertEquals(boolean9287, true);
    }
    @Test
    public void test2755() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean716 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean716, false);
        boolean boolean6148 = calculadora792.and(boolean6342, true);
        Assertions.assertEquals(boolean6148, false);
        boolean boolean3580 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean3580, false);
        boolean boolean8003 = calculadora792.menor(-1000, 1000);
        Assertions.assertEquals(boolean8003, true);
        double double4611 = calculadora792.mulDouble(-1.55, -105.5);
        Assertions.assertEquals(double4611, 163.525);
    }
    @Test
    public void test2756() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        int int6731 = calculadora792.subInt(-250, 100);
        Assertions.assertEquals(int6731, -350);
        boolean boolean4055 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean4055, true);
        int int2366 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int2366, 500000);
        int int5954 = calculadora792.somaInt(1000, 0);
        Assertions.assertEquals(int5954, 1000);
        java.lang.String string372 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string372, "NICE");
    }
    @Test
    public void test2757() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double7431 = calculadora792.somaDouble(0.55, 10.953);
        Assertions.assertEquals(double7431, 11.503);
        double double1437 = calculadora792.somaDouble(10.953, 0.0);
        Assertions.assertEquals(double1437, 10.953);
        int int2919 = calculadora792.mulInt(-100, -500);
        Assertions.assertEquals(int2919, 50000);
    }
    @Test
    public void test2758() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3691 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int3691, -600);
        double double7327 = calculadora792.divDouble(0.0, 3.14159);
        Assertions.assertEquals(double7327, 0.0);
        java.lang.String string5066 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string5066, "nice");
        int int8557 = calculadora792.subInt(-500, -100);
        Assertions.assertEquals(int8557, -400);
    }
    @Test
    public void test2759() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int2875 = calculadora792.subInt(1000, -500);
        Assertions.assertEquals(int2875, 1500);
        int int2726 = calculadora792.mulInt(0, 1000);
        Assertions.assertEquals(int2726, 0);
    }
    @Test
    public void test2760() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        double double6134 = calculadora792.divDouble(10.953, 10.953);
        Assertions.assertEquals(double6134, 1.0);
    }
    @Test
    public void test2761() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double9830 = calculadora792.subDouble(1.99, 0.0);
        Assertions.assertEquals(double9830, 1.99);
        java.lang.String string1211 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string1211, "VALEU");
        int int5579 = calculadora792.divInt(0, -1000);
        Assertions.assertEquals(int5579, 0);
    }
    @Test
    public void test2762() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int1621 = calculadora792.subInt(500, -100);
        Assertions.assertEquals(int1621, 600);
        int int3929 = calculadora792.divInt(-100, 1000);
        Assertions.assertEquals(int3929, 0);
        double double6134 = calculadora792.somaDouble(-10.953, 3.14159);
        Assertions.assertEquals(double6134, -7.8114099999999995);
    }
    @Test
    public void test2763() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        double double3029 = calculadora792.somaDouble(-105.5, 10.953);
        Assertions.assertEquals(double3029, -94.547);
        double double8628 = calculadora792.somaDouble(10.953, 0.0);
        Assertions.assertEquals(double8628, 10.953);
    }
    @Test
    public void test2764() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        int int3856 = calculadora792.somaInt(1000, -500);
        Assertions.assertEquals(int3856, 500);
        java.lang.String string3247 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string3247, "top");
    }
    @Test
    public void test2765() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        java.lang.String string5170 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string5170, "top");
        double double8658 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double8658, -105.5);
        int int9724 = calculadora792.somaInt(-100, -500);
        Assertions.assertEquals(int9724, -600);
        double double7221 = calculadora792.divDouble(10.953, 0.55);
        Assertions.assertEquals(double7221, 19.91454545454545);
    }
    @Test
    public void test2766() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
        int int5523 = calculadora792.subInt(-500, 100);
        Assertions.assertEquals(int5523, -600);
    }
    @Test
    public void test2767() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2695 = calculadora792.divDouble(105.5, 10.953);
        Assertions.assertEquals(double2695, 9.632064274627956);
        double double3208 = calculadora792.somaDouble(-1.55, -1.55);
        Assertions.assertEquals(double3208, -3.1);
        java.lang.String string3784 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string3784, "hello");
    }
    @Test
    public void test2768() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double5081 = calculadora792.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double5081, 0.014691943127962086);
        boolean boolean56 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean56, true);
        int int2378 = calculadora792.divInt(1000, -100);
        Assertions.assertEquals(int2378, -10);
        java.lang.String string3220 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3220, "nice");
    }
    @Test
    public void test2769() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int8945 = calculadora792.divInt(-500, 1000);
        Assertions.assertEquals(int8945, 0);
        double double9569 = calculadora792.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double9569, -209.945);
        boolean boolean8654 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean8654, true);
        java.lang.String string8579 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string8579, "valeu");
    }
    @Test
    public void test2770() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean3895 = calculadora792.maior(1000, -250);
        Assertions.assertEquals(boolean3895, true);
        double double9709 = calculadora792.subDouble(-10.953, 1.99);
        Assertions.assertEquals(double9709, -12.943);
        int int5906 = calculadora792.mulInt(0, -250);
        Assertions.assertEquals(int5906, 0);
    }
    @Test
    public void test2771() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        double double4796 = calculadora792.subDouble(0.55, 0.55);
        Assertions.assertEquals(double4796, 0.0);
        java.lang.String string947 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string947, "VALEU");
        boolean boolean7288 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean7288, false);
    }
    @Test
    public void test2772() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean7027 = calculadora792.menor(100, -1000);
        Assertions.assertEquals(boolean7027, false);
        int int2857 = calculadora792.mulInt(-500, -1000);
        Assertions.assertEquals(int2857, 500000);
        boolean boolean9043 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9043, true);
        boolean boolean9383 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9383, true);
    }
    @Test
    public void test2774() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int1462 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int1462, 500000);
        boolean boolean5184 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean5184, false);
        double double9923 = calculadora792.somaDouble(-10.953, 0.55);
        Assertions.assertEquals(double9923, -10.402999999999999);
        boolean boolean3348 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean3348, true);
        double double9455 = calculadora792.mulDouble(105.5, 10.953);
        Assertions.assertEquals(double9455, 1155.5415);
    }
    @Test
    public void test2775() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double4418 = calculadora792.mulDouble(0.55, 0.55);
        Assertions.assertEquals(double4418, 0.30250000000000005);
        java.lang.String string2189 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string2189, "ipsum");
        boolean boolean7836 = calculadora792.maior(-100, 1000);
        Assertions.assertEquals(boolean7836, false);
        boolean boolean8832 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean8832, true);
        double double1965 = calculadora792.mulDouble(-1.55, 0.55);
        Assertions.assertEquals(double1965, -0.8525000000000001);
        boolean boolean5836 = calculadora792.maior(250, 500);
        Assertions.assertEquals(boolean5836, false);
    }
    @Test
    public void test2776() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean3418 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean3418, true);
        boolean boolean2203 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean2203, true);
        boolean boolean2058 = calculadora792.maior(250, 250);
        Assertions.assertEquals(boolean2058, false);
    }
    @Test
    public void test2777() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        int int5237 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int5237, 0);
        java.lang.String string3864 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string3864, "ipsum");
        int int1659 = calculadora792.divInt(-100, -100);
        Assertions.assertEquals(int1659, 1);
    }
    @Test
    public void test2778() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
        java.lang.String string4439 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string4439, "HI");
        int int4390 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4390, -250000);
        boolean boolean8765 = calculadora792.or(false, boolean6721);
        Assertions.assertEquals(boolean8765, false);
        boolean boolean9163 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean9163, false);
        boolean boolean5327 = calculadora792.and(false, boolean8765);
        Assertions.assertEquals(boolean5327, false);
    }
    @Test
    public void test2779() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
        java.lang.String string5913 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5913, "valeu");
        double double9157 = calculadora792.somaDouble(10.953, 3.14159);
        Assertions.assertEquals(double9157, 14.09459);
        int int6115 = calculadora792.somaInt(500, -250);
        Assertions.assertEquals(int6115, 250);
        double double4063 = calculadora792.somaDouble(10.953, -105.5);
        Assertions.assertEquals(double4063, -94.547);
    }
    @Test
    public void test2780() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        int int4170 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int4170, -1100);
        int int8733 = calculadora792.mulInt(-250, 0);
        Assertions.assertEquals(int8733, 0);
        int int6489 = calculadora792.subInt(-1000, -1000);
        Assertions.assertEquals(int6489, 0);
        boolean boolean1362 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean1362, true);
    }
    @Test
    public void test2782() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
        java.lang.String string5913 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5913, "valeu");
        boolean boolean7527 = calculadora792.menor(250, -250);
        Assertions.assertEquals(boolean7527, false);
    }
    @Test
    public void test2783() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double9330 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double9330, 0.0);
        int int6963 = calculadora792.somaInt(250, -100);
        Assertions.assertEquals(int6963, 150);
        boolean boolean1531 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean1531, false);
        boolean boolean1589 = calculadora792.menor(1000, -500);
        Assertions.assertEquals(boolean1589, false);
    }
    @Test
    public void test2784() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double480 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double480, 0.55);
        boolean boolean2893 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean2893, true);
        double double9726 = calculadora792.subDouble(0.55, 0.0);
        Assertions.assertEquals(double9726, 0.55);
        java.lang.String string4374 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string4374, "GO");
        java.lang.String string2085 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string2085, "TOP");
        double double3512 = calculadora792.mulDouble(10.953, 0.55);
        Assertions.assertEquals(double3512, 6.024150000000001);
        int int441 = calculadora792.divInt(100, -500);
        Assertions.assertEquals(int441, 0);
    }
    @Test
    public void test2785() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        int int572 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int572, 0);
        java.lang.String string8646 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string8646, "valeu");
        double double8868 = calculadora792.somaDouble(10.953, 0.0);
        Assertions.assertEquals(double8868, 10.953);
        boolean boolean7303 = calculadora792.maior(1000, 1000);
        Assertions.assertEquals(boolean7303, false);
    }
    @Test
    public void test2786() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        boolean boolean403 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean403, true);
    }
    @Test
    public void test2787() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double5263 = calculadora792.mulDouble(0.55, 3.14159);
        Assertions.assertEquals(double5263, 1.7278745);
        boolean boolean6787 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean6787, true);
    }
    @Test
    public void test2789() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int1462 = calculadora792.mulInt(1000, 500);
        Assertions.assertEquals(int1462, 500000);
        double double8669 = calculadora792.mulDouble(-10.953, 0.55);
        Assertions.assertEquals(double8669, -6.024150000000001);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
    }
    @Test
    public void test2790() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        java.lang.String string6335 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string6335, "valeu");
        int int3420 = calculadora792.subInt(1000, 100);
        Assertions.assertEquals(int3420, 900);
    }
    @Test
    public void test2791() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double413 = calculadora792.subDouble(10.953, 1.99);
        Assertions.assertEquals(double413, 8.963);
        int int2343 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int2343, 62500);
        boolean boolean7359 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean7359, false);
        java.lang.String string4231 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string4231, "go");
    }
    @Test
    public void test2794() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        java.lang.String string5315 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string5315, "valeu");
        boolean boolean7838 = calculadora792.menor(100, -250);
        Assertions.assertEquals(boolean7838, false);
        int int4484 = calculadora792.divInt(-100, 500);
        Assertions.assertEquals(int4484, 0);
    }
    @Test
    public void test2795() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        boolean boolean2980 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean2980, false);
        boolean boolean4301 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean4301, false);
        int int3765 = calculadora792.subInt(-500, 500);
        Assertions.assertEquals(int3765, -1000);
    }
    @Test
    public void test2796() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        int int5717 = calculadora792.mulInt(-100, 500);
        Assertions.assertEquals(int5717, -50000);
        double double2988 = calculadora792.divDouble(3.14159, 0.55);
        Assertions.assertEquals(double2988, 5.711981818181817);
        boolean boolean1120 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean1120, true);
    }
    @Test
    public void test2798() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
        double double9163 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9163, 0.0);
        boolean boolean8625 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean8625, false);
        int int3246 = calculadora792.subInt(250, 100);
        Assertions.assertEquals(int3246, 150);
        double double4780 = calculadora792.somaDouble(1.99, 1.99);
        Assertions.assertEquals(double4780, 3.98);
        java.lang.String string9831 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string9831, "ipsum");
    }
    @Test
    public void test2799() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean9704 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean9704, true);
        int int3691 = calculadora792.somaInt(-500, -100);
        Assertions.assertEquals(int3691, -600);
        int int1312 = calculadora792.subInt(250, 0);
        Assertions.assertEquals(int1312, 250);
    }
    @Test
    public void test2800() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int8571 = calculadora792.somaInt(500, 0);
        Assertions.assertEquals(int8571, 500);
        double double3021 = calculadora792.somaDouble(-105.5, 3.14159);
        Assertions.assertEquals(double3021, -102.35841);
        double double1746 = calculadora792.divDouble(-1.55, 1.99);
        Assertions.assertEquals(double1746, -0.7788944723618091);
    }
    @Test
    public void test2803() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        java.lang.String string7316 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string7316, "TOP");
        int int6710 = calculadora792.subInt(0, 1000);
        Assertions.assertEquals(int6710, -1000);
        java.lang.String string442 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string442, "lorem");
        boolean boolean231 = calculadora792.maior(250, 500);
        Assertions.assertEquals(boolean231, false);
        boolean boolean7118 = calculadora792.menor(1000, 100);
        Assertions.assertEquals(boolean7118, false);
        int int3046 = calculadora792.divInt(100, 100);
        Assertions.assertEquals(int3046, 1);
    }
    @Test
    public void test2804() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        double double6675 = calculadora792.mulDouble(3.14159, 0.55);
        Assertions.assertEquals(double6675, 1.7278745);
        double double4173 = calculadora792.somaDouble(-1.55, -105.5);
        Assertions.assertEquals(double4173, -107.05);
        java.lang.String string3159 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string3159, "HELLO");
        boolean boolean3331 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean3331, true);
        boolean boolean1731 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean1731, true);
    }
    @Test
    public void test2805() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
        double double9163 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9163, 0.0);
        double double8513 = calculadora792.divDouble(-105.5, -105.5);
        Assertions.assertEquals(double8513, 1.0);
    }
    @Test
    public void test2807() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        int int6586 = calculadora792.mulInt(250, 250);
        Assertions.assertEquals(int6586, 62500);
        boolean boolean948 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean948, true);
        double double2954 = calculadora792.mulDouble(0.0, -10.953);
        Assertions.assertEquals(double2954, -0.0);
    }
    @Test
    public void test2808() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        boolean boolean1170 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1170, false);
        boolean boolean1993 = calculadora792.menor(0, 0);
        Assertions.assertEquals(boolean1993, false);
        int int1934 = calculadora792.subInt(-250, 250);
        Assertions.assertEquals(int1934, -500);
        double double6203 = calculadora792.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double6203, -14.09459);
        int int7426 = calculadora792.mulInt(0, 1000);
        Assertions.assertEquals(int7426, 0);
        java.lang.String string1757 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string1757, "nice");
    }
    @Test
    public void test2811() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        java.lang.String string3620 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string3620, "nice");
        double double1911 = calculadora792.somaDouble(0.55, 0.55);
        Assertions.assertEquals(double1911, 1.1);
        boolean boolean4116 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean4116, false);
        boolean boolean9281 = calculadora792.menor(500, 1000);
        Assertions.assertEquals(boolean9281, true);
        boolean boolean9454 = calculadora792.maior(500, -100);
        Assertions.assertEquals(boolean9454, true);
        double double8818 = calculadora792.divDouble(-10.953, 3.14159);
        Assertions.assertEquals(double8818, -3.4864511282503443);
        boolean boolean7116 = calculadora792.and(boolean9454, true);
        Assertions.assertEquals(boolean7116, false);
        boolean boolean697 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean697, false);
    }
    @Test
    public void test2812() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double9830 = calculadora792.subDouble(1.99, 0.0);
        Assertions.assertEquals(double9830, 1.99);
        boolean boolean4746 = calculadora792.maior(-1000, -1000);
        Assertions.assertEquals(boolean4746, false);
        boolean boolean9079 = calculadora792.maior(1000, 500);
        Assertions.assertEquals(boolean9079, true);
    }
    @Test
    public void test2813() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        java.lang.String string197 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string197, "lorem");
        int int4064 = calculadora792.somaInt(100, 250);
        Assertions.assertEquals(int4064, 350);
        java.lang.String string9410 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string9410, "ipsum");
    }
    @Test
    public void test2814() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        boolean boolean6853 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean6853, false);
        boolean boolean9412 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean9412, true);
        double double4789 = calculadora792.somaDouble(10.953, 105.5);
        Assertions.assertEquals(double4789, 116.453);
        boolean boolean467 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean467, false);
        boolean boolean8859 = calculadora792.or(true, boolean7494);
        Assertions.assertEquals(boolean8859, true);
    }
    @Test
    public void test2815() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double5081 = calculadora792.divDouble(-1.55, -105.5);
        Assertions.assertEquals(double5081, 0.014691943127962086);
        java.lang.String string5827 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string5827, "TOP");
        int int1147 = calculadora792.mulInt(500, 0);
        Assertions.assertEquals(int1147, 0);
        boolean boolean3341 = calculadora792.maior(100, 250);
        Assertions.assertEquals(boolean3341, false);
    }
    @Test
    public void test2816() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int4136 = calculadora792.mulInt(100, 500);
        Assertions.assertEquals(int4136, 50000);
        boolean boolean8126 = calculadora792.maior(100, -250);
        Assertions.assertEquals(boolean8126, true);
        boolean boolean9007 = calculadora792.maior(1000, -500);
        Assertions.assertEquals(boolean9007, true);
        double double1676 = calculadora792.somaDouble(0.0, -1.55);
        Assertions.assertEquals(double1676, -1.55);
        java.lang.String string347 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string347, "GO");
        boolean boolean4204 = calculadora792.or(false, boolean9007);
        Assertions.assertEquals(boolean4204, false);
        double double7975 = calculadora792.mulDouble(-1.55, 10.953);
        Assertions.assertEquals(double7975, -16.977149999999998);
        double double7598 = calculadora792.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double7598, 1.5786884422110552);
        boolean boolean6917 = calculadora792.and(true, boolean9007);
        Assertions.assertEquals(boolean6917, false);
    }
    @Test
    public void test2817() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        int int1490 = calculadora792.divInt(-100, 250);
        Assertions.assertEquals(int1490, 0);
        boolean boolean1806 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean1806, false);
        double double6422 = calculadora792.divDouble(10.953, 105.5);
        Assertions.assertEquals(double6422, 0.10381990521327014);
    }
    @Test
    public void test2818() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        java.lang.String string5613 = calculadora792.toUpCase("HelLo");
        Assertions.assertEquals(string5613, "HELLO");
        boolean boolean6234 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6234, false);
        double double5572 = calculadora792.somaDouble(1.99, -1.55);
        Assertions.assertEquals(double5572, 0.43999999999999995);
    }
    @Test
    public void test2820() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        int int6282 = calculadora792.divInt(-250, 500);
        Assertions.assertEquals(int6282, 0);
        double double2775 = calculadora792.mulDouble(0.55, 105.5);
        Assertions.assertEquals(double2775, 58.025000000000006);
        boolean boolean6342 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6342, true);
        boolean boolean3011 = calculadora792.maior(100, -100);
        Assertions.assertEquals(boolean3011, true);
        boolean boolean6699 = calculadora792.maior(-250, 250);
        Assertions.assertEquals(boolean6699, false);
        java.lang.String string8547 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string8547, "go");
        boolean boolean6848 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean6848, false);
        int int6721 = calculadora792.somaInt(0, 1000);
        Assertions.assertEquals(int6721, 1000);
        double double3139 = calculadora792.subDouble(0.55, 3.14159);
        Assertions.assertEquals(double3139, -2.59159);
    }
    @Test
    public void test2821() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        int int572 = calculadora792.subInt(250, 250);
        Assertions.assertEquals(int572, 0);
        java.lang.String string8646 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string8646, "valeu");
        int int8704 = calculadora792.mulInt(-100, -250);
        Assertions.assertEquals(int8704, 25000);
        java.lang.String string394 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string394, "GO");
    }
    @Test
    public void test2822() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double6204 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double6204, -0.0);
        double double2246 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2246, 3.14159);
        double double5598 = calculadora792.mulDouble(1.99, 0.55);
        Assertions.assertEquals(double5598, 1.0945);
        boolean boolean6102 = calculadora792.maior(-500, -250);
        Assertions.assertEquals(boolean6102, false);
        java.lang.String string3732 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string3732, "HI");
    }
    @Test
    public void test2825() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double5960 = calculadora792.divDouble(3.14159, -10.953);
        Assertions.assertEquals(double5960, -0.2868246142609331);
        boolean boolean7709 = calculadora792.maior(-100, -500);
        Assertions.assertEquals(boolean7709, true);
        boolean boolean203 = calculadora792.maior(1000, -1000);
        Assertions.assertEquals(boolean203, true);
        int int5396 = calculadora792.somaInt(100, -100);
        Assertions.assertEquals(int5396, 0);
        int int9726 = calculadora792.mulInt(100, -250);
        Assertions.assertEquals(int9726, -25000);
        boolean boolean2541 = calculadora792.or(true, boolean203);
        Assertions.assertEquals(boolean2541, true);
        int int1837 = calculadora792.mulInt(-1000, 100);
        Assertions.assertEquals(int1837, -100000);
    }
    @Test
    public void test2826() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        double double1277 = calculadora792.divDouble(-105.5, -10.953);
        Assertions.assertEquals(double1277, 9.632064274627956);
        boolean boolean4078 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4078, false);
        java.lang.String string9633 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string9633, "TOP");
    }
    @Test
    public void test2827() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        double double7431 = calculadora792.somaDouble(0.55, 10.953);
        Assertions.assertEquals(double7431, 11.503);
        double double7098 = calculadora792.subDouble(3.14159, -1.55);
        Assertions.assertEquals(double7098, 4.69159);
        double double7914 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7914, 0.55);
        double double5510 = calculadora792.somaDouble(105.5, 105.5);
        Assertions.assertEquals(double5510, 211.0);
        boolean boolean6715 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean6715, true);
        int int1268 = calculadora792.divInt(250, 1000);
        Assertions.assertEquals(int1268, 0);
    }
    @Test
    public void test2828() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double7276 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double7276, 0.55);
        int int4029 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4029, 62500);
        boolean boolean9993 = calculadora792.menor(-250, -1000);
        Assertions.assertEquals(boolean9993, false);
        int int6603 = calculadora792.subInt(-100, 1000);
        Assertions.assertEquals(int6603, -1100);
    }
    @Test
    public void test2829() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double7418 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double7418, -105.5);
        java.lang.String string4682 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string4682, "top");
        boolean boolean302 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean302, false);
    }
    @Test
    public void test2830() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        int int6208 = calculadora792.somaInt(100, 1000);
        Assertions.assertEquals(int6208, 1100);
        java.lang.String string6269 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6269, "top");
        int int2505 = calculadora792.divInt(500, 250);
        Assertions.assertEquals(int2505, 2);
        java.lang.String string5091 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string5091, "VALEU");
        int int6615 = calculadora792.somaInt(-500, -500);
        Assertions.assertEquals(int6615, -1000);
        int int7447 = calculadora792.mulInt(-500, -100);
        Assertions.assertEquals(int7447, 50000);
        boolean boolean7216 = calculadora792.menor(250, 1000);
        Assertions.assertEquals(boolean7216, true);
    }
    @Test
    public void test2831() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double290 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double290, 0.0);
    }
    @Test
    public void test2832() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int3259 = calculadora792.divInt(250, -100);
        Assertions.assertEquals(int3259, -2);
        boolean boolean9692 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9692, true);
        double double1949 = calculadora792.subDouble(0.0, 0.0);
        Assertions.assertEquals(double1949, 0.0);
        double double3149 = calculadora792.subDouble(-105.5, -105.5);
        Assertions.assertEquals(double3149, 0.0);
        boolean boolean6714 = calculadora792.maior(0, -500);
        Assertions.assertEquals(boolean6714, true);
        int int9285 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int9285, 0);
    }
    @Test
    public void test2835() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        int int835 = calculadora792.mulInt(-500, -500);
        Assertions.assertEquals(int835, 250000);
        double double2466 = calculadora792.divDouble(-10.953, 3.14159);
        Assertions.assertEquals(double2466, -3.4864511282503443);
        int int9668 = calculadora792.somaInt(1000, 250);
        Assertions.assertEquals(int9668, 1250);
        java.lang.String string2199 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string2199, "go");
    }
    @Test
    public void test2837() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int6377 = calculadora792.subInt(0, 0);
        Assertions.assertEquals(int6377, 0);
        int int3086 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int3086, 0);
        boolean boolean4637 = calculadora792.maior(-100, 0);
        Assertions.assertEquals(boolean4637, false);
    }
    @Test
    public void test2838() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3948 = calculadora792.somaDouble(3.14159, 1.99);
        Assertions.assertEquals(double3948, 5.13159);
        double double2301 = calculadora792.somaDouble(-105.5, 0.55);
        Assertions.assertEquals(double2301, -104.95);
        int int1333 = calculadora792.divInt(-500, 250);
        Assertions.assertEquals(int1333, -2);
        boolean boolean9636 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean9636, false);
        boolean boolean6430 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean6430, true);
    }
    @Test
    public void test2839() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        double double3673 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double3673, 94.547);
        int int9228 = calculadora792.mulInt(500, -500);
        Assertions.assertEquals(int9228, -250000);
        double double7008 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double7008, -116.453);
        int int6177 = calculadora792.somaInt(100, 500);
        Assertions.assertEquals(int6177, 600);
    }
    @Test
    public void test2840() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        double double8402 = calculadora792.subDouble(-1.55, -10.953);
        Assertions.assertEquals(double8402, 9.402999999999999);
        boolean boolean555 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean555, true);
        boolean boolean5642 = calculadora792.menor(0, -250);
        Assertions.assertEquals(boolean5642, false);
        int int1529 = calculadora792.subInt(250, 1000);
        Assertions.assertEquals(int1529, -750);
        int int3321 = calculadora792.divInt(100, -500);
        Assertions.assertEquals(int3321, 0);
    }
    @Test
    public void test2842() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        boolean boolean3926 = calculadora792.menor(-250, 500);
        Assertions.assertEquals(boolean3926, true);
        int int4888 = calculadora792.subInt(1000, 100);
        Assertions.assertEquals(int4888, 900);
        double double5270 = calculadora792.subDouble(-1.55, -105.5);
        Assertions.assertEquals(double5270, 103.95);
        boolean boolean2769 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean2769, true);
        boolean boolean8481 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean8481, true);
    }
    @Test
    public void test2843() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        double double1658 = calculadora792.mulDouble(-105.5, -10.953);
        Assertions.assertEquals(double1658, 1155.5415);
        java.lang.String string4172 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string4172, "IPSUM");
        boolean boolean862 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean862, false);
        java.lang.String string8376 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string8376, "lorem");
    }
    @Test
    public void test2844() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        java.lang.String string7378 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string7378, "top");
        double double9777 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double9777, 0.2763819095477387);
        boolean boolean5917 = calculadora792.menor(-100, 0);
        Assertions.assertEquals(boolean5917, true);
        boolean boolean197 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean197, false);
        boolean boolean5954 = calculadora792.maior(250, -100);
        Assertions.assertEquals(boolean5954, true);
    }
    @Test
    public void test2845() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        java.lang.String string5092 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string5092, "LOREM");
        boolean boolean4625 = calculadora792.maior(-250, 0);
        Assertions.assertEquals(boolean4625, false);
        java.lang.String string4742 = calculadora792.toUpCase("IpsUm");
        Assertions.assertEquals(string4742, "IPSUM");
        boolean boolean4233 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean4233, false);
    }
    @Test
    public void test2846() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        double double369 = calculadora792.divDouble(0.0, 105.5);
        Assertions.assertEquals(double369, 0.0);
        boolean boolean1060 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean1060, true);
        double double5887 = calculadora792.subDouble(10.953, 10.953);
        Assertions.assertEquals(double5887, 0.0);
        java.lang.String string4125 = calculadora792.toUpCase("tOp");
        Assertions.assertEquals(string4125, "TOP");
        int int5 = calculadora792.mulInt(1000, -1000);
        Assertions.assertEquals(int5, -1000000);
        boolean boolean1532 = calculadora792.menor(0, -1000);
        Assertions.assertEquals(boolean1532, false);
    }
    @Test
    public void test2847() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int9795 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int9795, 2000);
        double double5175 = calculadora792.somaDouble(0.0, -105.5);
        Assertions.assertEquals(double5175, -105.5);
        boolean boolean6721 = calculadora792.maior(-100, 500);
        Assertions.assertEquals(boolean6721, false);
        int int4191 = calculadora792.mulInt(-500, 500);
        Assertions.assertEquals(int4191, -250000);
        boolean boolean6814 = calculadora792.or(true, boolean6721);
        Assertions.assertEquals(boolean6814, true);
        int int8487 = calculadora792.somaInt(-1000, -1000);
        Assertions.assertEquals(int8487, -2000);
    }
    @Test
    public void test2849() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double4479 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4479, 34.409835269999995);
        boolean boolean1156 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean1156, false);
        double double7427 = calculadora792.subDouble(3.14159, -105.5);
        Assertions.assertEquals(double7427, 108.64159);
        java.lang.String string9581 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string9581, "hello");
    }
    @Test
    public void test2850() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double3120 = calculadora792.divDouble(-10.953, 1.99);
        Assertions.assertEquals(double3120, -5.504020100502513);
        int int8487 = calculadora792.somaInt(500, 500);
        Assertions.assertEquals(int8487, 1000);
        double double3673 = calculadora792.somaDouble(105.5, -10.953);
        Assertions.assertEquals(double3673, 94.547);
        int int9228 = calculadora792.mulInt(500, -500);
        Assertions.assertEquals(int9228, -250000);
        double double7008 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double7008, -116.453);
        boolean boolean49 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean49, false);
    }
    @Test
    public void test2852() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        java.lang.String string5583 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string5583, "GO");
        boolean boolean1693 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean1693, false);
        java.lang.String string2066 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string2066, "lorem");
        double double7962 = calculadora792.divDouble(105.5, -105.5);
        Assertions.assertEquals(double7962, -1.0);
        boolean boolean3828 = calculadora792.maior(-500, -1000);
        Assertions.assertEquals(boolean3828, true);
        boolean boolean5470 = calculadora792.maior(500, 0);
        Assertions.assertEquals(boolean5470, true);
    }
    @Test
    public void test2853() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        boolean boolean2238 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean2238, false);
        java.lang.String string6911 = calculadora792.toLowCase("IpsUm");
        Assertions.assertEquals(string6911, "ipsum");
    }
    @Test
    public void test2854() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double5810 = calculadora792.mulDouble(3.14159, -105.5);
        Assertions.assertEquals(double5810, -331.437745);
        boolean boolean5909 = calculadora792.or(true, true);
        Assertions.assertEquals(boolean5909, true);
        double double2598 = calculadora792.subDouble(-10.953, -1.55);
        Assertions.assertEquals(double2598, -9.402999999999999);
        boolean boolean9172 = calculadora792.menor(500, -1000);
        Assertions.assertEquals(boolean9172, false);
    }
    @Test
    public void test2855() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean3614 = calculadora792.maior(-250, -500);
        Assertions.assertEquals(boolean3614, true);
        boolean boolean1682 = calculadora792.and(true, boolean3614);
        Assertions.assertEquals(boolean1682, false);
        int int9456 = calculadora792.mulInt(-500, 1000);
        Assertions.assertEquals(int9456, -500000);
        boolean boolean503 = calculadora792.and(true, boolean1682);
        Assertions.assertEquals(boolean503, false);
    }
    @Test
    public void test2856() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string3411 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string3411, "hi");
        double double9830 = calculadora792.subDouble(1.99, 0.0);
        Assertions.assertEquals(double9830, 1.99);
        java.lang.String string1211 = calculadora792.toUpCase("vAlEu");
        Assertions.assertEquals(string1211, "VALEU");
        int int5579 = calculadora792.divInt(0, -1000);
        Assertions.assertEquals(int5579, 0);
        int int7741 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int7741, 2000);
    }
    @Test
    public void test2858() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int2130 = calculadora792.divInt(-1000, -100);
        Assertions.assertEquals(int2130, 10);
        int int9791 = calculadora792.subInt(-1000, 0);
        Assertions.assertEquals(int9791, -1000);
        int int8225 = calculadora792.divInt(250, -500);
        Assertions.assertEquals(int8225, 0);
        int int5638 = calculadora792.somaInt(1000, 100);
        Assertions.assertEquals(int5638, 1100);
        int int8265 = calculadora792.mulInt(1000, -500);
        Assertions.assertEquals(int8265, -500000);
    }
    @Test
    public void test2859() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double556 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double556, 3.14159);
        boolean boolean3308 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean3308, false);
        int int4979 = calculadora792.subInt(-100, 100);
        Assertions.assertEquals(int4979, -200);
        boolean boolean9262 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9262, false);
        int int2354 = calculadora792.somaInt(-500, 500);
        Assertions.assertEquals(int2354, 0);
        double double8643 = calculadora792.subDouble(3.14159, 1.99);
        Assertions.assertEquals(double8643, 1.15159);
        double double9247 = calculadora792.somaDouble(-10.953, 10.953);
        Assertions.assertEquals(double9247, 0.0);
    }
    @Test
    public void test2860() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double2857 = calculadora792.divDouble(0.55, -10.953);
        Assertions.assertEquals(double2857, -0.0502145530904775);
        int int2326 = calculadora792.divInt(0, -100);
        Assertions.assertEquals(int2326, 0);
        boolean boolean9125 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean9125, true);
        boolean boolean4019 = calculadora792.maior(-500, 500);
        Assertions.assertEquals(boolean4019, false);
        boolean boolean6417 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean6417, false);
        double double2611 = calculadora792.mulDouble(3.14159, 3.14159);
        Assertions.assertEquals(double2611, 9.869587728099999);
        double double4414 = calculadora792.divDouble(3.14159, 10.953);
        Assertions.assertEquals(double4414, 0.2868246142609331);
        boolean boolean3571 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean3571, false);
    }
    @Test
    public void test2862() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        boolean boolean7742 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean7742, true);
        java.lang.String string569 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string569, "LOREM");
        boolean boolean9313 = calculadora792.maior(0, 250);
        Assertions.assertEquals(boolean9313, false);
        int int299 = calculadora792.somaInt(-250, -250);
        Assertions.assertEquals(int299, -500);
    }
    @Test
    public void test2865() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean1986 = calculadora792.menor(-250, 1000);
        Assertions.assertEquals(boolean1986, true);
        double double9802 = calculadora792.mulDouble(-1.55, 3.14159);
        Assertions.assertEquals(double9802, -4.8694645);
        int int6276 = calculadora792.somaInt(-100, -1000);
        Assertions.assertEquals(int6276, -1100);
        int int4383 = calculadora792.somaInt(-250, -250);
        Assertions.assertEquals(int4383, -500);
    }
    @Test
    public void test2866() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        int int1908 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int1908, 0);
        boolean boolean9396 = calculadora792.menor(-250, 0);
        Assertions.assertEquals(boolean9396, true);
        int int7971 = calculadora792.subInt(-1000, -100);
        Assertions.assertEquals(int7971, -900);
    }
    @Test
    public void test2867() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        double double2421 = calculadora792.subDouble(-105.5, -1.55);
        Assertions.assertEquals(double2421, -103.95);
        boolean boolean8907 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean8907, true);
        java.lang.String string8840 = calculadora792.toUpCase("hI");
        Assertions.assertEquals(string8840, "HI");
        boolean boolean3575 = calculadora792.menor(250, -100);
        Assertions.assertEquals(boolean3575, false);
        double double8789 = calculadora792.divDouble(-10.953, -105.5);
        Assertions.assertEquals(double8789, 0.10381990521327014);
        double double4011 = calculadora792.mulDouble(3.14159, 10.953);
        Assertions.assertEquals(double4011, 34.409835269999995);
    }
    @Test
    public void test2868() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        boolean boolean2965 = calculadora792.menor(1000, -250);
        Assertions.assertEquals(boolean2965, false);
        java.lang.String string6073 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string6073, "top");
        boolean boolean261 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean261, true);
        boolean boolean9191 = calculadora792.maior(250, -500);
        Assertions.assertEquals(boolean9191, true);
    }
    @Test
    public void test2869() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        java.lang.String string8476 = calculadora792.toLowCase("NicE");
        Assertions.assertEquals(string8476, "nice");
        boolean boolean9874 = calculadora792.maior(-100, -100);
        Assertions.assertEquals(boolean9874, false);
        boolean boolean5086 = calculadora792.maior(100, 0);
        Assertions.assertEquals(boolean5086, true);
        boolean boolean5568 = calculadora792.maior(0, -100);
        Assertions.assertEquals(boolean5568, true);
        double double575 = calculadora792.subDouble(-10.953, 3.14159);
        Assertions.assertEquals(double575, -14.09459);
        boolean boolean9267 = calculadora792.menor(-1000, 100);
        Assertions.assertEquals(boolean9267, true);
        int int7791 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int7791, 250);
    }
    @Test
    public void test2870() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double2949 = calculadora792.somaDouble(3.14159, 0.0);
        Assertions.assertEquals(double2949, 3.14159);
        java.lang.String string6162 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string6162, "LOREM");
        int int4743 = calculadora792.mulInt(-250, -250);
        Assertions.assertEquals(int4743, 62500);
        boolean boolean6507 = calculadora792.maior(1000, 0);
        Assertions.assertEquals(boolean6507, true);
        java.lang.String string3307 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string3307, "go");
        int int2150 = calculadora792.somaInt(-250, 250);
        Assertions.assertEquals(int2150, 0);
        boolean boolean4208 = calculadora792.menor(0, -100);
        Assertions.assertEquals(boolean4208, false);
        boolean boolean7555 = calculadora792.or(true, boolean6507);
        Assertions.assertEquals(boolean7555, true);
        java.lang.String string1541 = calculadora792.toLowCase("vAlEu");
        Assertions.assertEquals(string1541, "valeu");
        boolean boolean4721 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean4721, false);
    }
    @Test
    public void test2872() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int2875 = calculadora792.subInt(1000, -500);
        Assertions.assertEquals(int2875, 1500);
        double double294 = calculadora792.mulDouble(-10.953, -10.953);
        Assertions.assertEquals(double294, 119.96820899999999);
        double double6881 = calculadora792.divDouble(0.55, 1.99);
        Assertions.assertEquals(double6881, 0.2763819095477387);
    }
    @Test
    public void test2873() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        boolean boolean6240 = calculadora792.maior(250, 1000);
        Assertions.assertEquals(boolean6240, false);
        int int5784 = calculadora792.somaInt(-1000, -100);
        Assertions.assertEquals(int5784, -1100);
        java.lang.String string552 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string552, "top");
        double double769 = calculadora792.subDouble(1.99, 105.5);
        Assertions.assertEquals(double769, -103.51);
        double double2837 = calculadora792.subDouble(0.55, 3.14159);
        Assertions.assertEquals(double2837, -2.59159);
        double double7710 = calculadora792.somaDouble(-105.5, -10.953);
        Assertions.assertEquals(double7710, -116.453);
    }
    @Test
    public void test2874() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        java.lang.String string1959 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string1959, "LOREM");
    }
    @Test
    public void test2875() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        boolean boolean1119 = calculadora792.menor(100, 250);
        Assertions.assertEquals(boolean1119, true);
        java.lang.String string5583 = calculadora792.toUpCase("Go");
        Assertions.assertEquals(string5583, "GO");
        boolean boolean1693 = calculadora792.and(false, true);
        Assertions.assertEquals(boolean1693, false);
        java.lang.String string2066 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string2066, "lorem");
        double double7962 = calculadora792.divDouble(105.5, -105.5);
        Assertions.assertEquals(double7962, -1.0);
        double double6182 = calculadora792.divDouble(3.14159, 1.99);
        Assertions.assertEquals(double6182, 1.5786884422110552);
        java.lang.String string5860 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5860, "lorem");
    }
    @Test
    public void test2878() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double2302 = calculadora792.subDouble(-105.5, 1.99);
        Assertions.assertEquals(double2302, -107.49);
        int int59 = calculadora792.divInt(100, -250);
        Assertions.assertEquals(int59, 0);
        boolean boolean5233 = calculadora792.maior(0, 1000);
        Assertions.assertEquals(boolean5233, false);
        int int9867 = calculadora792.subInt(0, 100);
        Assertions.assertEquals(int9867, -100);
        int int8945 = calculadora792.divInt(-500, 1000);
        Assertions.assertEquals(int8945, 0);
        double double9569 = calculadora792.mulDouble(1.99, -105.5);
        Assertions.assertEquals(double9569, -209.945);
        double double9090 = calculadora792.divDouble(0.55, 0.55);
        Assertions.assertEquals(double9090, 1.0);
    }
    @Test
    public void test2879() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int9013 = calculadora792.mulInt(100, 100);
        Assertions.assertEquals(int9013, 10000);
        int int865 = calculadora792.somaInt(250, 100);
        Assertions.assertEquals(int865, 350);
        java.lang.String string6167 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string6167, "NICE");
        int int1759 = calculadora792.mulInt(-1000, -250);
        Assertions.assertEquals(int1759, 250000);
    }
    @Test
    public void test2880() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        boolean boolean399 = calculadora792.and(true, true);
        Assertions.assertEquals(boolean399, true);
        int int8807 = calculadora792.mulInt(-250, -500);
        Assertions.assertEquals(int8807, 125000);
        boolean boolean1160 = calculadora792.maior(250, -1000);
        Assertions.assertEquals(boolean1160, true);
        double double9225 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double9225, 0.0);
        java.lang.String string7356 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string7356, "go");
        java.lang.String string1408 = calculadora792.toUpCase("NicE");
        Assertions.assertEquals(string1408, "NICE");
        boolean boolean5442 = calculadora792.or(true, false);
        Assertions.assertEquals(boolean5442, true);
    }
    @Test
    public void test2882() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int6410 = calculadora792.somaInt(-250, 500);
        Assertions.assertEquals(int6410, 250);
        int int7569 = calculadora792.somaInt(0, -1000);
        Assertions.assertEquals(int7569, -1000);
        double double9168 = calculadora792.subDouble(3.14159, 0.55);
        Assertions.assertEquals(double9168, 2.59159);
        double double4046 = calculadora792.divDouble(0.55, 10.953);
        Assertions.assertEquals(double4046, 0.0502145530904775);
        double double9523 = calculadora792.somaDouble(0.0, 0.0);
        Assertions.assertEquals(double9523, 0.0);
        int int2949 = calculadora792.mulInt(-500, 250);
        Assertions.assertEquals(int2949, -125000);
        boolean boolean9218 = calculadora792.or(false, false);
        Assertions.assertEquals(boolean9218, false);
        double double790 = calculadora792.mulDouble(1.99, 105.5);
        Assertions.assertEquals(double790, 209.945);
    }
    @Test
    public void test2883() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        boolean boolean382 = calculadora792.maior(500, 500);
        Assertions.assertEquals(boolean382, false);
        double double1210 = calculadora792.subDouble(0.0, 3.14159);
        Assertions.assertEquals(double1210, -3.14159);
    }
    @Test
    public void test2884() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double8763 = calculadora792.divDouble(-1.55, -1.55);
        Assertions.assertEquals(double8763, 1.0);
        boolean boolean1006 = calculadora792.and(false, false);
        Assertions.assertEquals(boolean1006, false);
        double double5961 = calculadora792.somaDouble(0.55, 0.0);
        Assertions.assertEquals(double5961, 0.55);
        int int1774 = calculadora792.divInt(-1000, -100);
        Assertions.assertEquals(int1774, 10);
        double double4710 = calculadora792.divDouble(-105.5, 0.55);
        Assertions.assertEquals(double4710, -191.8181818181818);
    }
    @Test
    public void test2885() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        java.lang.String string8199 = calculadora792.toLowCase("HelLo");
        Assertions.assertEquals(string8199, "hello");
        double double2441 = calculadora792.mulDouble(10.953, 0.0);
        Assertions.assertEquals(double2441, 0.0);
        java.lang.String string8290 = calculadora792.toLowCase("tOp");
        Assertions.assertEquals(string8290, "top");
        java.lang.String string7419 = calculadora792.toLowCase("hI");
        Assertions.assertEquals(string7419, "hi");
    }
    @Test
    public void test2886() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        boolean boolean7494 = calculadora792.menor(-500, 100);
        Assertions.assertEquals(boolean7494, true);
        double double4269 = calculadora792.divDouble(0.0, -1.55);
        Assertions.assertEquals(double4269, -0.0);
        double double7287 = calculadora792.mulDouble(105.5, 0.0);
        Assertions.assertEquals(double7287, 0.0);
        boolean boolean242 = calculadora792.and(boolean7494, true);
        Assertions.assertEquals(boolean242, false);
        int int6288 = calculadora792.somaInt(1000, 1000);
        Assertions.assertEquals(int6288, 2000);
        java.lang.String string5988 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string5988, "go");
        int int8436 = calculadora792.subInt(-100, -100);
        Assertions.assertEquals(int8436, 0);
    }
    @Test
    public void test2887() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        int int7419 = calculadora792.divInt(-500, 1000);
        Assertions.assertEquals(int7419, 0);
    }
    @Test
    public void test2888() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean269 = calculadora792.maior(-250, -1000);
        Assertions.assertEquals(boolean269, true);
        boolean boolean6083 = calculadora792.or(false, true);
        Assertions.assertEquals(boolean6083, true);
        double double4938 = calculadora792.subDouble(10.953, 105.5);
        Assertions.assertEquals(double4938, -94.547);
        boolean boolean9837 = calculadora792.maior(1000, 1000);
        Assertions.assertEquals(boolean9837, false);
        double double2557 = calculadora792.subDouble(105.5, -1.55);
        Assertions.assertEquals(double2557, 107.05);
    }
    @Test
    public void test2889() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        double double3938 = calculadora792.subDouble(-105.5, 105.5);
        Assertions.assertEquals(double3938, -211.0);
        double double6090 = calculadora792.mulDouble(105.5, -10.953);
        Assertions.assertEquals(double6090, -1155.5415);
        int int2205 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int2205, 150);
        java.lang.String string5769 = calculadora792.toLowCase("lOrEm");
        Assertions.assertEquals(string5769, "lorem");
        int int8354 = calculadora792.somaInt(500, 1000);
        Assertions.assertEquals(int8354, 1500);
    }
    @Test
    public void test2890() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        java.lang.String string7908 = calculadora792.toUpCase("lOrEm");
        Assertions.assertEquals(string7908, "LOREM");
        int int9307 = calculadora792.somaInt(-100, 250);
        Assertions.assertEquals(int9307, 150);
        boolean boolean1911 = calculadora792.menor(-100, 250);
        Assertions.assertEquals(boolean1911, true);
        boolean boolean5685 = calculadora792.and(true, false);
        Assertions.assertEquals(boolean5685, false);
        boolean boolean5126 = calculadora792.maior(100, -1000);
        Assertions.assertEquals(boolean5126, true);
        int int6983 = calculadora792.divInt(-250, -100);
        Assertions.assertEquals(int6983, 2);
        double double7662 = calculadora792.mulDouble(-1.55, 1.99);
        Assertions.assertEquals(double7662, -3.0845000000000002);
    }
    @Test
    public void test2891() throws Throwable {
        Calculadora calculadora792 = new Calculadora();
        boolean boolean916 = calculadora792.menor(-100, 1000);
        Assertions.assertEquals(boolean916, true);
        int int1895 = calculadora792.divInt(-100, -1000);
        Assertions.assertEquals(int1895, 0);
        double double2978 = calculadora792.mulDouble(0.0, 0.55);
        Assertions.assertEquals(double2978, 0.0);
        java.lang.String string9359 = calculadora792.toLowCase("Go");
        Assertions.assertEquals(string9359, "go");
        double double287 = calculadora792.divDouble(-10.953, 10.953);
        Assertions.assertEquals(double287, -1.0);
    }
}
